# GENERATED from com.oracle.pic.dlc:devops-service-java-client:0.1.17 - DO NOT EDIT
# This is the DeploymentService API spec in YAML
# Clients and documentation will be auto-generated from this file.
# Review the API checklist:
# https://confluence.oci.oraclecorp.com/display/DEX/API+Consistency+Checklist
swagger: '2.0'
x-oracle-package: com.oracle.pic.dlc.deployment
x-obmcs-use-shared-work-requests-service: false
# Refer to SPLAT onboarding wiki for details
# https://confluence.oci.oraclecorp.com/display/PLAT/Splat+-+User+Guide
x-obmcs-splat:
  version: '1.0'
  services:
    deployment-service-control-plane-api:
      # Omitting audit implies you don't want Splat to audit operations for this service (deployment-service-control-plane-api)
      audit:
        # defaultMode can be either none/verification/automated.
        # verification: can be used for verification. Random percentage(< 1%) of requests will be audited by Splat
        # automated: means Splat will perform audit and add "oci-splat-audited" header to requests proxied downstream
        defaultMode: automated
        eventSource: deployment-service-control-plane-api
        requestParameterRules: [ { resources: ".*", actions: ".*", values: ".*" } ]
        requestHeaderRules:    [ { resources: ".*", actions: ".*", values: ".*" } ]
        responseHeaderRules:   [ { resources: ".*", actions: ".*", values: ".*" } ]
    deployment-service-management-plane-api:
      # Omitting audit implies you don't want Splat to audit operations for this service (deployment-service-management-plane-api)
      audit:
        # defaultMode can be either none/verification/automated.
        # verification: can be used for verification. Random percentage(< 1%) of requests will be audited by Splat
        # automated: means Splat will perform audit and add "oci-splat-audited" header to requests proxied downstream
        defaultMode: automated
        eventSource: deployment-service-management-plane-api
        requestParameterRules: [ { resources: ".*", actions: ".*", values: ".*" } ]
        requestHeaderRules:    [ { resources: ".*", actions: ".*", values: ".*" } ]
        responseHeaderRules:   [ { resources: ".*", actions: ".*", values: ".*" } ]
    deployment-service-control-plane-api-beta:
      prototype: deployment-service-control-plane-api
      serviceOverrides:
        deployment-service-control-plane-api: deployment-service-control-plane-api-beta
    deployment-service-management-plane-api-beta:
      prototype: deployment-service-management-plane-api
      serviceOverrides:
        deployment-service-management-plane-api: deployment-service-management-plane-api-beta
        deployment-service-control-plane-api: deployment-service-control-plane-api-beta
    deployment-service-control-plane-api-preprod:
      prototype: deployment-service-control-plane-api
      serviceOverrides:
        deployment-service-control-plane-api: deployment-service-control-plane-api-preprod
    deployment-service-management-plane-api-preprod:
      prototype: deployment-service-management-plane-api
      serviceOverrides:
        deployment-service-management-plane-api: deployment-service-management-plane-api-preprod
        deployment-service-control-plane-api: deployment-service-control-plane-api-preprod
info:
  title: DeploymentService API
  description: A description of the DeploymentService API
  version: "20210630"
# the domain of the service
host: 127.0.0.1
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths. Make sure to update the path in resource files after modifying the basePath.
basePath: /20210630
produces:
  - application/json

# please refer to https://confluence.oci.oraclecorp.com/display/DEX/Issue+Routing for details.
x-obmcs-issue-routing-table:
  default:
    email: oci_devlifecycle_group_us_grp@oracle.com
    # Todo-Replace: Update your Jira Project name - instance of https://jira.oci.oraclecorp.com against which tickets would be cut for service
    # teams. For example, if your Jira queue is https://jira.oci.oraclecorp.com/projects/DEX/issues, then you should only mention DEX.
    jiraProject: JIRA
    # Todo-Replace: Update your Jira Project name - instance of jira-sd.mc1.oracleiaas.com against which tickets may be cut for operational
    # issues. For example, if your Jira queue is https://jira-sd.mc1.oracleiaas.com/projects/SDK/queues, then you should only mention SDK.
    opsJiraProject: JIRA-OPS
    # For engagements related to relevant API calls on github, this user shall be tagged to respond. Please note that
    # this list should contain at least 2 items (PM and Dev Manager). The github users should be added the Oracle
    # organization in github. For details please check - https://confluence.oraclecorp.com/confluence/display/OGHO/Preparing+Your+GitHub+Account+for+OGHO.
    githubUsers:
      - raj-inamdar
      - jonschreiber

# Todo-Replace: Update your endpoint-template.
# As per the DNS wiki(see below), going ahead, the endpoints for web services would need to follow one of the following naming schemes:
#  - OCI Services - <service>.<region>.oci.{secondLevelDomain}
#  - PAAS Services - <service>.<region>.ocp.{secondLevelDomain}
#  - SAAS Services - <service>.<region>.ocs.{secondLevelDomain}
#
# For non-regional endpoints it should be 'https://<service>.(oci|ocp|ocs).{secondLevelDomain}'
# For region specific endpoints it should be 'https://<service>.{region}.(oci|ocp|ocs).{secondLevelDomain}'
#
# {region}-
#   It holds a special meaning during codegen of the different SDKs/CLI and on encountering this parameter,
#   the codegen shall generate an endpoint format that would be replaced by the region code from the equivalent of a
#   setRegion call during client configuration.
#
# {secondLevelDomain} -
#   Case sensitive parameter in this x-obmcs-endpoint-template is used to support different realms.
#
# For list of regions & secondLevelDomain and more information, please refer
#  Service Endpoint Update - https://confluence.oci.oraclecorp.com/display/DEX/Service+Endpoint+Update
#  External DNS: New Subdomain Request - https://confluence.oci.oraclecorp.com/display/OCIID/External+DNS%3A+New+Subdomain+Request
x-obmcs-endpoint-template: 'https://cloud-deploy.{region}.oci.{secondLevelDomain}'

# =============================================================================
# Anchors used to reference common headers, properties, ...etc...
# =============================================================================
x-anchors:
  x-headers:
    location: &ref-location
      description: Relative URL of the newly created resource.
      type: string
    etag: &ref-etag
      description: |
        For optimistic concurrency control. See `if-match`.
      type: string
    opc-work-request-id: &ref-opc-work-request-id
      description: |
        Unique Oracle-assigned identifier for the asynchronous request. You can use this to query status of the asynchronous operation.
      type: string
    opc-next-page: &ref-opc-next-page
      description: |
        For pagination of a list of items. When paging through a list, if this header appears in the response,
        then a partial list might have been returned. Include this value as the `page` parameter for the
        subsequent GET request to get the next batch of items.
      type: string
    opc-request-id: &ref-opc-request-id
      description: |
        Unique Oracle-assigned identifier for the request. If you need to contact
        Oracle about a particular request, please provide the request ID.
      type: string
    retry-after: &ref-retry-after
        type: number
        format: float
        description: A decimal number representing the number of seconds the client should wait before polling this endpoint again.

  x-properties:
    definedTags: &ref-definedTags
      description: |
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{"foo-namespace": {"bar-key": "value"}}`
      type: object
      additionalProperties:
        type: object
        description: |
          Key-value pair representing predefined tags' keys and values scoped to a namespace.
          Example: `{"bar-key": "value"}`
        additionalProperties:
          # NOTE: type: object is inaccurate but we are willing to accept it for now because the resulting codegen is correct and customers can't see the flaw.
          type: object
          description: |
            The value of the tag. Only string, integer and boolean types are supported.

    freeformTags: &ref-freeformTags
      description: |
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        Example: `{"bar-key": "value"}`
      type: object
      additionalProperties:
        type: string

    systemTags: &ref-systemTags
      description: |
        Usage of system tag keys. These predefined keys are scoped to namespaces.
        Example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
      type: object
      additionalProperties:
        type: object
        description: |
          Key-value pair representing system tags' keys and values scoped to a namespace.
          Example: `{"bar-key": "value"}`
        additionalProperties:
          # NOTE: type: object is inaccurate but we are willing to accept it for now because the resulting codegen is correct and customers can't see the flaw.
          type: object
          description: |
            The value of the tag. Only string, integer and boolean types are supported.

#==========[ Responses ]=================================================================================================
responses: &COMMON_HTTP_STATUSES
  400:
    description: Bad Request
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  401:
    description: Unauthorized
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  404:
    description: Not Found
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  409:
    description: Conflict
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  412:
    description: Precondition failed
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  429:
    description: Too Many Requests
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  500:
    description: Internal Server Error
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  default:
    description: Unknown Error
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'


#==========[ Paths ]=====================================================================================================
paths:

# ------------------- Application API -------------------
  /applications:
    get:
      tags: ['application']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          application:
            serviceResourceName: Application
            targetCompartmentId: request.parameter.compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_APPLICATION_INSPECT"]
        authorization:
          mode: automated
          check: resources['application'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_INSPECT')
        tagStore:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListApplications
      summary: Gets a list of all Applications in a compartment
      description: |
        Returns a list of Applications.
      parameters:
        - $ref: '#/parameters/ApplicationIdentifierQueryParam'
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/Application/lifecycleState"
          description: A filter to return only Applications that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/ApplicationSummary'
      responses:
        200:
          description: A page of ApplicationSummary objects.
          schema:
            $ref: '#/definitions/ApplicationCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['application']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          application:
            serviceResourceName: Application
            targetCompartmentId: request.body.compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            permissions: ["CLOUD_DEPLOY_APPLICATION_CREATE"]
        authorization:
          mode: automated
          check: resources['application'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: automated
          operationResourceName: application
        maximumAttemptCount: 3
      operationId: CreateApplication
      summary: Creates a new Application
      description: |
        Creates a new Application.
      parameters:
        - name: CreateApplicationDetails
          description: Details for the new Application.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateApplicationDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Application'
      responses:
        201:
          description: The Application that is created.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/Application'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /applications/{applicationId}:
    get:
      tags: ['application']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          application:
            serviceResourceName: Application
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetApplication', request.resourceId).compartmentId
            permissions: ["CLOUD_DEPLOY_APPLICATION_READ"]
        authorization:
          mode: automated
          check: resources['application'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_READ')
        tagStore:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetApplication
      summary: Get Application
      description: Gets a Application by identifier
      parameters:
        - $ref: '#/parameters/ApplicationIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the Application with the given id
          schema:
            $ref: '#/definitions/Application'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['application']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          application:
            serviceResourceName: Application
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetApplication', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: request.body.systemTags
            permissions: ["CLOUD_DEPLOY_APPLICATION_UPDATE"]
        authorization:
          mode: automated
          check: resources['application'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_UPDATE')
        tagStore:
          mode: automated
        search:
          mode: automated
          operationResourceName: application
        maximumAttemptCount: 3
      operationId: UpdateApplication
      summary: Update the Application identified by the id
      description: Updates the Application
      parameters:
        - $ref: '#/parameters/ApplicationIdentifierPathParam'
        - name: UpdateApplicationDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateApplicationDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Application'
      responses:
        202:
          description: Accepted the request. The Application will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/Application'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['application']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          application:
            serviceResourceName: Application
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetApplication', request.resourceId).compartmentId
            actionKind: delete
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            permissions: ["CLOUD_DEPLOY_APPLICATION_DELETE"]
        authorization:
          mode: automated
          check: resources['application'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_DELETE')
        search:
          mode: automated
          operationResourceName: application
        maximumAttemptCount: 3
      operationId: DeleteApplication
      summary: Delete a provisioned Application
      description: Deletes a Application resource by identifier
      parameters:
        - $ref: '#/parameters/ApplicationIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Application'
      responses:
        202:
          description: Accepted the request. The Application will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /applications/{applicationId}/actions/changeCompartment:
    post:
      tags: ['application']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          applicationBeforeMove:
            serviceResourceName: Application
            actionKind: READ
            resourceOcid: request.resourceId
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetApplication', request.resourceId).compartmentId
            reconciliationCanStartAfterSecs: 60
            permissions: ["CLOUD_DEPLOY_APPLICATION_MOVE"]
          applicationAfterMove:
            serviceResourceName: Application
            actionKind: MOVE
            resourceOcid: request.resourceId
            targetCompartmentId: request.body.compartmentId
            reconciliationCanStartAfterSecs: 60
            permissions: ["CLOUD_DEPLOY_APPLICATION_MOVE"]
        authorization:
          mode: automated
          check: >-
            resources['applicationBeforeMove'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_MOVE') &&
            resources['applicationAfterMove'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_MOVE')
          # Compartment move does NOT allow the user to move the resource between tenancies.
          allowCrossTenancy: true
          sameTenancyResources: ["applicationBeforeMove", "applicationAfterMove"]
          crossTenancyAssociations: []
        tagStore:
          mode: automated
        search:
          mode: automated
          operationResourceName: applicationAfterMove
        maximumAttemptCount: 3
      operationId: ChangeApplicationCompartment
      summary: Moves a resource into a different compartment.
      description: Moves a Application resource from one compartment identifier to another. When provided, If-Match is checked against ETag values of the resource.
      parameters:
        - $ref: "#/parameters/ApplicationIdentifierPathParam"
        - name: ChangeApplicationCompartmentDetails
          in: body
          description: The information to be updated.
          required: true
          schema:
            $ref: '#/definitions/ChangeApplicationCompartmentDetails'
        - $ref: "#/parameters/IfMatchHeader"
        - $ref: "#/parameters/RequestIdHeader"
        - $ref: "#/parameters/RetryTokenHeader"
      x-related-resource: '#/definitions/Application'
      responses:
        202:
          description: Accepted the request. The Application resource will be moved into a different compartment.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
# ------------------ Environment API --------------------
  /environments:
    get:
      tags: ['environment']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          environment:
            serviceResourceName: Environment
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              downstream.getOr404('deployment-service-control-plane-api','GetApplication',request.parameter.applicationId).compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_ENVIRONMENT_INSPECT"]
        authorization:
          mode: automated
          check: resources['environment'].grantedPermissions.contains('CLOUD_DEPLOY_ENVIRONMENT_INSPECT')
        tagStore:
          mode: automated
        audit:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListEnvironments
      summary: Gets a list of all Environments in a compartment
      description: |
        Returns a list of Environments.
      parameters:
        - $ref: '#/parameters/ApplicationIdQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - $ref: '#/parameters/EnvironmentIdQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/Environment/lifecycleState"
          description: A filter to return only Environments that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/EnvironmentSummary'
      responses:
        200:
          description: A page of EnvironmentCollection objects.
          schema:
            $ref: '#/definitions/EnvironmentCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['environment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          environment:
            serviceResourceName: Environment
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api','GetApplication',request.body.applicationId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            permissions: ["CLOUD_DEPLOY_ENVIRONMENT_CREATE"]
        authorization:
          mode: automated
          check: resources['environment'].grantedPermissions.contains('CLOUD_DEPLOY_ENVIRONMENT_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: environment
        maximumAttemptCount: 3
      operationId: CreateEnvironment
      summary: Creates a new Environment
      description: |
        Creates a new Environment.
      parameters:
        - name: CreateEnvironmentDetails
          description: Details for the new Environment.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateEnvironmentDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Environment'
      responses:
        201:
          description: The Environment that is created.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id:  *ref-opc-request-id
          schema:
            $ref: '#/definitions/Environment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /environments/{environmentId}:
    get:
      tags: ['environment']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          environment:
            serviceResourceName: Environment
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetEnvironment', request.resourceId).compartmentId
            permissions: ["CLOUD_DEPLOY_ENVIRONMENT_READ"]
        authorization:
          mode: automated
          check: resources['environment'].grantedPermissions.contains('CLOUD_DEPLOY_ENVIRONMENT_READ')
        tagStore:
          mode: automated
        audit:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetEnvironment
      summary: Get Environment
      description: Gets a Environment by identifier
      parameters:
        - $ref: '#/parameters/EnvironmentIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the Environment with the given id
          schema:
            $ref: '#/definitions/Environment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['environment']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          environment:
            serviceResourceName: Environment
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetEnvironment', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: request.body.systemTags
            permissions: ["CLOUD_DEPLOY_ENVIRONMENT_UPDATE"]
        authorization:
          mode: automated
          check: resources['environment'].grantedPermissions.contains('CLOUD_DEPLOY_ENVIRONMENT_UPDATE')
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: environment
        maximumAttemptCount: 3
      operationId: UpdateEnvironment
      summary: Update the Environment identified by the id
      description: Updates the Environment
      parameters:
        - $ref: '#/parameters/EnvironmentIdentifierPathParam'
        - name: UpdateEnvironmentDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateEnvironmentDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Environment'
      responses:
        202:
          description: Accepted the request. The Environment will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/Environment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['environment']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          environment:
            serviceResourceName: Environment
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetEnvironment', request.resourceId).compartmentId
            resourceOcid: request.resourceId
            actionKind: delete
            reconciliationCanStartAfterSecs: 60
            permissions: ["CLOUD_DEPLOY_ENVIRONMENT_DELETE"]
        authorization:
          mode: automated
          check: resources['environment'].grantedPermissions.contains('CLOUD_DEPLOY_ENVIRONMENT_DELETE')
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: environment
        maximumAttemptCount: 3
      operationId: DeleteEnvironment
      summary: Delete a provisioned Environment
      description: Deletes a Environment resource by identifier
      parameters:
        - $ref: '#/parameters/EnvironmentIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Environment'
      responses:
        202:
          description: Accepted the request. The Environment will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
# ------------------- Artifact API ----------------------
  /artifacts:
    get:
      tags: ['artifact']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          artifact:
            serviceResourceName: Artifact
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              downstream.getOr404('deployment-service-control-plane-api','GetApplication',request.parameter.applicationId).compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_ARTIFACT_INSPECT"]
        authorization:
          mode: automated
          check: resources['artifact'].grantedPermissions.contains('CLOUD_DEPLOY_ARTIFACT_INSPECT')
        tagStore:
          mode: automated
        audit:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListArtifacts
      summary: Gets a list of all Artifacts in a compartment
      description: |
        Returns a list of Artifacts.
      parameters:
        - $ref: '#/parameters/ArtifactIdQueryParam'
        - $ref: '#/parameters/ApplicationIdQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/Artifact/lifecycleState"
          description: A filter to return only Artifacts that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/ArtifactSummary'
      responses:
        200:
          description: A page of ArtifactCollection objects.
          schema:
            $ref: '#/definitions/ArtifactCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['artifact']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          artifact:
            serviceResourceName: Artifact
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api','GetApplication',request.body.applicationId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            permissions: ["CLOUD_DEPLOY_ARTIFACT_CREATE"]
        authorization:
          mode: automated
          check: resources['artifact'].grantedPermissions.contains('CLOUD_DEPLOY_ARTIFACT_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: artifact
        maximumAttemptCount: 3
      operationId: CreateArtifact
      summary: Creates a new Artifact
      description: |
        Creates a new Artifact.
      parameters:
        - name: CreateArtifactDetails
          description: Details for the new Artifact.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateArtifactDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Artifact'
      responses:
        201:
          description: The Artifact is created.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id:  *ref-opc-request-id
          schema:
            $ref: '#/definitions/Artifact'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /artifacts/{artifactId}:
    get:
      tags: ['artifact']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          artifact:
            serviceResourceName: Artifact
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetArtifact', request.resourceId).compartmentId
            permissions: ["CLOUD_DEPLOY_ARTIFACT_READ"]
        authorization:
          mode: automated
          check: resources['artifact'].grantedPermissions.contains('CLOUD_DEPLOY_ARTIFACT_READ')
        tagStore:
          mode: automated
        audit:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetArtifact
      summary: Get Artifact
      description: Gets a Artifact by identifier
      parameters:
        - $ref: '#/parameters/ArtifactIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the Artifact with the given id
          schema:
            $ref: '#/definitions/Artifact'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['artifact']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          artifact:
            serviceResourceName: Artifact
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetArtifact', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: request.body.systemTags
            permissions: ["CLOUD_DEPLOY_ARTIFACT_UPDATE"]
        authorization:
          mode: automated
          check: resources['artifact'].grantedPermissions.contains('CLOUD_DEPLOY_ARTIFACT_UPDATE')
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: artifact
        maximumAttemptCount: 3
      operationId: UpdateArtifact
      summary: Update the Artifact identified by the id
      description: Updates the Artifact
      parameters:
        - $ref: '#/parameters/ArtifactIdentifierPathParam'
        - name: UpdateArtifactDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateArtifactDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Artifact'
      responses:
        202:
          description: Accepted the request. The Artifact will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/Artifact'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['artifact']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          artifact:
            serviceResourceName: Artifact
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetArtifact', request.resourceId).compartmentId
            resourceOcid: request.resourceId
            actionKind: delete
            reconciliationCanStartAfterSecs: 60
            permissions: ["CLOUD_DEPLOY_ARTIFACT_DELETE"]
        authorization:
          mode: automated
          check: resources['artifact'].grantedPermissions.contains('CLOUD_DEPLOY_ARTIFACT_DELETE')
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: artifact
        maximumAttemptCount: 3
      operationId: DeleteArtifact
      summary: Delete a provisioned Artifact
      description: Deletes a Artifact resource by identifier
      parameters:
        - $ref: '#/parameters/ArtifactIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Artifact'
      responses:
        202:
          description: Accepted the request. The Artifact will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
  # ------------------- Pipeline API -------------------
  /pipelines:
    get:
      tags: ['pipeline']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              downstream.getOr404('deployment-service-control-plane-api','GetApplication',request.parameter.applicationId).compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_PIPELINE_INSPECT"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_INSPECT')
        tagStore:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListPipelines
      summary: Gets a list of all Pipelines in a Compartment or a Project.
      description: |
        Returns a list of Pipelines.
      parameters:
        - $ref: '#/parameters/PipelineIdQueryParam'
        - $ref: '#/parameters/ApplicationIdQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/Pipeline/lifecycleState"
          description: A filter to return only Pipelines that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/PipelineSummary'
      responses:
        200:
          description: A page of PipelineSummary objects.
          schema:
            $ref: '#/definitions/PipelineCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['pipeline']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api','GetApplication',request.body.applicationId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            permissions: ["CLOUD_DEPLOY_PIPELINE_CREATE"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: automated
          operationResourceName: pipeline
        maximumAttemptCount: 3
      operationId: CreatePipeline
      summary: Creates a new Pipeline
      description: |
        Creates a new Pipeline.
      parameters:
        - name: CreatePipelineDetails
          description: Details for the new Pipeline.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreatePipelineDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Pipeline'
      responses:
        201:
          description: The Pipeline that is created.
          headers:
            location: *ref-location
            opc-work-request-id: *ref-opc-work-request-id
            etag: *ref-etag
            opc-request-id:  *ref-opc-request-id
          schema:
            $ref: '#/definitions/Pipeline'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /pipelines/{pipelineId}:
    get:
      tags: ['pipeline']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetPipeline', request.resourceId).compartmentId
            permissions: ["CLOUD_DEPLOY_PIPELINE_READ"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_READ')
        tagStore:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetPipeline
      summary: Get Pipeline
      description: Gets a Pipeline by identifier
      parameters:
        - $ref: '#/parameters/PipelineIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the Pipeline with the given id
          schema:
            $ref: '#/definitions/Pipeline'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['pipeline']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetPipeline', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: request.body.systemTags
            permissions: ["CLOUD_DEPLOY_PIPELINE_UPDATE"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_UPDATE')
        tagStore:
          mode: automated
        search:
          mode: automated
          operationResourceName: pipeline
        maximumAttemptCount: 3
      operationId: UpdatePipeline
      summary: Update the Pipeline identified by the id
      description: Updates the Pipeline
      parameters:
        - $ref: '#/parameters/PipelineIdentifierPathParam'
        - name: UpdatePipelineDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdatePipelineDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Pipeline'
      responses:
        202:
          description: Accepted the request. The Pipeline will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/Pipeline'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['pipeline']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetPipeline', request.resourceId).compartmentId
            actionKind: delete
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            permissions: ["CLOUD_DEPLOY_PIPELINE_DELETE"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_DELETE')
        search:
          mode: automated
          operationResourceName: pipeline
        maximumAttemptCount: 3
      operationId: DeletePipeline
      summary: Delete a provisioned Pipeline
      description: Deletes a Pipeline resource by identifier
      parameters:
        - $ref: '#/parameters/PipelineIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Pipeline'
      responses:
        202:
          description: Accepted the request. The Pipeline will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
# ------------------- Stage API -------------------------
  /stages:
    get:
      tags: ['stage']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          stage:
            serviceResourceName: Stage
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              downstream.getOr404('deployment-service-control-plane-api','GetPipeline',request.parameter.pipelineId).compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_STAGE_INSPECT"]
        authorization:
          mode: automated
          check: resources['stage'].grantedPermissions.contains('CLOUD_DEPLOY_STAGE_INSPECT')
        tagStore:
          mode: automated
        audit:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListStages
      summary: Gets a list of all Stages in a compartment
      description: |
        Returns a list of Stages.
      parameters:
        - $ref: '#/parameters/StageIdentifierQueryParam'
        - $ref: '#/parameters/PipelineIdQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/Stage/lifecycleState"
          description: A filter to return only Stages that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/StageSummary'
      responses:
        200:
          description: A page of StageCollection objects.
          schema:
            $ref: '#/definitions/StageCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['stage']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          stage:
            serviceResourceName: Stage
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api','GetPipeline',request.body.pipelineId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            permissions: ["CLOUD_DEPLOY_STAGE_CREATE"]
        authorization:
          mode: automated
          check: resources['stage'].grantedPermissions.contains('CLOUD_DEPLOY_STAGE_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: stage
        maximumAttemptCount: 3
      operationId: CreateStage
      summary: Creates a new Stage
      description: |
        Creates a new Stage.
      parameters:
        - name: CreateStageDetails
          description: Details for the new Stage.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateStageDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Stage'
      responses:
        201:
          description: Stage that is created.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id:  *ref-opc-request-id
          schema:
            $ref: '#/definitions/Stage'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /stages/{stageId}:
    get:
      tags: ['stage']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          stage:
            serviceResourceName: Stage
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetStage', request.resourceId).compartmentId
            permissions: ["CLOUD_DEPLOY_STAGE_READ"]
        authorization:
          mode: automated
          check: resources['stage'].grantedPermissions.contains('CLOUD_DEPLOY_STAGE_READ')
        tagStore:
          mode: automated
        audit:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetStage
      summary: Get Stage
      description: Gets a Stage by identifier
      parameters:
        - $ref: '#/parameters/StageIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the Stage with the given id
          schema:
            $ref: '#/definitions/Stage'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['stage']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          stage:
            serviceResourceName: Stage
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetStage', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: request.body.systemTags
            permissions: ["CLOUD_DEPLOY_STAGE_UPDATE"]
        authorization:
          mode: automated
          check: resources['stage'].grantedPermissions.contains('CLOUD_DEPLOY_STAGE_UPDATE')
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: stage
        maximumAttemptCount: 3
      operationId: UpdateStage
      summary: Update the Stage identified by the id
      description: Updates the Stage
      parameters:
        - $ref: '#/parameters/StageIdentifierPathParam'
        - name: UpdateStageDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateStageDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Stage'
      responses:
        202:
          description: Accepted the request. The Stage will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/Stage'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['stage']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          stage:
            serviceResourceName: Stage
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetStage', request.resourceId).compartmentId
            resourceOcid: request.resourceId
            actionKind: delete
            reconciliationCanStartAfterSecs: 60
            permissions: ["CLOUD_DEPLOY_STAGE_DELETE"]
        authorization:
          mode: automated
          check: resources['stage'].grantedPermissions.contains('CLOUD_DEPLOY_STAGE_DELETE')
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: automated
          operationResourceName: stage
        maximumAttemptCount: 3
      operationId: DeleteStage
      summary: Delete a provisioned Stage
      description: Deletes a Stage resource by identifier
      parameters:
        - $ref: '#/parameters/StageIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Stage'
      responses:
        202:
          description: Accepted the request. The Stage will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
# ------------------- Deployment API --------------------
  /deployments:
    get:
      tags: ['deployment']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              request.parameter.applicationId ? downstream.getOr404('deployment-service-control-plane-api','GetApplication',request.parameter.applicationId).compartmentId :
              downstream.getOr404('deployment-service-control-plane-api','GetPipeline',request.parameter.pipelineId).compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_DEPLOYMENT_INSPECT"]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('CLOUD_DEPLOY_DEPLOYMENT_INSPECT')
        tagStore:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListDeployments
      summary: Gets a list of all Deployments in a compartment
      description: |
        Returns a list of Deployments.
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierQueryParam'
        - $ref: '#/parameters/PipelineIdQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - $ref: '#/parameters/ApplicationIdQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/Deployment/lifecycleState"
          description: A filter to return only Deployments that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeploymentSummary'
      responses:
        200:
          description: A page of DeploymentCollection objects.
          schema:
            $ref: '#/definitions/DeploymentCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api','GetPipeline',request.body.pipelineId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            permissions: ["CLOUD_DEPLOY_DEPLOYMENT_CREATE"]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('CLOUD_DEPLOY_DEPLOYMENT_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: automated
          operationResourceName: deployment
        maximumAttemptCount: 3
      operationId: CreateDeployment
      summary: Creates a new Deployment
      description: |
        Creates a new Deployment.
      parameters:
        - name: CreateDeploymentDetails
          description: Details for the new Deployment.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateDeploymentDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Deployment'
      responses:
        200:
          description: Accepted the request. The Deployment will be created.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id:  *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployments/{deploymentId}:
    get:
      tags: ['deployment']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-management-plane-api', 'GetDeployment', request.resourceId).compartmentId
            permissions: ["CLOUD_DEPLOY_DEPLOYMENT_READ"]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('CLOUD_DEPLOY_DEPLOYMENT_READ')
        tagStore:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetDeployment
      summary: Get Deployment
      description: Gets a Deployment by identifier
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the Deployment with the given id
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: downstream.getOr404('deployment-service-management-plane-api', 'GetDeployment', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: request.body.systemTags
            permissions: ["CLOUD_DEPLOY_DEPLOYMENT_UPDATE"]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('CLOUD_DEPLOY_DEPLOYMENT_UPDATE')
        tagStore:
          mode: automated
        search:
          mode: automated
          operationResourceName: deployment
        maximumAttemptCount: 3
      operationId: UpdateDeployment
      summary: Update the Deployment identified by the id
      description: Updates the Deployment
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - name: UpdateDeploymentDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateDeploymentDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Deployment'
      responses:
        200:
          description: Accepted the request. The Deployment will be updated.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: [ 'deployment-service-management-plane-api' ]
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: downstream.getOr404('deployment-service-management-plane-api', 'GetDeployment', request.resourceId).compartmentId
            actionKind: delete
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            permissions: [ "CLOUD_DEPLOY_DEPLOYMENT_DELETE" ]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('CLOUD_DEPLOY_DEPLOYMENT_DELETE')
        search:
          mode: automated
          operationResourceName: deployment
        maximumAttemptCount: 3
      operationId: DeleteDeployment
      summary: Delete a provisioned Deployment
      description: Deletes a Deployment resource by identifier
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Deployment'
      responses:
        204:
          description: Accepted the request. The Deployment will be deleted.
          headers:
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
  /deployments/{deploymentId}/actions/approve:
    post:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: downstream.getOr404('deployment-service-management-plane-api', 'GetDeployment', request.resourceId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            permissions: ['CLOUD_DEPLOY_DEPLOYMENT_APPROVE']
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('CLOUD_DEPLOY_DEPLOYMENT_APPROVE')
        tagStore:
          mode: automated
          behavior: authorizationOnly
        maximumAttemptCount: 3
      operationId: ApproveDeployment
      summary: Submit stage approval.
      description: Submit stage approval.
      parameters:
        - $ref: "#/parameters/DeploymentIdentifierPathParam"
        - name: ApproveDeploymentDetails
          in: body
          description: The stage information for approval.
          required: true
          schema:
            $ref: '#/definitions/ApproveDeploymentDetails'
        - $ref: "#/parameters/IfMatchHeader"
        - $ref: "#/parameters/RequestIdHeader"
        - $ref: "#/parameters/RetryTokenHeader"
      x-related-resource: '#/definitions/Deployment'
      responses:
        200:
          description: Approved the pending deployment successfully.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
  # ------------------- Work Requests for control plane api ------------------------------
  /workRequests/{workRequestId}:

    get:
      tags: ['workRequest']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          workRequest:
            serviceResourceName: WorkRequest
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetWorkRequest', request.resourceId).compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_APPLICATION_READ"]
        authorization:
          mode: automated
          check: resources['workRequest'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_READ')
        maximumAttemptCount: 3
      operationId: GetWorkRequest
      summary: GET Work Request Status
      x-related-resource: '#/definitions/WorkRequest'
      description: Gets the status of the work request with the given ID.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          schema:
            $ref: '#/definitions/WorkRequest'
          description: The detail of the work request.
          headers:
            opc-request-id: *ref-opc-request-id
            retry-after: *ref-retry-after
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests:
    get:
      tags: ['workRequest']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          workRequest:
            serviceResourceName: WorkRequest
            targetCompartmentId: request.parameter.compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_APPLICATION_INSPECT"]
        authorization:
          mode: automated
          check: resources['workRequest'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_INSPECT')
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListWorkRequests
      summary: List Work Requests
      x-related-resource: '#/definitions/WorkRequest'
      description: |
        Lists the work requests in a compartment.
      parameters:
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          schema:
            $ref: '#/definitions/WorkRequestCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests/{workRequestId}/errors:
    get:
      tags: ['workRequest']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          workRequest:
            serviceResourceName: WorkRequest
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetWorkRequest', request.resourceId).compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_APPLICATION_INSPECT"]
        authorization:
          mode: automated
          check: resources['workRequest'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_INSPECT')
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListWorkRequestErrors
      summary: Lists work request errors
      x-related-resource: '#/definitions/WorkRequestError'
      description: |
        Return a (paginated) list of errors for a given work request.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
      responses:
        200:
          description: List of work request errors. #TODO: change descriptions
          headers:
            opc-next-page: *ref-opc-next-page
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/WorkRequestErrorCollection'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests/{workRequestId}/logs:
    get:
      tags: ['workRequest']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          workRequest:
            serviceResourceName: WorkRequest
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetWorkRequest', request.resourceId).compartmentId
            actionKind: read
            permissions: ["CLOUD_DEPLOY_APPLICATION_INSPECT"]
        authorization:
          mode: automated
          check: resources['workRequest'].grantedPermissions.contains('CLOUD_DEPLOY_APPLICATION_INSPECT')
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListWorkRequestLogs
      summary: Lists work request logs
      x-related-resource: '#/definitions/WorkRequestLogEntry'
      description: |
        Return a (paginated) list of logs for a given work request.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
      responses:
        200:
          description: List of work request logs collection.
          headers:
            opc-next-page: *ref-opc-next-page
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/WorkRequestLogEntryCollection'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
# This is the OCI Logging Integration API spec in YAML
# Refer https://confluence.oci.oraclecorp.com/display/LUM/S2S+API#S2SAPI-APISpec
# Original spec file: https://bitbucket.oci.oraclecorp.com/projects/LUM/repos/hydra-controlplane/browse/hydra-controlplane-api-spec/specs/s2s.cond.yaml
# Review the API checklist:
# https://confluence.oci.oraclecorp.com/display/DEX/API+Consistency+Checklist

  /logging:
    post:
      summary: Enables logging for a resource.
      tags: ['OciServiceLogging']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetPipeline', request.body.resource).compartmentId
            actionKind: update
            resourceOcid: request.body.resource
            permissions: ["CLOUD_DEPLOY_PIPELINE_UPDATE"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_UPDATE')
        tagStore:
          mode: none
      operationId: StartLogging
      x-related-resource: '#/definitions/OciServiceLoggingConfig'
      description: |
        Notifies OCI Service to enable logging for the specific resource.
      parameters:
        - name: config
          description: Logging configuration
          in: body
          required: true
          schema:
            $ref: '#/definitions/OciServiceLoggingConfig'
        # Headers
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: OCI service successfully enabled logging for the resource
          schema:
            $ref: '#/definitions/OciServiceLoggingConfig'
          headers:
            opc-request-id: *ref-opc-request-id
            etag: *ref-etag
        <<: *COMMON_HTTP_STATUSES

    put:
      summary: Updates category parameters for logging resource.
      tags: ['OciServiceLogging']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetPipeline', request.body.resource).compartmentId
            actionKind: update
            resourceOcid: request.body.resource
            permissions: ["CLOUD_DEPLOY_PIPELINE_UPDATE"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_UPDATE')
        tagStore:
          mode: none
      operationId: UpdateLogging
      x-related-resource: '#/definitions/OciServiceLoggingConfig'
      description: |
        Updates category parameters in logging resource.
      parameters:
        - name: config
          in: body
          required: true
          schema:
            $ref: '#/definitions/OciServiceLoggingConfig'
        # Header
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: Service has no action in update
          headers:
            opc-request-id: *ref-opc-request-id
        200:
          description: success
          schema:
            $ref: '#/definitions/OciServiceLoggingConfig'
          headers:
            opc-request-id: *ref-opc-request-id
            etag: *ref-etag
        <<: *COMMON_HTTP_STATUSES

  /logging/{logId}:
    get:
      summary: Finds logging resource.
      tags: ['OciServiceLogging']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetPipeline', downstream.getOr404('deployment-service-control-plane-api', 'GetLogging', request.resourceId).resource).compartmentId
            actionKind: read
            resourceOcid: downstream.getOr404('deployment-service-control-plane-api', 'GetLogging', request.resourceId).resource
            permissions: ["CLOUD_DEPLOY_PIPELINE_READ"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_READ')
        tagStore:
          mode: none
      operationId: GetLogging
      x-related-resource: '#/definitions/OciServiceLoggingConfig'
      description: |
        Get logging configuration for a givent logId.
      parameters:
        - $ref: '#/parameters/LogIdPathParam'
        # Header
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Service log configuration is found successfully
          schema:
            $ref: '#/definitions/OciServiceLoggingConfig'
          headers:
            opc-request-id: *ref-opc-request-id
            etag: *ref-etag
        <<: *COMMON_HTTP_STATUSES

    delete:
      summary: Disables logging to the log object.
      tags: ['OciServiceLogging']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          pipeline:
            serviceResourceName: Pipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetPipeline', request.parameter.resource).compartmentId
            actionKind: update
            resourceOcid: request.parameter.resource
            permissions: ["CLOUD_DEPLOY_PIPELINE_UPDATE"]
        authorization:
          mode: automated
          check: resources['pipeline'].grantedPermissions.contains('CLOUD_DEPLOY_PIPELINE_UPDATE')
        tagStore:
          mode: none
      operationId: StopLogging
      x-related-resource: '#/definitions/OciServiceLoggingConfig'
      description: |
        Disable logging to the log object.
      parameters:
        - $ref: '#/parameters/LogIdPathParam'
        - $ref: '#/parameters/TenancyIdQueryParam'
        - $ref: '#/parameters/ResourceQueryParam'
        - $ref: '#/parameters/CategoryQueryParam'
        # Headers
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: Service completed action or resource does not exist or log id is not attached to resource
          headers:
            opc-request-id: *ref-opc-request-id
        <<: *COMMON_HTTP_STATUSES

#==========[ Definitions ]===============================================================================================
definitions:

# Shared definitions

  SortOrder:
    type: string
    description: Sort orders.
    enum: &SORTORDER
      - ASC
      - DESC

  Error:
    description: Error Information.
    required:
      - code
      - message
    properties:
      code:
        description: A short error code that defines the error, meant for programmatic parsing.
        type: string
      message:
        description: A human-readable error string.
        type: string

# --- Application model definitions
  Application:
    description: Application consists of Environment, Artifacts, Pipelines and Deployments for a group of related services.
    type: object
    x-obmcs-splat:
      resourceKind: application
      ocidEntityType: clouddeployapplication
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetApplication
      listResourcesOperationId: ListApplications
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "CloudDeployApplication"
        scope: "customer"
    required:
      - id
      - compartmentId
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      displayName:
        description: Application Identifier, can be renamed
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      timeCreated:
        description: The time the the Application was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Application was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Application.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  ApplicationSummary:
    description: Summary of the Application.
    type: object
    required:
      - id
      - compartmentId
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      displayName:
        description: Application Identifier, can be renamed
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      timeCreated:
        description: The time the the Application was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Application was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Deployment.
        type: string
        x-obmcs-enumref: "#/definitions/Application/lifecycleState"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  ApplicationCollection:
    type: object
    description: Results of an application search.
    required:
      - items
    properties:
      items:
        type: array
        description: Array of ApplicationSummary items.
        items:
          $ref: "#/definitions/ApplicationSummary"

  CreateApplicationDetails:
    description: The information about new Application to be created.
    type: object
    required:
      - displayName
      - compartmentId
    properties:
      displayName:
        description: Application display name
        type: string
        minLength: 1
        maxLength: 255
      compartmentId:
        description: Compartment Identifier
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateApplicationDetails:
    description: The information to be updated for the given Application.
    type: object
    required:
      - displayName
    properties:
      displayName:
        description: Application display name
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  ChangeApplicationCompartmentDetails:
    description: The OCID of the compartment into which the application should be moved.
    type: object
    required:
      - compartmentId
    properties:
      compartmentId:
        type: string
        minLength: 1
        maxLength: 255
        description: |
          The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment into which the resource should be moved.
# --- Artifact model definitions
  Artifact:
    description: Description of Artifact.
    type: object
    x-obmcs-splat:
      resourceKind: artifact
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # This value is used in multiple ways by SPLAT: one is authz checks when this type gets passed to identity,
      # the other is OCID generation for SPLAT-managed resources like this one.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: clouddeployartifact
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetArtifact
      listResourcesOperationId: ListArtifacts
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "CloudDeployArtifact"
        scope: "customer"
    required:
      - id
      - projectId
      - compartmentId
      - artifactType
      - artifactSource
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the Artifact
        type: string
        maxLength: 400
      displayName:
        description: Artifact Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      artifactType:
        description: Type of the Artifact
        type: string
        enum:
          - DEPLOYMENT_SPEC
          - JOB_SPEC
          - KUBERNETES_MANIFEST
          - GENERIC_FILE
      artifactSource:
        $ref: "#/definitions/ArtifactSource"
      artifactParameters:
        $ref: "#/definitions/ArtifactParameterCollection"
      timeCreated:
        description: The time the the Artifact was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Artifact was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Artifact.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  ArtifactSummary:
    description: Summary of the Artifact.
    type: object
    required:
      - id
      - projectId
      - compartmentId
      - artifactType
      - artifactSource
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the Artifact
        type: string
        maxLength: 400
      displayName:
        description: Artifact Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      artifactType:
        description: Type of the Artifact
        type: string
        x-obmcs-enumref: "#/definitions/Artifact/artifactType"
      artifactSource:
        $ref: "#/definitions/ArtifactSource"
      artifactParameters:
        $ref: "#/definitions/ArtifactParameterCollection"
      timeCreated:
        description: The time the the Artifact was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Artifact was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Artifact.
        type: string
        x-obmcs-enumref: "#/definitions/Artifact/lifecycleState"
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  ArtifactCollection:
    type: object
    description: Results of an Artifact search.
    required:
      - items
    properties:
      items:
        type: array
        description: ArtifactSummary items found for the search.
        items:
          $ref: "#/definitions/ArtifactSummary"

  CreateArtifactDetails:
    description: The information about new Artifact.
    type: object
    required:
      - displayName
      - artifactType
      - artifactSource
      - projectId
    properties:
      description:
        description: Optional description about the Artifact
        type: string
        maxLength: 400
      displayName:
        description: Artifact Name
        type: string
        minLength: 1
        maxLength: 255
      artifactType:
        description: Type of the Artifact
        type: string
        x-obmcs-enumref: "#/definitions/Artifact/artifactType"
      artifactSource:
        $ref: "#/definitions/CreateArtifactSourceDetails"
      artifactParameters:
        $ref: "#/definitions/ArtifactParameterCollection"
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateArtifactDetails:
    description: The information to be updated.
    type: object
    properties:
      description:
        description: Optional description about the Artifact
        type: string
        maxLength: 400
      displayName:
        description: Artifact Identifier
        type: string
        minLength: 1
        maxLength: 255
      artifactType:
        description: Type of the Artifact
        type: string
        x-obmcs-enumref: "#/definitions/Artifact/artifactType"
      artifactSource:
        $ref: "#/definitions/UpdateArtifactSourceDetails"
      artifactParameters:
        $ref: "#/definitions/ArtifactParameterCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  ArtifactParameterCollection:
    type: object
    description: Specifies list of parameters present in Artifact
    properties:
      items:
        description: Specifies parameters present in Artifact
        type: array
        items:
          $ref: '#/definitions/ArtifactParameter'
    required:
      - items

  ArtifactParameter:
    type: object
    description: Specifies parameter present in Artifact
    properties:
      name:
        description: Name of the parameter
        type: string
    required:
      - name

  ArtifactSource:
    type: object
    description: Specifies source of an artifact
    discriminator: artifactSourceType
    properties:
      artifactSourceType:
        description: Specifies types of artifact sources
        type: string
        enum:
          - OBJECT_STORAGE
          - INLINE
          - OCIR
          - GENERIC_ARTIFACT
    required:
      - artifactSourceType

  CreateArtifactSourceDetails:
    discriminator: artifactSourceType
    description: Specifies source of an artifact
    properties:
      artifactSourceType:
        description: Specifies types of artifact sources
        type: string
        x-obmcs-enumref: '#/definitions/ArtifactSource/artifactSourceType'
    required:
      - artifactSourceType

  UpdateArtifactSourceDetails:
    discriminator: artifactSourceType
    description: Specifies source of an artifact
    properties:
      artifactSourceType:
        description: Specifies types of artifact sources
        type: string
        x-obmcs-enumref: '#/definitions/ArtifactSource/artifactSourceType'

  ObjectStorageArtifactSource:
    description: Specifies the Object Storage Artifact Source Details
    allOf:
      - $ref: '#/definitions/ArtifactSource'
      - discriminator: OBJECT_STORAGE
        properties:
          bucketName:
            description: Specifies the object storage bucket
            type: string
          namespaceName:
            description: Specifies the object storage namespace
            type: string
          objectNameFilter:
            $ref: '#/definitions/ObjectNameFilter'
        required:
          - bucketName
          - namespaceName

  CreateObjectStorageArtifactSourceDetails:
    description: Specifies the Object Storage Artifact Source Details
    allOf:
      - $ref: '#/definitions/CreateArtifactSourceDetails'
      - discriminator: OBJECT_STORAGE
        properties:
          bucketName:
            description: Specifies the object storage bucket
            type: string
          namespaceName:
            description: Specifies the object storage namespace
            type: string
          objectNameFilter:
            $ref: '#/definitions/CreateObjectNameFilterDetails'
        required:
          - bucketName
          - namespaceName

  UpdateObjectStorageArtifactSourceDetails:
    description: Specifies the Object Storage Artifact Source Details
    allOf:
      - $ref: '#/definitions/UpdateArtifactSourceDetails'
      - discriminator: OBJECT_STORAGE
        properties:
          bucketName:
            description: Specifies the object storage bucket
            type: string
          namespaceName:
            description: Specifies the object storage namespace
            type: string
          objectNameFilter:
            $ref: '#/definitions/UpdateObjectNameFilterDetails'

  ObjectNameFilter:
    description: Specifies a filter that compares object names to a set of prefixes or patterns
    properties:
      inclusionPatterns:
        description: An array of glob patterns to match the object names to exclude. An empty array is ignored.
        type: array
        maxItems: 1000
        items:
          type: string
          minLength: 1
          maxLength: 1024
      exclusionPatterns:
        description: An array of glob patterns to match the object names to include. An empty array includes all objects in the bucket.
        type: array
        maxItems: 1000
        items:
          type: string
          minLength: 1
          maxLength: 1024
      inclusionPrefixes:
        type: array
        items:
          type: string
        description: An array of object name prefixes. An empty array means to include all objects.

  CreateObjectNameFilterDetails:
    description: Specifies a filter that compares object names to a set of prefixes or patterns
    properties:
      inclusionPatterns:
        description: An array of glob patterns to match the object names to exclude. An empty array is ignored.
        type: array
        maxItems: 1000
        items:
          type: string
          minLength: 1
          maxLength: 1024
      exclusionPatterns:
        description: An array of glob patterns to match the object names to include. An empty array includes all objects in the bucket.
        type: array
        maxItems: 1000
        items:
          type: string
          minLength: 1
          maxLength: 1024
      inclusionPrefixes:
        type: array
        items:
          type: string
        description: An array of object name prefixes. An empty array means to include all objects.

  UpdateObjectNameFilterDetails:
    description: Specifies a filter that compares object names to a set of prefixes or patterns
    properties:
      inclusionPatterns:
        description: An array of glob patterns to match the object names to exclude. An empty array is ignored.
        type: array
        maxItems: 1000
        items:
          type: string
          minLength: 1
          maxLength: 1024
      exclusionPatterns:
        description: An array of glob patterns to match the object names to include. An empty array includes all objects in the bucket.
        type: array
        maxItems: 1000
        items:
          type: string
          minLength: 1
          maxLength: 1024
      inclusionPrefixes:
        type: array
        items:
          type: string
        description: An array of object name prefixes. An empty array means to include all objects.

  InlineArtifactSource:
    description: Specifies the Inline Artifact Source Details
    allOf:
      - $ref: '#/definitions/ArtifactSource'
      - discriminator: INLINE
        properties:
          base64EncodedContent:
            description: base64 Encoded String
            type: string
            format: byte
        required:
          - base64EncodedContent

  CreateInlineArtifactSourceDetails:
    description: Specifies the Inline Artifact Source Details
    allOf:
      - $ref: '#/definitions/CreateArtifactSourceDetails'
      - discriminator: INLINE
        properties:
          base64EncodedContent:
            description: base64 Encoded String
            type: string
            format: byte
        required:
          - base64EncodedContent

  UpdateInlineArtifactSourceDetails:
    description: Specifies the Inline Artifact Source Details
    allOf:
      - $ref: '#/definitions/UpdateArtifactSourceDetails'
      - discriminator: INLINE
        properties:
          base64EncodedContent:
            description: base64 Encoded String
            type: string
            format: byte

  OcirArtifactSource:
    description: Specifies OCIR details
    allOf:
      - $ref: '#/definitions/ArtifactSource'
      - discriminator: OCIR
        properties:
          imageUri:
            description: Specifies OCIR Image Path - optionally include tag
            type: string
          imageDigest:
            description: Specifies image digest for the version of the image
            type: string
        required:
          - imageUri

  CreateOcirArtifactSourceDetails:
    description: Specifies OCIR details
    allOf:
      - $ref: '#/definitions/CreateArtifactSourceDetails'
      - discriminator: OCIR
        properties:
          imageUri:
            description: Specifies OCIR Image Path - optionally include tag
            type: string
          imageDigest:
            description: Specifies image digest for the version of the image
            type: string
        required:
          - imageUri

  UpdateOcirArtifactSourceDetails:
    description: Specifies OCIR details - optionally include tag
    allOf:
      - $ref: '#/definitions/UpdateArtifactSourceDetails'
      - discriminator: OCIR
        properties:
          imageUri:
            description: Specifies OCIR Image Path - optionally include tag
            type: string
          imageDigest:
            description: Specifies image digest for the version of the image
            type: string

  GenericArtifactSource:
    description: Specifies the Generic Artifact Source Details
    allOf:
      - $ref: '#/definitions/ArtifactSource'
      - discriminator: GENERIC_ARTIFACT
        properties:
          repositoryId:
            description: Specifies the repository id
            type: string
          artifactPath:
            description: Specifies the artifact path in the repository
            type: string
          artifactVersion:
            description: Users should be able to set this as a pipeline parameter for example ${appVersion}
            type: string
            example: ${appVersion}
          region:
            description: Region where the Artifact is created
            type: string
          httpBaseUrl:
            description: HTTP base url - artifact service endpoint
            type: string
        required:
          - repositoryId
          - artifactPath
          - artifactVersion

  CreateGenericArtifactSourceDetails:
    description: Specifies the Generic Artifact Source Details
    allOf:
      - $ref: '#/definitions/CreateArtifactSourceDetails'
      - discriminator: GENERIC_ARTIFACT
        properties:
          repositoryId:
            description: Specifies the repository id
            type: string
            minLength: 1
            maxLength: 255
          artifactPath:
            description: Specifies the artifact path in the repository
            type: string
          artifactVersion:
            description: Users should be able to set this as a pipeline parameter for example ${appVersion}
            type: string
            example: ${appVersion}
          region:
            description: Region where the Artifact is created
            type: string
          httpBaseUrl:
            description: HTTP base url - artifact service endpoint
            type: string
        required:
          - repositoryId
          - artifactPath
          - artifactVersion

  UpdateGenericArtifactSourceDetails:
    description: Specifies the Inline Artifact Source Details
    allOf:
      - $ref: '#/definitions/UpdateArtifactSourceDetails'
      - discriminator: GENERIC_ARTIFACT
        properties:
          repositoryId:
            description: Specifies the repository id
            type: string
            minLength: 1
            maxLength: 255
          artifactPath:
            description: Specifies the artifact path in the repository
            type: string
          artifactVersion:
            description: Users should be able to set this as a pipeline parameter for example ${appVersion}
            type: string
            example: ${appVersion}
          region:
            description: Region where the Artifact is created
            type: string
          httpBaseUrl:
            description: HTTP base url - artifact service endpoint
            type: string
# --- Deployment model definitions

  DeploymentArgument:
    type: object
    description: Values for pipeline parameters to be supplied at the time of deployment.
    properties:
      name:
        description: |
          Name of the parameter (Case-sensitive).
        type: string
        pattern: '^[a-zA-Z][a-zA-Z_0-9]*$'
      value:
        description: value of the argument
        type: string
    required:
      - name
      - value

  DeploymentArgumentCollection:
    type: object
    description: |
      Specifies list of arguments passed along with the deployment.
    properties:
      items:
        description:  List of arguments provided at the time of deployment.
        type: array
        items:
          $ref: '#/definitions/DeploymentArgument'
    required:
      - items

  ArtifactOverrideArgument:
    type: object
    description: Values for artifact parameters to be supplied at the time of deployment.
    properties:
      artifactId:
        description: The OCID of the artifact to which this parameter applies.
        type: string
      name:
        description: Name of the parameter (Case-sensitive).
        type: string
        pattern: '^[a-zA-Z][a-zA-Z_0-9]*$'
      value:
        description: Value of the parameter.
        type: string
    required:
      - artifactId
      - name
      - value

  ArtifactOverrideArgumentCollection:
    type: object
    description: Specifies the list of Artifact override arguments at the time of deployment.
    properties:
      items:
        description: List of Artifact override arguments at the time of deployment.
        type: array
        items:
          $ref: '#/definitions/ArtifactOverrideArgument'
    required:
      - items

  DeploymentArtifact:
    type: object
    description: Artifact used in deployment.
    properties:
      artifactId:
        description: Id of artifact
        type: string
      displayName:
        description: display name of artifact
        type: string
    required:
      - artifactId

  DeploymentArtifactCollection:
    type: object
    description: List of all artifacts used in deployment.
    properties:
      items:
        description:  List of all artifacts used in deployment.
        type: array
        items:
          $ref: '#/definitions/DeploymentArtifact'
    required:
      - items

  DeploymentEnvironment:
    type: object
    description: Environment used in deployment.
    properties:
      environmentId:
        description: Id of Environment
        type: string
      displayName:
        description: display name of artifact
        type: string
    required:
      - environmentId

  DeploymentEnvironmentCollection:
    type: object
    description: List of all Environments used in deployment.
    properties:
      items:
        description:  List of all Environments used in deployment.
        type: array
        items:
          $ref: '#/definitions/DeploymentEnvironment'
      required:
        - items

  StageExecutionProgress:
    description: The details about the execution progress of a Stage in a Deployment.
    discriminator: stageType
    properties:
      stageType:
        description: Stage sub types.
        type: string
        x-obmcs-enumref: "#/definitions/Stage/stageType"
      timeStarted:
        description: The time the Stage was started executing. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeFinished:
        description: The time the Stage was finished executing. An RFC3339 formatted datetime string
        type: string
        format: date-time
      status:
        description: The current state of the Stage.
        type: string
        enum:
          - ACCEPTED
          - IN_PROGRESS
          - FAILED
          - SUCCEEDED
          - CANCELING
          - CANCELED
          - ROLLBACK_IN_PROGRESS
          - ROLLBACK_SUCCEEDED
          - ROLLBACK_FAILED

  WaitStageExecutionProgress:
    description: Specifies wait stage specific execution details.
    allOf:
      - $ref: '#/definitions/StageExecutionProgress'
      - discriminator: WAIT

  InstanceDeploymentStatusCollection:
    type: object
    description: Collection for status items for an instance deployment.
    required:
      - instanceId
      - items
    properties:
      instanceId:
        description: the OCID of the instance
        type: string
      items:
        type: array
        description: The status details of deployment for an instance.
        items:
          $ref: "#/definitions/InstanceDeploymentStatus"

  InstanceDeploymentStatus:
    description: Describe the deployment status of one instance.
    properties:
      status:
        description: The status of the deployment.
        type: string
        enum:
          - IN_PROGRESS
          - SUCCEEDED
          - FAILED
          - ROLLBACK_IN_PROGRESS
          - ROLLBACK_SUCCEEDED
          - ROLLBACK_FAILED
      message:
        description: A more detailed message about the status of the deployment on the instance.
        type: string
      timeReported:
        description: The timestamp when the status of the Instance Deployment was recorded. An RFC3339 formatted datetime string
        type: string
        format: date-time

  ComputeInstanceGroupRollingDeploymentStageExecutionProgress:
    description: Specifies the execution details for Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/StageExecutionProgress'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        properties:
          instanceDeploymentStatuses:
            type: array
            items:
              $ref:  '#/definitions/InstanceDeploymentStatusCollection'

  OkeDeploymentStageExecutionProgress:
    description: Specifies the execution details for OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/StageExecutionProgress'
      - discriminator: OKE_DEPLOYMENT
        properties:
          okeDeploymentStatuses:
            description: Specifies a list of Oke Deployment statuses
            type: array
            items:
              $ref: '#/definitions/OkeDeploymentStatus'

  OkeDeploymentStatus:
    description: Specifies OKE Deployment Stage Specific Status.
    properties:
      status:
        description: The current state of the Oke Deployment Stage.
        type: string
        enum:
          - IN_PROGRESS
          - SUCCEEDED
          - FAILED
      message:
        description: A message describing the current status of Oke Deployment Stage in more details.
        type: string
      timeReported:
        description: The timestamp when current status of Oke Deployment recorded. An RFC3339 formatted datetime string
        type: string
        format: date-time

  DeployFunctionStageExecutionProgress:
    description: Specifies the execution details for DeployFunction Stage.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: DEPLOY_FUNCTION
        properties:
          functionDeploymentStatuses:
            description: Specifies a list of Function Deployment statuses
            type: array
            items:
              $ref: '#/definitions/FunctionDeploymentStatus'

  FunctionDeploymentStatus:
    description: Specifies Function Deployment Stage Specific Status.
    properties:
      status:
        description: The current state of the Function Deployment Stage.
        type: string
        enum:
          - IN_PROGRESS
          - SUCCEEDED
          - FAILED
          - ROLLBACK_IN_PROGRESS
          - ROLLBACK_SUCCEEDED
          - ROLLBACK_FAILED
      message:
        description: A message describing the current status of Function Deployment Stage in more details.
        type: string
      timeReported:
        description: The timestamp when current status of Function Deployment recorded. An RFC3339 formatted datetime string
        type: string
        format: date-time

  RunJobOnComputeInstanceStageExecutionProgress:
    description: Specifies Run job on an instance stage specific execution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: RUN_JOB_ON_COMPUTE_INSTANCE

  RunJobOnComputeInstanceGroupStageExecutionProgress:
    description: Specifies Run job on the compute instance groups stage specific execution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: RUN_JOB_ON_COMPUTE_INSTANCE_GROUP

  RunOkeJobStageExecutionProgress:
    description: Specifies Run job on OKE stage specific execution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: RUN_OKE_JOB
        properties:
          okeJobExecutions:
            description: Specifies list of Oke Jobs and their statuses
            type: array
            items:
              $ref: '#/definitions/OkeJobExecution'

  OkeJobExecution:
    description: Specifies Oke Job details.
    properties:
      namespace:
        description: Namespace of the Oke Job
        type: string
      name:
        description: Name of the Oke Job
        type: string
      okeJobStatuses:
        description: Status of the Oke Job
        type: array
        items:
          $ref: '#/definitions/OkeJobStatus'

  OkeJobStatus:
    description: Specifies Oke Job Specific Status.
    properties:
      state:
        description: The current state of the Oke Job.
        type: string
        enum:
          - COMPLETE
          - ACTIVE
          - FAILED
      message:
        description: A message describing the current status of Oke Job in more details.
        type: string
      timeReported:
        description: The timestamp when current state of Oke Job recorded. An RFC3339 formatted datetime string
        type: string
        format: date-time

  InvokeFunctionStageExecutionProgress:
    description: Specifies Invoke Function stage specific execution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: INVOKE_FUNCTION

  RunValidationTestOnComputeInstanceStageExecutionProgress:
    description: Specifies run Validation test on an compute instance stage specific execution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE

  RunValidationTestOnFunctionStageExecutionProgress:
    description: Specifies Run validation test on Function execution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: RUN_VALIDATION_TEST_ON_FUNCTION

  LoadBalancerTrafficShiftStageExecutionProgress:
    description: Specifies Load Balncer traffic shift stage execution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT

  ManualApprovalStageExecutionProgress:
    description: Specifies the manual approval stage specific execution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: MANUAL_APPROVAL

  RunDeploymentPipelineStageExecutionProgress:
    description: Specifies Run Deployment Pipleline stage specific exeution details.
    allOf:
      - $ref: "#/definitions/StageExecutionProgress"
      - discriminator: RUN_DEPLOYMENT_PIPELINE

  DeploymentExecutionProgress:
    type: object
    description: The execution progress details of a Deployment.
    properties:
      timeStarted:
        description: The time the the Deployment is started. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeFinished:
        description: The time the Deployment is finished. An RFC3339 formatted datetime string
        type: string
        format: date-time
      stageExecutionProgress:
        description: Map of stage OCIDs to StageExecutionProgress model.
        type: object
        additionalProperties:
          $ref: '#/definitions/StageExecutionProgress'

  Deployment:
    description: Description of Deployment.
    type: object
    discriminator: deploymentType
    x-obmcs-splat:
      resourceKind: deployment
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # This value is used in multiple ways by SPLAT: one is authz checks when this type gets passed to identity,
      # the other is OCID generation for SPLAT-managed resources like this one.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: clouddeploydeployment
      adLocality: regional
      activeLifecycleStates: ['ACCEPTED', 'IN_PROGRESS']
      deletedLifecycleStates: ['']
      getOperationId: GetDeployment
      listResourcesOperationId: ListDeployments
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "CloudDeployDeployment"
        scope: "customer"
    required:
      - deploymentType
      - id
      - projectId
      - pipelineId
      - compartmentId
    properties:
      deploymentArtifactCollection:
        $ref: "#/definitions/DeploymentArtifactCollection"
      deploymentEnvironmentCollection:
        $ref: "#/definitions/DeploymentEnvironmentCollection"
      deploymentType:
        description: Specifies type of Deployment
        type: string
        enum:
          - PIPELINE_DEPLOYMENT
          - PIPELINE_REDEPLOYMENT
          - SINGLE_STAGE_DEPLOYMENT
          - SINGLE_STAGE_REDEPLOYMENT
      id:
        description: Unique identifier that is immutable on creation
        type: string
      displayName:
        description: Deployment Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
      pipelineId:
        description: Pipeline Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      timeCreated:
        description: The time the the Deployment was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Deployment was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Deployment.
        type: string
        enum:
          - ACCEPTED
          - IN_PROGRESS
          - FAILED
          - SUCCEEDED
          - CANCELING
          - CANCELED
      lifecyleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      deploymentArguments:
        $ref: '#/definitions/DeploymentArgumentCollection'
      artifactOverrideArguments:
        $ref: '#/definitions/ArtifactOverrideArgumentCollection'
      deploymentExecutionProgress:
        $ref: '#/definitions/DeploymentExecutionProgress'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeploymentSummary:
    description: Summary of the Deployment.
    type: object
    discriminator: deploymentType
    required:
      - deploymentType
      - id
      - projectId
      - pipelineId
      - compartmentId
    properties:
      deploymentType:
        description: Specifies sub-type for this Deployment.
        type: string
        x-obmcs-enumref: '#/definitions/Deployment/deploymentType'
      id:
        description: Unique identifier that is immutable on creation
        type: string
      displayName:
        description: Deployment Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
      pipelineId:
        description: Pipeline Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      deploymentArtifactCollection:
        $ref: "#/definitions/DeploymentArtifactCollection"
      deploymentEnvironmentCollection:
        $ref: "#/definitions/DeploymentEnvironmentCollection"
      timeCreated:
        description: The time the the Deployment was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Deployment was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Deployment.
        type: string
        x-obmcs-enumref: '#/definitions/Deployment/lifecycleState'
      deploymentArguments:
        $ref: '#/definitions/DeploymentArgumentCollection'
      artifactOverrideArguments:
        $ref: '#/definitions/ArtifactOverrideArgumentCollection'
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeploymentCollection:
    type: object
    description: Results of a deployment search.
    required:
      - items
    properties:
      items:
        type: array
        description: Array of DeploymentSummary items.
        items:
          $ref: "#/definitions/DeploymentSummary"

  CreateDeploymentDetails:
    description: The information about new Deployment.
    type: object
    discriminator: deploymentType
    required:
      - displayName
      - deploymentType
    properties:
      deploymentType:
        description: Specifies sub-type for this Deployment.
        type: string
        x-obmcs-enumref: '#/definitions/Deployment/deploymentType'
      displayName:
        description: Deployment Name
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateDeploymentDetails:
    description: The information to be updated.
    type: object
    discriminator: deploymentType
    required:
      - deploymentType
    properties:
      deploymentType:
        description: Specifies sub-type for this Deployment.
        type: string
        x-obmcs-enumref: '#/definitions/Deployment/deploymentType'
      displayName:
        description: Deployment Identifier
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  ApproveDeploymentDetails:
    description: The information of stage for submitting aprove.
    type: object
    required:
      - stageId
    properties:
      stageId:
        type: string
        minLength: 1
        maxLength: 255
        description: |
          The [OCID](/Content/General/Concepts/identifiers.htm) of the stage which is marked for approval.

  CreatePipelineDeploymentDetails:
    description: Details of the new Deployment to be created that will run all the stages in the pipeline.
    allOf:
      - $ref: '#/definitions/CreateDeploymentDetails'
      - discriminator: PIPELINE_DEPLOYMENT
        properties:
          pipelineId:
            description: Pipeline Identifier
            type: string
            minLength: 1
            maxLength: 255
          deploymentArguments:
            $ref: '#/definitions/DeploymentArgumentCollection'
          artifactOverrideArguments:
            $ref: '#/definitions/ArtifactOverrideArgumentCollection'
    required:
      - pipelineId

  CreatePipelineRedeploymentDetails:
    description: Details of the new Deployment to be created based on a previously executed Deployment.
    allOf:
      - $ref: '#/definitions/CreateDeploymentDetails'
      - discriminator: PIPELINE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId

  CreateSingleStageRedeploymentDetails:
    description: Details of a new Deployment to be created that will rerun a single stage from a previously executed Deployment.
    allOf:
      - $ref: '#/definitions/CreateDeploymentDetails'
      - discriminator: SINGLE_STAGE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
          stageId:
            description: Specifies the OCID of the stage to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId
      - stageId

  CreateSingleStageDeploymentDetails:
    description: Details of a new Deployment to be created that will run a single stage of the pipeline.
    allOf:
      - $ref: '#/definitions/CreateDeploymentDetails'
      - discriminator: SINGLE_STAGE_DEPLOYMENT
        properties:
          stageId:
            description: Specifies the OCID of the stage to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
          deploymentArguments:
            $ref: '#/definitions/DeploymentArgumentCollection'
          artifactOverrideArguments:
            $ref: '#/definitions/ArtifactOverrideArgumentCollection'
    required:
      - stageId

  UpdatePipelineDeploymentDetails:
    description: Update details for a pipeline deployment.
    allOf:
      - $ref: '#/definitions/UpdateDeploymentDetails'
      - discriminator: PIPELINE_DEPLOYMENT

  UpdatePipelineRedeploymentDetails:
    description: Update details for a pipeline redeployment.
    allOf:
      - $ref: '#/definitions/UpdateDeploymentDetails'
      - discriminator: PIPELINE_REDEPLOYMENT

  UpdateSingleStageRedeploymentDetails:
    description: Update details for a single stage redeployment.
    allOf:
      - $ref: '#/definitions/UpdateDeploymentDetails'
      - discriminator: SINGLE_STAGE_REDEPLOYMENT

  UpdateSingleStageDeploymentDetails:
    description: Update details for a single stage Deployment.
    allOf:
      - $ref: '#/definitions/UpdateDeploymentDetails'
      - discriminator: SINGLE_STAGE_DEPLOYMENT

  PipelineDeployment:
    description: Deployment of all the stages in the pipeline.
    allOf:
      - $ref: '#/definitions/Deployment'
      - discriminator: PIPELINE_DEPLOYMENT

  PipelineRedeployment:
    description: Redeployment of the full pipeline of a previous Deployment.
    allOf:
      - $ref: '#/definitions/Deployment'
      - discriminator: PIPELINE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId

  SingleStageRedeployment:
    description: Redeployment of a single stage of a previous Deployment.
    allOf:
      - $ref: '#/definitions/Deployment'
      - discriminator: SINGLE_STAGE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
          stageId:
            description: Specifies the OCID of the stage to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId
      - stageId

  SingleStageDeployment:
    description: Deployment of a single stage within the pipeline.
    allOf:
      - $ref: '#/definitions/Deployment'
      - discriminator: SINGLE_STAGE_DEPLOYMENT
        properties:
          stageId:
            description: Specifies the OCID of the stage to be deployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - stageId

  PipelineDeploymentSummary:
    description: Summary of a full pipeline Deployment.
    allOf:
      - $ref: '#/definitions/DeploymentSummary'
      - discriminator: PIPELINE_DEPLOYMENT

  PipelineRedeploymentSummary:
    description: Summary of a full pipeline Redeployment.
    allOf:
      - $ref: '#/definitions/DeploymentSummary'
      - discriminator: PIPELINE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId

  SingleStageRedeploymentSummary:
    description: Summary of a single stage Redeployment.
    allOf:
      - $ref: '#/definitions/DeploymentSummary'
      - discriminator: SINGLE_STAGE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
          stageId:
            description: Specifies the OCID of the stage to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId
      - stageId

  SingleStageDeploymentSummary:
    description: Summary of single stage Deployment.
    allOf:
      - $ref: '#/definitions/DeploymentSummary'
      - discriminator: SINGLE_STAGE_DEPLOYMENT
        properties:
          stageId:
            description: Specifies the OCID of the stage to be deployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - stageId
# --- Environment model definitions
  Environment:
    discriminator: environmentType
    description: Description of Environment.
    type: object
    x-obmcs-splat:
      resourceKind: environment
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # This value is used in multiple ways by SPLAT: one is authz checks when this type gets passed to identity,
      # the other is OCID generation for SPLAT-managed resources like this one.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: clouddeployenvironment
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetEnvironment
      listResourcesOperationId: ListEnvironments
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "CloudDeployEnvironment"
        scope: "customer"
    required:
      - id
      - projectId
      - compartmentId
      - environmentType
      - region
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the Environment
        type: string
        maxLength: 400
      displayName:
        description: Environment Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      compartmentId:
        description: Compartment Identifier
        type: string
      environmentType:
        description: Environment sub types.
        type: string
        enum:
          - OKE_CLUSTER
          - COMPUTE_INSTANCE_GROUP
          - FUNCTION
      region:
        description: Identifier of the Region to which this Environment refers.
          Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
        type: string
      timeCreated:
        description: The time the the Environment was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Environment was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Environment.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  EnvironmentSummary:
    discriminator: environmentType
    description: Summary of the Environment.
    type: object
    required:
      - id
      - projectId
      - compartmentId
      - environmentType
      - region
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the Environment
        type: string
        maxLength: 400
      displayName:
        description: Environment Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      compartmentId:
        description: Compartment Identifier
        type: string
      environmentType:
        description: Environment sub types.
        type: string
        x-obmcs-enumref: '#/definitions/Environment/environmentType'
      region:
        description: Identifier of the Region to which this Environment refers.
          Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
        type: string
      timeCreated:
        description: The time the the Environment was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Environment was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Environment.
        type: string
        x-obmcs-enumref: '#/definitions/Environment/lifecycleState'
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  EnvironmentCollection:
    type: object
    description: Results of an Environment search.
    required:
      - items
    properties:
      items:
        type: array
        description: EnvironmentSummary items found for the search.
        items:
          $ref: "#/definitions/EnvironmentSummary"

  CreateEnvironmentDetails:
    discriminator: environmentType
    description: The information about new Environment.
    type: object
    required:
      - displayName
      - environmentType
      - projectId
      - region
    properties:
      description:
        description: Optional description about the Environment
        type: string
        maxLength: 400
      displayName:
        description: Environment Identifier
        type: string
        minLength: 1
        maxLength: 255
      environmentType:
        description: Environment sub types.
        type: string
        x-obmcs-enumref: '#/definitions/Environment/environmentType'
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      region:
        description: Identifier of the Region to which this Environment refers.
          Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateEnvironmentDetails:
    discriminator: environmentType
    description: The information to be updated.
    type: object
    required:
      - environmentType
    properties:
      description:
        description: Optional description about the Environment
        type: string
        maxLength: 400
      displayName:
        description: Environment Identifier
        type: string
        minLength: 1
        maxLength: 255
      environmentType:
        description: Environment sub types.
        type: string
        x-obmcs-enumref: '#/definitions/Environment/environmentType'
      region:
        description: Identifier of the Region to which this Environment refers.
          Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  OkeClusterEnvironment:
    description: Specifies the OKE Cluster environment.
    allOf:
      - $ref: '#/definitions/Environment'
      - discriminator: OKE_CLUSTER
        properties:
          clusterId:
            description: The OCID of the OKE cluster.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - clusterId

  OkeClusterEnvironmentSummary:
    description: Specifies the OKE Cluster environment.
    allOf:
      - $ref: '#/definitions/EnvironmentSummary'
      - discriminator: OKE_CLUSTER
        properties:
          clusterId:
            description: The OCID of the OKE cluster.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - clusterId

  CreateOkeClusterEnvironmentDetails:
    description: Specifies the OKE Cluster environment.
    allOf:
      - $ref: '#/definitions/CreateEnvironmentDetails'
      - discriminator: OKE_CLUSTER
        properties:
          clusterId:
            description: The OCID of the OKE cluster.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - clusterId

  UpdateOkeClusterEnvironmentDetails:
    description: Specifies the OKE Cluster environment.
    allOf:
      - $ref: '#/definitions/UpdateEnvironmentDetails'
      - discriminator: OKE_CLUSTER
        properties:
          clusterId:
            description: The OCID of the OKE cluster.
            type: string
            minLength: 1
            maxLength: 255

  ComputeInstanceGroupEnvironment:
    description: Specifies the Compute Instance Group environment. The instances in the group will be a UNION of the results of each selectors in instanceGroupSelectors.
    allOf:
      - $ref: '#/definitions/Environment'
      - discriminator: COMPUTE_INSTANCE_GROUP
        properties:
          computeInstanceGroupSelectors:
            $ref: '#/definitions/ComputeInstanceGroupSelectorCollection'
        required:
          - computeInstanceGroupSelectors

  ComputeInstanceGroupSelectorCollection:
    description: A collection of selectors. The UNION of instances matching the selectors are included in the instance group.
    properties:
      items:
        description: An array of selectors for the instance group. UNION operator will be use for combining the instances selected by each selector.
        type: array
        items:
          $ref: '#/definitions/ComputeInstanceGroupSelector'
    required:
      - items

  ComputeInstanceGroupSelector:
    discriminator: selectorType
    description: Defines how the instances in a instance group environment is selected.
    type: object
    properties:
      selectorType:
        description: Defines the type of the instance selector for the group
        type: string
        enum:
          - INSTANCE_IDS
          - INSTANCE_TAGS
          - INSTANCE_QUERY
    required:
      - selectorType

  ComputeInstanceGroupByIdsSelector:
    description: Specifies the Compute Instance Group environment by listing the OCIDs of the compute instances
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupSelector'
      - discriminator: INSTANCE_IDS
        properties:
          computeInstanceIds:
            description: Compute instance OCID identifiers that are members of this group.
            type: array
            items:
              type: string
        required:
          - computeInstanceIds

  ComputeInstanceGroupByQuerySelector:
    description: Specifies the Compute Instance Group environment filtered by DSL expression of the compute instances
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupSelector'
      - discriminator: INSTANCE_QUERY
        properties:
          region:
            description: The region of the instances in the group.
              Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
            type: string
          query:
            description: Query expression confirming to the OCI Search Language syntax to select compute instances for the group.
              The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
            type: string
        required:
          - region
          - query

  ComputeInstanceGroupsByTagsSelector:
    description: Specifies the Compute Instance Group environment by tags of the compute instances
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupSelector'
      - discriminator: INSTANCE_TAGS
        properties:
          compartmentId:
            description: The compartment id of the instances in the group.
            type: string
          freeformTags: *ref-freeformTags
          definedTags: *ref-definedTags
        required:
          - compartmentId

  ComputeInstanceGroupEnvironmentSummary:
    description: Specifies the Compute Instance Group environment.
    allOf:
      - $ref: '#/definitions/EnvironmentSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP
        properties:
          computeInstanceGroupSelectors:
            $ref: '#/definitions/ComputeInstanceGroupSelectorCollection'
        required:
          - computeInstanceGroupSelectors

  CreateComputeInstanceGroupEnvironmentDetails:
    description: Specifies the Compute Instance Group environment.
    allOf:
      - $ref: '#/definitions/CreateEnvironmentDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP
        properties:
          computeInstanceGroupSelectors:
            $ref: '#/definitions/ComputeInstanceGroupSelectorCollection'
        required:
          - computeInstanceGroupSelectors

  UpdateComputeInstanceGroupEnvironmentDetails:
    description: Specifies the Compute Instance Group environment.
    allOf:
      - $ref: '#/definitions/UpdateEnvironmentDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP
        properties:
          computeInstanceGroupSelectors:
            $ref: '#/definitions/ComputeInstanceGroupSelectorCollection'

  FunctionEnvironment:
    description: Specifies the OKE Function environment.
    allOf:
      - $ref: '#/definitions/Environment'
      - discriminator: FUNCTION
        properties:
          functionId:
            description: The OCID of the Function.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - functionId

  FunctionEnvironmentSummary:
    description: Specifies the OKE Function environment.
    allOf:
      - $ref: '#/definitions/EnvironmentSummary'
      - discriminator: FUNCTION
        properties:
          functionId:
            description: The OCID of the Function.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - functionId

  CreateFunctionEnvironmentDetails:
    description: Specifies the OKE Function environment.
    allOf:
      - $ref: '#/definitions/CreateEnvironmentDetails'
      - discriminator: FUNCTION
        properties:
          functionId:
            description: The OCID of the Function.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - functionId

  UpdateFunctionEnvironmentDetails:
    description: Specifies the OKE Function environment.
    allOf:
      - $ref: '#/definitions/UpdateEnvironmentDetails'
      - discriminator: FUNCTION
        properties:
          functionId:
            description: The OCID of the Function.
            type: string
            minLength: 1
            maxLength: 255
  # --- Pipeline model definitions
  PipelineParameter:
    type: object
    description: Parameter name for which the values will be supplied at the time of deployment.
    properties:
      name:
        description: |
          Name of the parameter (Case-sensitive).
          Example: 'Pipeline_param' is not same as 'pipeline_Param'
        type: string
        pattern: '^[a-zA-Z][a-zA-Z_0-9]*$'
      defaultValue:
        description: Default value of the parameter
        type: string
      description:
        description: Description of the parameter
        type: string
    required:
      - name

  PipelineParameterCollection:
    type: object
    description: |
      Specifies list of parameters present in Pipeline.
      In case of UPDATE operation, replaces existing parameters list. Merging with existing parameters is not supported.
    properties:
      items:
        description:  List of Parameters defined for a Pipeline.
        type: array
        items:
          $ref: '#/definitions/PipelineParameter'
    required:
      - items

  Pipeline:
    description: Pipeline consists of Stages and metadata for Deployments.
    type: object
    x-obmcs-splat:
      resourceKind: pipeline
      ocidEntityType: clouddeploypipeline
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetPipeline
      listResourcesOperationId: ListPipelines
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "CloudDeployPipeline"
        scope: "customer"
    required:
      - id
      - projectId
      - compartmentId
      - pipelineParameters
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the Pipeline
        type: string
        maxLength: 400
      displayName:
        description: Pipeline Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      timeCreated:
        description: The time the the Pipeline was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Pipeline was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Pipeline.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      retentionPolicy:
        $ref: '#/definitions/RetentionPolicy'
      pipelineParameters:
        $ref: '#/definitions/PipelineParameterCollection'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  PipelineSummary:
    description: Summary of the Pipeline.
    type: object
    required:
      - id
      - projectId
      - compartmentId
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the Pipeline
        type: string
        maxLength: 400
      displayName:
        description: Pipeline Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      timeCreated:
        description: The time the the Pipeline was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Pipeline was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Pipeline.
        type: string
        x-obmcs-enumref: '#/definitions/Pipeline/lifecycleState'
      retentionPolicy:
        $ref: '#/definitions/RetentionPolicy'
      pipelineParameters:
        $ref: '#/definitions/PipelineParameterCollection'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  CreatePipelineDetails:
    description: The information about new Pipeline to be created.
    type: object
    required:
      - displayName
      - projectId
    properties:
      description:
        description: Optional description about the Pipeline
        type: string
        maxLength: 400
      displayName:
        description: Pipeline display name
        type: string
        minLength: 1
        maxLength: 255
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      retentionPolicy:
        $ref: '#/definitions/RetentionPolicy'
      pipelineParameters:
        $ref: '#/definitions/PipelineParameterCollection'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdatePipelineDetails:
    description: The information to be updated for the given Pipeline.
    type: object
    required:
      - displayName
    properties:
      description:
        description: Optional description about the Pipeline
        type: string
        maxLength: 400
      displayName:
        description: Pipeline display name
        type: string
        minLength: 1
        maxLength: 255
      retentionPolicy:
        $ref: '#/definitions/RetentionPolicy'
      pipelineParameters:
        $ref: '#/definitions/PipelineParameterCollection'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  PipelineCollection:
    type: object
    description: Results of an pipeline search.
    required:
      - items
    properties:
      items:
        type: array
        description: Array of PipelineSummary items.
        items:
          $ref: "#/definitions/PipelineSummary"

  RetentionPolicy:
    type: object
    description: Retention policy.
    required:
      - retentionPeriodInDays
      - deploymentsRetainedCount
    properties:
      retentionPeriodInDays:
        description: Retention period specified in terms of number of days. After this period deployment records for the pipeline will be deleted.
        type: integer
        format: int32
        minimum: 1
      deploymentsRetainedCount:
        description: Number of Deployments that will always be retained. This will prevent the retention policy from deleting ALL deployments if they are too old.
        type: integer
        format: int32
        minimum: 1
  # --- Stage model definitions
  Stage:
    discriminator: stageType
    description: Description of Stage.
    type: object
    x-obmcs-splat:
      resourceKind: stage
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # This value is used in multiple ways by SPLAT: one is authz checks when this type gets passed to identity,
      # the other is OCID generation for SPLAT-managed resources like this one.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: clouddeploystage
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetStage
      listResourcesOperationId: ListStages
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "CloudDeployStage"
        scope: "customer"
    required:
      - id
      - pipelineId
      - compartmentId
      - projectId
      - stageType
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the Stage
        type: string
        maxLength: 400
      displayName:
        description: Stage Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
      pipelineId:
        description: Pipeline Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      stageType:
        description: Stage sub types
        type: string
        enum:
          - WAIT
          - COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
          - COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
          - OKE_DEPLOYMENT
          - DEPLOY_FUNCTION
          - UPDATE_FUNCTION_APPLICATION
          - RUN_JOB_ON_COMPUTE_INSTANCE_GROUP
          - RUN_JOB_ON_COMPUTE_INSTANCE
          - RUN_OKE_JOB
          - INVOKE_FUNCTION
          - RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
          - RUN_VALIDATION_TEST_ON_FUNCTION
          - LOAD_BALANCER_TRAFFIC_SHIFT
          - MANUAL_APPROVAL
          - RUN_DEPLOYMENT_PIPELINE
      timeCreated:
        description: The time the the Stage was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Stage was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Stage.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecyleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      stagePredecessorCollection:
        $ref: "#/definitions/StagePredecessorCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  StagePredecessor:
    description: Metadata for defining a stage's predecessor.
    type: object
    properties:
      id:
        description: The id of the predecessor stage. If a stage is the first stage in the pipeline, then the id is the pipeline's id.
        type: string
    required:
      - id

  StagePredecessorCollection:
    type: object
    description: The containing collection for the predecessors of a Stage.
    properties:
      items:
        description: A list of StagePredecessors for a stage.
        type: array
        items:
          $ref: "#/definitions/StagePredecessor"
    required:
      - items

  StageSummary:
    discriminator: stageType
    description: Summary of the Stage.
    type: object
    required:
      - id
      - pipelineId
      - compartmentId
      - projectId
      - stageType
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the Stage
        type: string
        maxLength: 400
      displayName:
        description: Stage Identifier, can be renamed
        type: string
      projectId:
        description: Project Identifier
        type: string
      pipelineId:
        description: Pipeline Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      stageType:
        description: Stage sub types.
        type: string
        x-obmcs-enumref: "#/definitions/Stage/stageType"
      timeCreated:
        description: The time the the Stage was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Stage was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Stage.
        type: string
        x-obmcs-enumref: '#/definitions/Stage/lifecycleState'
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      stagePredecessorCollection:
        $ref: "#/definitions/StagePredecessorCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  StageCollection:
    type: object
    description: Result of a stage search.
    properties:
      items:
        type: array
        description: StageSummary items found for the search.
        items:
          $ref: "#/definitions/StageSummary"
    required:
      - items

  CreateStageDetails:
    discriminator: stageType
    description: The information about new Stage.
    type: object
    required:
      - displayName
      - stageType
      - pipelineId
      - stagePredecessorCollection
    properties:
      description:
        description: Optional description about the Stage
        type: string
        maxLength: 400
      displayName:
        description: Stage Identifier
        type: string
        minLength: 1
        maxLength: 255
      stageType:
        description: Stage sub types.
        type: string
        x-obmcs-enumref: "#/definitions/Stage/stageType"
      pipelineId:
        description: Pipeline Identifier
        type: string
        minLength: 1
        maxLength: 255
      stagePredecessorCollection:
        $ref: "#/definitions/StagePredecessorCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateStageDetails:
    discriminator: stageType
    description: The information to be updated.
    type: object
    required:
      - stageType
    properties:
      description:
        description: Optional description about the Stage
        type: string
        maxLength: 400
      displayName:
        description: Stage Identifier
        type: string
        minLength: 1
        maxLength: 255
      stageType:
        description: Stage sub types.
        type: string
        x-obmcs-enumref: "#/definitions/Stage/stageType"
      stagePredecessorCollection:
        $ref: "#/definitions/StagePredecessorCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  WaitStage:
    description: Specifies the Wait Stage. User can specify a criteria for variable wait times or an absolute duration.
    allOf:
      - $ref: '#/definitions/Stage'
      - discriminator: WAIT
        required:
          - waitCriteria
        properties:
          waitCriteria:
            $ref: '#/definitions/WaitCriteria'

  WaitStageSummary:
    description: Specifies the Wait Stage. User can specify a criteria for variable wait times or an absolute duration.
    allOf:
      - $ref: '#/definitions/StageSummary'
      - discriminator: WAIT
        required:
          - waitCriteria
        properties:
          waitCriteria:
            $ref: '#/definitions/WaitCriteriaSummary'

  CreateWaitStageDetails:
    description: Specifies the Wait Stage. User can specify a criteria for variable wait times or an absolute duration.
    allOf:
      - $ref: '#/definitions/CreateStageDetails'
      - discriminator: WAIT
        required:
          - waitCriteria
        properties:
          waitCriteria:
            $ref: '#/definitions/CreateWaitCriteriaDetails'

  UpdateWaitStageDetails:
    description: Specifies the Wait Stage. User can specify a criteria for variable wait times or an absolute duration.
    allOf:
      - $ref: '#/definitions/UpdateStageDetails'
      - discriminator: WAIT
        required:
          - waitCriteria
        properties:
          waitCriteria:
            $ref: '#/definitions/UpdateWaitCriteriaDetails'

  WaitCriteria:
    description: Specifies wait criteria for wait stage.
    discriminator: waitType
    type: object
    required:
      - waitType
    properties:
      waitType:
        description: wait criteria sub type
        type: string
        enum:
          - ABSOLUTE_WAIT
          - PERIODIC_WAIT

  WaitCriteriaSummary:
    description: Specifies wait criteria for wait stage.
    discriminator: waitType
    type: object
    required:
      - waitType
    properties:
      waitType:
        description: wait criteria sub type
        type: string
        enum:
          - ABSOLUTE_WAIT
          - PERIODIC_WAIT

  CreateWaitCriteriaDetails:
    description: Specifies wait criteria for wait stage.
    discriminator: waitType
    type: object
    required:
      - waitType
    properties:
      waitType:
        description: wait criteria sub type
        type: string
        enum:
          - ABSOLUTE_WAIT
          - PERIODIC_WAIT

  UpdateWaitCriteriaDetails:
    description: Specifies wait criteria for wait stage.
    discriminator: waitType
    type: object
    required:
      - waitType
    properties:
      waitType:
        description: wait criteria sub type
        type: string
        enum:
          - ABSOLUTE_WAIT
          - PERIODIC_WAIT

  AbsoluteWaitCriteria:
    description: Specifies the absolute wait criteria, user can specify fixed length of wait duration.
    allOf:
      - $ref: '#/definitions/WaitCriteria'
      - discriminator: ABSOLUTE_WAIT
        required:
          - waitDuration
        properties:
          waitDuration:
            description: |
              The absolute wait duration.
              Minimum waitDuration should be 5 seconds.
              Maximum waitDuration can be up to 2 days.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  CreateAbsoluteWaitCriteriaDetails:
    description: Specifies the absolute wait criteria, user can specify fixed length of wait duration.
    allOf:
      - $ref: '#/definitions/CreateWaitCriteriaDetails'
      - discriminator: ABSOLUTE_WAIT
        required:
          - waitDuration
        properties:
          waitDuration:
            description: |
              The absolute wait duration.
              Minimum waitDuration should be 5 seconds.
              Maximum waitDuration can be up to 2 days.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  UpdateAbsoluteWaitCriteriaDetails:
    description: Specifies the absolute wait criteria, user can specify fixed length of wait duration.
    allOf:
      - $ref: '#/definitions/UpdateWaitCriteriaDetails'
      - discriminator: ABSOLUTE_WAIT
        properties:
          waitDuration:
            description: |
              The absolute wait duration.
              Minimum waitDuration should be 5 seconds.
              Maximum waitDuration can be up to 2 days.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  AbsoluteWaitCriteriaSummary:
    description: Specifies the absolute wait criteria, user can specify fixed length of wait duration.
    allOf:
      - $ref: '#/definitions/WaitCriteriaSummary'
      - discriminator: ABSOLUTE_WAIT
        properties:
          waitDuration:
            description: |
              The absolute wait duration.
              Minimum waitDuration should be 5 seconds.
              Maximum waitDuration can be up to 2 days.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  PeriodicWaitCriteria:
    description: Specifies criteria for periodic wait window.
    allOf:
      - $ref: '#/definitions/WaitCriteria'
      - discriminator: PERIODIC_WAIT
        required:
          - waitWindowBeginTimes
          - waitWindowDuration
        properties:
          waitWindowBeginTimes:
            description: |
              Specifies a recurring wait window and the time the wait stage begins. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size.
              Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window, we can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
            type: string
            format: x-obmcs-recurring-time
            x-example: |
              FREQ=DAILY;BYHOUR=13;INTERVAL=1 - This wait window occurs every day from 1:00pm.
              FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1 - This window occurrs on every Monday, Tuesday, Wednesday and Thursday of the week starting from 10:00 am.
          timeZone:
            description: Time zone in form of tzdb canonical Zone Id.
            type: string
            format: x-obmcs-time-zone
            example: "America/Los_Angeles"
            default: "Etc/UTC"
          waitWindowDuration:
            description: |
              The duration of each wait window.
              The waitWindowDuration should not be larger than the interval size.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  CreatePeriodicWaitCriteriaDetails:
    description: Specifies criteria for periodic wait window.
    allOf:
      - $ref: '#/definitions/CreateWaitCriteriaDetails'
      - discriminator: PERIODIC_WAIT
        required:
          - waitWindowBeginTimes
          - waitWindowDuration
        properties:
          waitWindowBeginTimes:
            description: |
              Specifies a recurring wait window and the time the wait stage begins. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size.
              Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window, we can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
            type: string
            format: x-obmcs-recurring-time
            x-example: |
              FREQ=DAILY;BYHOUR=13;INTERVAL=1 - This wait window occurs every day from 1:00pm.
              FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1 - This window occurrs on every Monday, Tuesday, Wednesday and Thursday of the week starting from 10:00 am.
          timeZone:
            description: Time zone in form of tzdb canonical Zone Id.
            type: string
            format: x-obmcs-time-zone
            example: "America/Los_Angeles"
            default: "Etc/UTC"
          waitWindowDuration:
            description: |
              The duration of each wait window.
              The waitWindowDuration should not be larger than the interval size.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  UpdatePeriodicWaitCriteriaDetails:
    description: Specifies criteria for periodic wait window.
    allOf:
      - $ref: '#/definitions/UpdateWaitCriteriaDetails'
      - discriminator: PERIODIC_WAIT
        properties:
          waitWindowBeginTimes:
            description: |
              Specifies a recurring wait window and the time the wait stage begins. Following RFC 5545 recurrence rules, we can we can specify starting time, occurrence frequency, and interval size.
              Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window, we can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size
            type: string
            format: x-obmcs-recurring-time
            x-example: |
              FREQ=DAILY;BYHOUR=13;INTERVAL=1 - This wait window occurs every day from 1:00pm.
              FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1 - This window occurrs on every Monday, Tuesday, Wednesday and Thursday of the week starting from 10:00 am.
          timeZone:
            description: Time zone in form of tzdb canonical Zone Id.
            type: string
            format: x-obmcs-time-zone
            example: "America/Los_Angeles"
            default: "Etc/UTC"
          waitWindowDuration:
            description: |
              The duration of each wait window.
              The waitWindowDuration should not be larger than the interval size.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  PeriodicWaitCriteriaSummary:
    description: Specifies criteria for periodic wait window.
    allOf:
      - $ref: '#/definitions/WaitCriteriaSummary'
      - discriminator: PERIODIC_WAIT
        properties:
          waitWindowBeginTimes:
            description: |
              Specifies a recurring wait window and the time the wait stage begins. Following RFC 5545 recurrence rules, we can we can specify starting time, occurrence frequency, and interval size.
              Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window, we can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
            type: string
            format: x-obmcs-recurring-time
            x-example: |
              FREQ=DAILY;BYHOUR=13;INTERVAL=1 - This wait window occurs every day from 1:00pm.
              FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1 - This window occurrs on every Monday, Tuesday, Wednesday and Thursday of the week starting from 10:00 am.
          timeZone:
            description: Time zone in form of tzdb canonical Zone Id.
            type: string
            format: x-obmcs-time-zone
            example: "America/Los_Angeles"
            default: "Etc/UTC"
          waitWindowDuration:
            description: |
              The duration of each wait window.
              The waitWindowDuration should not be larger than the interval size.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  ComputeInstanceGroupRollingDeploymentStage:
    description: Specifies the Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/Stage'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        required:
          - computeInstanceGroupEnvironmentId
          - deploymentSpecArtifactId
          - rolloutPolicy
        properties:
          computeInstanceGroupEnvironmentId:
            description: A compute instance group environment OCID for rolling deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: Additional file artifact OCIDs.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"
          loadBalancerConfig:
            description: An optional Load Balancer OCID and Load Balancer Listener Name
            $ref: "#/definitions/LoadBalancerConfig"


  ComputeInstanceGroupRollingDeploymentStageSummary:
    description: Specifies the Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/StageSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        required:
          - computeInstanceGroupEnvironmentId
          - deploymentSpecArtifactId
          - rolloutPolicy
        properties:
          computeInstanceGroupEnvironmentId:
            description: A compute instance group environment OCID for rolling deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: Additional file artifact OCIDs.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"
          loadBalancerConfig:
            description: An optional Load Balancer OCID and Load Balancer Listener Name
            $ref: "#/definitions/LoadBalancerConfig"

  CreateComputeInstanceGroupRollingDeploymentStageDetails:
    description: Specifies the Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/CreateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        required:
          - computeInstanceGroupEnvironmentId
          - deploymentSpecArtifactId
          - rolloutPolicy
        properties:
          computeInstanceGroupEnvironmentId:
            description: A compute instance group environment OCID for rolling deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: Additional file artifact OCIDs.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"
          loadBalancerConfig:
            description: An optional Load Balancer OCID and Load Balancer Listener Name
            $ref: "#/definitions/LoadBalancerConfig"

  UpdateComputeInstanceGroupRollingDeploymentStageDetails:
    description: Specifies the Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/UpdateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        properties:
          computeInstanceGroupEnvironmentId:
            description: A compute instance group environment OCID for rolling deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: Additional file artifact OCIDs.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"
          loadBalancerConfig:
            description: An optional Load Balancer OCID and Load Balancer Listener Name
            $ref: "#/definitions/LoadBalancerConfig"

  ComputeInstanceGroupBlueGreenDeploymentStage:
    description: Specifies the Instance group blue green deployment stage.
    allOf:
      - $ref: '#/definitions/Stage'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
        required:
          - blueEnvironmentId
          - greenEnvironmentId
          - deploymentSpecArtifactId
          - artifactIds
          - rolloutPolicy
        properties:
          blueEnvironmentId:
            description: Blue compute instance group environment OCID for deployment.
            type: string
          greenEnvironmentId:
            description: Green compute instance group environment OCID for deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"

  ComputeInstanceGroupBlueGreenDeploymentStageSummary:
    description: Specifies the Instance group blue green deployment stage.
    allOf:
      - $ref: '#/definitions/StageSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
        required:
          - blueEnvironmentId
          - greenEnvironmentId
          - deploymentSpecArtifactId
          - artifactIds
          - rolloutPolicy
        properties:
          blueEnvironmentId:
            description: Blue compute instance group environment OCID for deployment.
            type: string
          greenEnvironmentId:
            description: Green compute instance group environment OCID for deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"

  CreateComputeInstanceGroupBlueGreenDeploymentStageDetails:
    description: Specifies the Instance group blue green deployment stage.
    allOf:
      - $ref: '#/definitions/CreateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
        required:
          - blueEnvironmentId
          - greenEnvironmentId
          - deploymentSpecArtifactId
          - artifactIds
          - rolloutPolicy
        properties:
          blueEnvironmentId:
            description: Blue compute instance group environment OCID for deployment.
            type: string
          greenEnvironmentId:
            description: Green compute instance group environment OCID for deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"

  UpdateComputeInstanceGroupBlueGreenDeploymentStageDetails:
    description: Specifies the Instance group blue green deployment stage.
    allOf:
      - $ref: '#/definitions/UpdateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
        properties:
          blueEnvironmentId:
            description: Blue compute instance group environment OCID for deployment.
            type: string
          greenEnvironmentId:
            description: Green compute instance group environment OCID for deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"

  LoadBalancerConfig:
    description: Specifies config for load balancer traffic shift stages.
    required:
      - loadBalancerId
      - listenerName
    properties:
      loadBalancerId:
        description: The OCID of Load Balancer
        type: string
      listenerName:
        description: Name of the Load Balancer Listener
        type: string
      backendPort:
        description: Listen port for the backend server
        type: integer
        format: int32
        minimum: 1
        maximum: 65535
        default: 80

  ComputeInstanceGroupBlueGreenTrafficShiftStage:
    description: Specifies the Instance group blue green deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/Stage'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
        required:
          - computeInstanceGroupBlueGreenDeploymentStageId
          - loadBalancerConfig
          - rolloutPolicy
        properties:
          computeInstanceGroupBlueGreenDeploymentStageId:
            description: Id of the upstream ComputeInstanceBlueGreenGroupDeploymentStage in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  ComputeInstanceGroupBlueGreenTrafficShiftStageSummary:
    description: Specifies the Instance group blue green deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/StageSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
        required:
          - computeInstanceGroupBlueGreenDeploymentStageId
          - loadBalancerConfig
          - rolloutPolicy
        properties:
          computeInstanceGroupBlueGreenDeploymentStageId:
            description: Id of the upstream ComputeInstanceBlueGreenGroupDeploymentStage in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  CreateComputeInstanceGroupBlueGreenTrafficShiftStageDetails:
    description: Specifies the Instance group blue green deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/CreateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
        required:
          - computeInstanceGroupBlueGreenDeploymentStageId
          - loadBalancerConfig
          - rolloutPolicy
        properties:
          computeInstanceGroupBlueGreenDeploymentStageId:
            description: Id of the upstream ComputeInstanceBlueGreenGroupDeploymentStage in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/CreateLoadBalancerTrafficShiftRolloutPolicyDetails"

  UpdateComputeInstanceGroupBlueGreenTrafficShiftStageDetails:
    description: Specifies the Instance group blue green deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/UpdateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
        properties:
          computeInstanceGroupBlueGreenDeploymentStageId:
            description: Id of the upstream ComputeInstanceBlueGreenGroupDeploymentStage in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/UpdateLoadBalancerTrafficShiftRolloutPolicyDetails"

  ComputeInstanceGroupCanaryDeploymentStage:
    description: Specifies the instance group canary deployment stage.
    allOf:
      - $ref: '#/definitions/Stage'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
        required:
          - computeInstanceGroupEnvironmentId
          - deploymentSpecArtifactId
          - artifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupEnvironmentId:
            description: A compute instance group environment OCID for canary deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"

  ComputeInstanceGroupCanaryDeploymentStageSummary:
    description: Specifies the instance group canary deployment stage.
    allOf:
      - $ref: '#/definitions/StageSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
        required:
          - computeInstanceGroupEnvironmentId
          - deploymentSpecArtifactId
          - artifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupEnvironmentId:
            description: A compute instance group environment OCID for canary deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"


  CreateComputeInstanceGroupCanaryDeploymentStageDetails:
    description: Specifies the instance group canary deployment stage.
    allOf:
      - $ref: '#/definitions/CreateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
        required:
          - computeInstanceGroupEnvironmentId
          - deploymentSpecArtifactId
          - artifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupEnvironmentId:
            description: A compute instance group environment OCID for canary deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"

  UpdateComputeInstanceGroupCanaryDeploymentStageDetails:
    description: Specifies the instance group canary deployment stage.
    allOf:
      - $ref: '#/definitions/UpdateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
        properties:
          computeInstanceGroupEnvironmentId:
            description: A compute instance group environment OCID for canary deployment.
            type: string
          deploymentSpecArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          artifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"

  ComputeInstanceGroupCanaryTrafficShiftStage:
    description: Specifies the instance group canary deployment load balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
        required:
          - computeInstanceGroupCanaryDeploymentStageId
          - loadBalancerConfig
          - rolloutPolicy
        properties:
          computeInstanceGroupCanaryDeploymentStageId:
            description: The OCID of an upstream ComputeInstanceGroupCanaryDeploymentStage Id in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  ComputeInstanceGroupCanaryTrafficShiftStageSummary:
    description: Specifies the instance group canary deployment load balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - computeInstanceGroupCanaryDeploymentStageId
          - rolloutPolicy
        properties:
          computeInstanceGroupCanaryDeploymentStageId:
            description: A compute instance group canary stage OCID for load balancer.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  CreateComputeInstanceGroupCanaryTrafficShiftStageDetails:
    description: Specifies the instance group canary deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/CreateStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - computeInstanceGroupCanaryDeploymentStageId
          - rolloutPolicy
        properties:
          computeInstanceGroupCanaryDeploymentStageId:
            description: A compute instance group canary stage OCID for load balancer.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  UpdateComputeInstanceGroupCanaryTrafficShiftStageDetails:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - computeInstanceGroupCanaryDeploymentStageId
          - rolloutPolicy
        properties:
          computeInstanceGroupCanaryDeploymentStageId:
            description: A compute instance group canary stage OCID for load balancer.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  ApprovalPolicy:
    discriminator: approvalPolicyType
    description: Specifies the approval policy
    required:
      - approvalPolicyType
    properties:
      approvalPolicyType:
        description: Approval policy sub types.
        type: string
        enum:
          - COUNT_BASED_APPROVAL

  CountBasedApprovalPolicy:
    description: Count based stage approval policy
    allOf:
      - $ref: "#/definitions/ApprovalPolicy"
      - discriminator: COUNT_BASED_APPROVAL
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5
            default: 1
        required:
          - numberOfApprovalsRequired

  ComputeInstanceGroupCanaryApprovalStage:
    description: Specifies the canary approval stage.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
        required:
          - approvalPolicy
          - computeInstanceGroupCanaryTrafficShiftStageId
        properties:
          computeInstanceGroupCanaryTrafficShiftStageId:
            description: A compute instance group canary traffic shift stage OCID for load balancer.
            type: string
          approvalPolicy:
            $ref: "#/definitions/ApprovalPolicy"

  ComputeInstanceGroupCanaryApprovalStageSummary:
    description: Specifies the canary approval stage.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
        required:
          - approvalPolicy
          - computeInstanceGroupCanaryTrafficShiftStageId
        properties:
          computeInstanceGroupCanaryTrafficShiftStageId:
            description: A compute instance group canary traffic shift stage OCID for load balancer.
            type: string
          approvalPolicy:
            $ref: "#/definitions/ApprovalPolicy"

  CreateComputeInstanceGroupCanaryApprovalStageDetails:
    description: Specifies the canary approval stage.
    allOf:
      - $ref: "#/definitions/CreateStageDetails"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
        properties:
          computeInstanceGroupCanaryTrafficShiftStageId:
            description: A compute instance group canary traffic shift stage OCID for load balancer.
            type: string
          approvalPolicy:
            $ref: "#/definitions/ApprovalPolicy"

  UpdateComputeInstanceGroupCanaryApprovalStageDetails:
    description: Specifies the canary approval stage.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
        properties:
          computeInstanceGroupCanaryTrafficShiftStageId:
            description: A compute instance group canary traffic shift stage OCID for load balancer.
            type: string
          approvalPolicy:
            $ref: "#/definitions/ApprovalPolicy"

  OkeDeploymentStage:
    description: Specifies the OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/Stage'
      - discriminator: OKE_DEPLOYMENT
        required:
          - okeClusterEnvironmentId
          - kubernetesManifestArtifactIds
          - namespace
        properties:
          okeClusterEnvironmentId:
            description: OkeCluster environment OCID for deployment.
            type: string
          kubernetesManifestArtifactIds:
            description: List of KubernetesManifest artifact OCIDs, the manifests should not include any Job resource.
            type: array
            items:
              type: string
          namespace:
            description: Default Namespace to be used for Kubernetes Deployment when not specified in the manifest
            type: string
            default: "default"
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"

  OkeDeploymentStageSummary:
    description: Specifies the OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/StageSummary'
      - discriminator: OKE_DEPLOYMENT
        required:
          - okeClusterEnvironmentId
          - kubernetesManifestArtifactIds
          - namespace
        properties:
          okeClusterEnvironmentId:
            description: OkeCluster environment OCID for deployment.
            type: string
          kubernetesManifestArtifactIds:
            description: List of KubernetesManifest artifact OCIDs, the manifests should not include any Job resource.
            type: array
            items:
              type: string
          namespace:
            description: Default Namespace to be used for Kubernetes Deployment when not specified in the manifest
            type: string
            default: "default"
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"

  CreateOkeDeploymentStageDetails:
    description: Specifies the OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/CreateStageDetails'
      - discriminator: OKE_DEPLOYMENT
        required:
          - okeClusterEnvironmentId
          - kubernetesManifestArtifactIds
        properties:
          okeClusterEnvironmentId:
            description: OkeCluster environment OCID for deployment.
            type: string
          kubernetesManifestArtifactIds:
            description: List of KubernetesManifest artifact OCIDs, the manifests should not include any Job resource.
            type: array
            items:
              type: string
          namespace:
            description: Default Namespace to be used for Kubernetes Deployment when not specified in the manifest
            type: string
            default: "default"
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"

  UpdateOkeDeploymentStageDetails:
    description: Specifies the OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/UpdateStageDetails'
      - discriminator: OKE_DEPLOYMENT
        properties:
          okeClusterEnvironmentId:
            description: OkeCluster environment OCID for deployment.
            type: string
          kubernetesManifestArtifactIds:
            description: List of KubernetesManifest artifact OCIDs, the manifests should not include any Job resource.
            type: array
            items:
              type: string
          namespace:
            description: Default Namespace to be used for Kubernetes Deployment when not specified in the manifest
            type: string
            default: "default"
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"

  DeployFunctionStage:
    description: Specifies the DeployFunction Stage.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: DEPLOY_FUNCTION
        required:
          - functionEnvironmentId
          - dockerImageArtifactId
        properties:
          functionEnvironmentId:
            description: Function environment OCID.
            type: string
          dockerImageArtifactId:
            description: A docker image artifact OCID.
            type: string
          config:
            description: User provided key/value pair configuration which assigned through constants or parameter.
            type: object
            additionalProperties:
              type: string
          maxMemoryInMBs:
            description: Maximum usable memory for the function (MiB)
            type: integer
            format: int64
          functionTimeoutInSeconds:
            description: Timeout for executions of the function. Value in seconds.
            type: integer
            format: int32
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"

  DeployFunctionStageSummary:
    description: Specifies the DeployFunction Stage.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: DEPLOY_FUNCTION
        required:
          - functionEnvironmentId
          - dockerImageArtifactId
        properties:
          functionEnvironmentId:
            description: Function environment OCID.
            type: string
          dockerImageArtifactId:
            description: A docker image artifact OCID.
            type: string
          config:
            description: User provided key/value pair configuration which assigned through constants or parameter.
            type: object
            additionalProperties:
              type: string
          maxMemoryInMBs:
            description: Maximum usable memory for the function (MiB)
            type: integer
            format: int64
          functionTimeoutInSeconds:
            description: Timeout for executions of the function. Value in seconds.
            type: integer
            format: int32
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"

  CreateDeployFunctionStageDetails:
    description: Specifies the DeployFunction Stage.
    allOf:
      - $ref: "#/definitions/CreateStageDetails"
      - discriminator: DEPLOY_FUNCTION
        required:
          - functionEnvironmentId
          - dockerImageArtifactId
        properties:
          functionEnvironmentId:
            description: Function environment OCID.
            type: string
          dockerImageArtifactId:
            description: A docker image artifact OCID.
            type: string
          config:
            description: User provided key/value pair configuration which assigned through constants or parameter.
            type: object
            additionalProperties:
              type: string
          maxMemoryInMBs:
            description: Maximum usable memory for the function (MiB)
            type: integer
            format: int64
          functionTimeoutInSeconds:
            description: Timeout for executions of the function. Value in seconds.
            type: integer
            format: int32
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"

  UpdateDeployFunctionStageDetails:
    description: Specifies the DeployFunction Stage.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: DEPLOY_FUNCTION
        properties:
          functionEnvironmentId:
            description: Function environment OCID.
            type: string
          dockerImageArtifactId:
            description: A docker image artifact OCID.
            type: string
          config:
            description: User provided key/value pair configuration which assigned through constants or parameter.
            type: object
            additionalProperties:
              type: string
          maxMemoryInMBs:
            description: Maximum usable memory for the function (MiB)
            type: integer
            format: int64
          functionTimeoutInSeconds:
            description: Timeout for executions of the function. Value in seconds.
            type: integer
            format: int32
          rollbackPolicy:
            $ref: "#/definitions/StageRollbackPolicy"

  RunOkeJobStage:
    description: Specifies Run job on OKE stage.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: RUN_OKE_JOB
        required:
          - okeClusterEnvironmentId
          - kubernetesManifestArtifactId
          - executionMode
          - namespace
        properties:
          okeClusterEnvironmentId:
            description: OKE Cluster environment OCID.
            type: string
          kubernetesManifestArtifactId:
            description: KubernetesManifest artifact OCID.
            type: string
          executionMode:
            description: Specifies synchronous or asynchronous mode of execution for this stage.
            type: string
            enum:
              - SYNC
              - ASYNC
            x-example: |
              SYNC - Stage executes synchronously.
              ASYNC - Asynchronous execution mode.
          namespace:
            description: Default Namespace to be used for Kubernetes Job when not specified in the manifest
            type: string
            default: "default"

  RunOkeJobStageSummary:
    description: Specifies Run job on OKE stage.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: RUN_OKE_JOB
        required:
          - okeClusterEnvironmentId
          - kubernetesManifestArtifactId
          - executionMode
          - namespace
        properties:
          okeClusterEnvironmentId:
            description: OKE Cluster environment OCID.
            type: string
          kubernetesManifestArtifactId:
            description: KubernetesManifest artifact OCID.
            type: string
          executionMode:
            description: Specifies synchronous or asynchronous mode of execution for this stage.
            type: string
            x-obmcs-enumref: '#/definitions/RunOkeJobStage/executionMode'
            x-example: |
              SYNC - Stage executes synchronously.
              ASYNC - Asynchronous execution mode.
          namespace:
            description: Default Namespace to be used for Kubernetes Job when not specified in the manifest
            type: string
            default: "default"

  CreateRunOkeJobStageDetails:
    description: Specifies Run job on OKE stage.
    allOf:
      - $ref: "#/definitions/CreateStageDetails"
      - discriminator: RUN_OKE_JOB
        required:
          - okeClusterEnvironmentId
          - kubernetesManifestArtifactId
          - executionMode
        properties:
          okeClusterEnvironmentId:
            description: OKE Cluster environment OCID.
            type: string
          kubernetesManifestArtifactId:
            description: KubernetesManifest artifact OCID.
            type: string
          executionMode:
            description: Specifies synchronous or asynchronous mode of execution for this stage.
            type: string
            x-obmcs-enumref: '#/definitions/RunOkeJobStage/executionMode'
            x-example: |
              SYNC - Stage executes synchronously.
              ASYNC - Asynchronous execution mode.
          namespace:
            description: Default Namespace to be used for Kubernetes Job when not specified in the manifest
            type: string
            default: "default"

  UpdateRunOkeJobStageDetails:
    description: Specifies Run job on OKE stage.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: RUN_OKE_JOB
        properties:
          okeClusterEnvironmentId:
            description: OKE Cluster environment OCID.
            type: string
          kubernetesManifestArtifactId:
            description: KubernetesManifest artifact OCID.
            type: string
          executionMode:
            description: Specifies synchronous or asynchronous mode of execution for this stage.
            type: string
            x-obmcs-enumref: '#/definitions/RunOkeJobStage/executionMode'
            x-example: |
              SYNC - Stage executes synchronously.
              ASYNC - Asynchronous execution mode.
          namespace:
            description: Default Namespace to be used for Kubernetes Job when not specified in the manifest
            type: string
            default: "default"

  InvokeFunctionStage:
    description: Specifies Invoke Function stage.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: INVOKE_FUNCTION
        required:
          - functionEnvironmentId
          - isAsync
          - isValidationEnabled
        properties:
          functionEnvironmentId:
            description: Function environment OCID.
            type: string
          artifactId:
            description: Optional binary artifat OCID user may provide to this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether this stage executes asynchronously.
            type: boolean
          isValidationEnabled:
            description: A boolean flag specifies whether the invoked function should be validated.
            type: boolean

  InvokeFunctionStageSummary:
    description: Specifies Invoke Function stage.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: INVOKE_FUNCTION
        required:
          - functionEnvironmentId
          - isAsync
          - isValidationEnabled
        properties:
          functionEnvironmentId:
            description: Function environment OCID.
            type: string
          artifactId:
            description: Optional binary artifat OCID user may provide to this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether this stage executes asynchronously.
            type: boolean
          isValidationEnabled:
            description: A boolean flag specifies whether the invoked function should be validated.
            type: boolean

  CreateInvokeFunctionStageDetails:
    description: Specifies Invoke Function stage.
    allOf:
      - $ref: "#/definitions/CreateStageDetails"
      - discriminator: INVOKE_FUNCTION
        required:
          - functionEnvironmentId
          - isAsync
          - isValidationEnabled
        properties:
          functionEnvironmentId:
            description: Function environment OCID.
            type: string
          artifactId:
            description: Optional binary artifat OCID user may provide to this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether this stage executes asynchronously.
            type: boolean
          isValidationEnabled:
            description: A boolean flag specifies whether the invoked function should be validated.
            type: boolean

  UpdateInvokeFunctionStageDetails:
    description: Specifies Invoke Function stage.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: INVOKE_FUNCTION
        properties:
          functionEnvironmentId:
            description: Function environment OCID.
            type: string
          artifactId:
            description: Optional binary artifat OCID user may provide to this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether this stage executes asynchronously.
            type: boolean
          isValidationEnabled:
            description: A boolean flag specifies whether the invoked function should be validated.
            type: boolean


  RunValidationTestOnComputeInstanceStage:
    description: Specifies run Validation test on an compute instance stage.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
        required:
          - computeInstanceId
          - artifactIds
        properties:
          computeInstanceId:
            description: Instance OCID on which this stage runs validation.
            type: string
          artifactIds:
            description: File artifact OCIDs, there should be atleast one artifact containing deployment specifications.
            type: array
            items:
              type: string

  RunValidationTestOnComputeInstanceStageSummary:
    description: Specifies run Validation test on an compute instance stage.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
        required:
          - computeInstanceId
          - artifactIds
        properties:
          computeInstanceId:
            description: Instance OCID on which this stage runs validation.
            type: string
          artifactIds:
            description: File artifact OCIDs, there should be atleast one artifact containing deployment specifications.
            type: array
            items:
              type: string

  CreateRunValidationTestOnComputeInstanceStageDetails:
    description: Specifies run Validation test on an compute instance stage.
    allOf:
      - $ref: "#/definitions/CreateStageDetails"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
        required:
          - computeInstanceId
          - artifactIds
        properties:
          computeInstanceId:
            description: Instance OCID on which this stage runs validation.
            type: string
          artifactIds:
            description: File artifact OCIDs, there should be atleast one artifact containing deployment specifications.
            type: array
            items:
              type: string

  UpdateRunValidationTestOnComputeInstanceStageDetails:
    description: Specifies run Validation test on an compute instance stage.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
        required:
          - computeInstanceId
          - artifactIds
        properties:
          computeInstanceId:
            description: Instance OCID on which this stage runs validation.
            type: string
          artifactIds:
            description: File artifact OCIDs, there should be atleast one artifact containing deployment specifications.
            type: array
            items:
              type: string

  BackendSetIpCollection:
    description: Collection of Backend environment IP address.
    type: object
    properties:
      items:
        type: array
        description: |
          The IP address of the backend server.
          A server could be a Compute instance or a Load Balancer.
        items:
          type: string
          example: 10.0.0.3

  LoadBalancerTrafficShiftStage:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - blueBackendIps
          - greenBackendIps
          - trafficShiftTarget
          - rolloutPolicy
        properties:
          blueBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          greenBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          trafficShiftTarget:
            description: Specifies the target or destination Backend set.
            type: string
            enum:
              - BLUE
              - GREEN
            x-example: |
              BLUE - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs, as per rolloutPolicy.
              GREEN - Traffic from the existing backends of managed Load Balance Listener to
              green Backend IPs as per rolloutPolicy.
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  LoadBalancerTrafficShiftStageSummary:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - blueBackendIps
          - greenBackendIps
          - trafficShiftTarget
          - rolloutPolicy
        properties:
          blueBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          greenBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          trafficShiftTarget:
            description: Specifies the target or destination Backend set.
            type: string
            x-obmcs-enumref: '#/definitions/LoadBalancerTrafficShiftStage/trafficShiftTarget'
            x-example: |
              BLUE - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs, as per rolloutPolicy.
              GREEN - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs as per rolloutPolicy.
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  CreateLoadBalancerTrafficShiftStageDetails:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/CreateStageDetails"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - blueBackendIps
          - greenBackendIps
          - trafficShiftTarget
          - rolloutPolicy
        properties:
          blueBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          greenBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          trafficShiftTarget:
            description: Specifies the target or destination Backend set.
            type: string
            x-obmcs-enumref: '#/definitions/LoadBalancerTrafficShiftStage/trafficShiftTarget'
            x-example: |
              BLUE - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs, as per rolloutPolicy.
              GREEN - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs ser as per rolloutPolicy.
          rolloutPolicy:
            $ref: "#/definitions/CreateLoadBalancerTrafficShiftRolloutPolicyDetails"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  UpdateLoadBalancerTrafficShiftStageDetails:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT
        properties:
          blueBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          greenBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          trafficShiftTarget:
            description: Specifies the target or destination Backend set.
            type: string
            x-obmcs-enumref: '#/definitions/LoadBalancerTrafficShiftStage/trafficShiftTarget'
            x-example: |
              BLUE - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs, as per rolloutPolicy.
              GREEN - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs ser as per rolloutPolicy.
          rolloutPolicy:
            $ref: "#/definitions/UpdateLoadBalancerTrafficShiftRolloutPolicyDetails"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  ManualApprovalStage:
    description: Specifies the manual approval stage.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: MANUAL_APPROVAL
        required:
          - numberOfApprovalsRequired
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5
            default: 1

  ManualApprovalStageSummary:
    description: Specifies the manual approval stage.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: MANUAL_APPROVAL
        required:
          - numberOfApprovalsRequired
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5
            default: 1

  CreateManualApprovalStageDetails:
    description: Specifies the manual approval stage.
    allOf:
      - $ref: "#/definitions/CreateStageDetails"
      - discriminator: MANUAL_APPROVAL
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5
            default: 1

  UpdateManualApprovalStageDetails:
    description: Specifies the manual approval stage.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: MANUAL_APPROVAL
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5

  RunDeploymentStage:
    description: Specifies Run Deployment Pipleline stage which runs another pipeline of the project.
    allOf:
      - $ref: "#/definitions/Stage"
      - discriminator: RUN_DEPLOYMENT_PIPELINE
        required:
          - targetPipelineId
          - isAsync
          - runDeploymentConcurrencyConflictPolicy
        properties:
          targetPipelineId:
            description: A target Pipeline OCID that will be run in this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether the target deployment is run synchronously or asynchronously.
            type: boolean
          runDeploymentConcurrencyConflictPolicy:
            $ref: "#/definitions/RunDeploymentConcurrencyConflictPolicy"

  RunDeploymentStageSummary:
    description: Specifies Run Deployment Pipleline stage which runs another pipeline of the project.
    allOf:
      - $ref: "#/definitions/StageSummary"
      - discriminator: RUN_DEPLOYMENT_PIPELINE
        required:
          - targetPipelineId
          - isAsync
          - runDeploymentConcurrencyConflictPolicy
        properties:
          targetPipelineId:
            description: A target Pipeline OCID that will be run in this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether the target deployment is run synchronously or asynchronously.
            type: boolean
          runDeploymentConcurrencyConflictPolicy:
            $ref: "#/definitions/RunDeploymentConcurrencyConflictPolicy"

  CreateRunDeploymentStageDetails:
    description: Specifies Run Deployment Pipleline stage which runs another pipeline of the project.
    allOf:
      - $ref: "#/definitions/CreateStageDetails"
      - discriminator: RUN_DEPLOYMENT_PIPELINE
        required:
          - targetPipelineId
          - isAsync
          - createRunDeploymentConcurrencyConflictPolicyDetails
        properties:
          targetPipelineId:
            description: A target Pipeline OCID that will be run in this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether the target deployment is run synchronously or asynchronously.
            type: boolean
          createRunDeploymentConcurrencyConflictPolicyDetails:
            $ref: "#/definitions/CreateRunDeploymentConcurrencyConflictPolicyDetails"

  UpdateRunDeploymentStageDetails:
    description: Specifies Run Deployment Pipleline stage which runs another pipeline of the project.
    allOf:
      - $ref: "#/definitions/UpdateStageDetails"
      - discriminator: RUN_DEPLOYMENT_PIPELINE
        properties:
          targetPipelineId:
            description: A target Pipeline OCID that will be run in this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether the target deployment is run synchronously or asynchronously.
            type: boolean
          updateRunDeploymentConcurrencyConflictPolicyDetails:
            $ref: "#/definitions/UpdateRunDeploymentConcurrencyConflictPolicyDetails"

  RunDeploymentConcurrencyConflictPolicy:
    type: object
    description: This describes the policy in case there is a deployment already running on the target pipeline.
    properties:
      concurrencyConflictPolicyType:
        description: The types of policies in case of a conflict
        type: string
        enum:
          - WAIT_FOR_COMPLETION
          - FAIL_IMMEDIATELY
    required:
      - concurrencyConflictPolicyType

  CreateRunDeploymentConcurrencyConflictPolicyDetails:
    type: object
    description: This describes the policy in case there is a deployment already running on the target pipeline.
    properties:
      concurrencyConflictPolicyType:
        description: The types of policies in case of a conflict
        type: string
        x-obmcs-enumref: "#/definitions/RunDeploymentConcurrencyConflictPolicy/concurrencyConflictPolicyType"
    required:
      - concurrencyConflictPolicyType

  UpdateRunDeploymentConcurrencyConflictPolicyDetails:
    type: object
    description: This describes the policy in case there is a deployment already running on the target pipeline.
    properties:
      concurrencyConflictPolicyType:
        description: The types of policies in case of a conflict
        type: string
        x-obmcs-enumref: "#/definitions/RunDeploymentConcurrencyConflictPolicy/concurrencyConflictPolicyType"

  LoadBalancerTrafficShiftRolloutPolicy:
    description: Description of rollout policy for Load Balancer Traffic Shift stage.
    type: object
    required:
      - batchCount
    properties:
      batchCount:
        description: Specifies number of batches for this stage.
        type: integer
        format: int32
      batchDelayInSeconds:
        description: Specifies delay in seconds between batches.
        type: integer
        format: int32
        default: 5
        minimum: 0
        maximum: 3600
      rampLimitPercent:
        description: Indicates the stoping criteria.
        type: number
        format: float

  CreateLoadBalancerTrafficShiftRolloutPolicyDetails:
    description: Description of rollout policy for Load Balancer Traffic Shift stage.
    type: object
    required:
      - batchCount
    properties:
      batchCount:
        description: Specifies number of batches for this stage.
        type: integer
        format: int32
      batchDelayInSeconds:
        description: Specifies delay in seconds between batches.
        type: integer
        format: int32
        default: 5
        minimum: 0
        maximum: 3600
      rampLimitPercent:
        description: Indicates the stoping criteria.
        type: number
        format: float

  UpdateLoadBalancerTrafficShiftRolloutPolicyDetails:
    description: Description of rollout policy for Load Balancer Traffic Shift stage.
    type: object
    properties:
      batchCount:
        description: Specifies number of batches for this stage.
        type: integer
        format: int32
      batchDelayInSeconds:
        description: Specifies delay in seconds between batches.
        type: integer
        format: int32
        default: 5
        minimum: 0
        maximum: 3600
      rampLimitPercent:
        description: Indicates the stoping criteria.
        type: number
        format: float

  ComputeInstanceGroupRolloutPolicy:
    description: Specifies rollout policy for Compute Instance group stages.
    type: object
    required:
      - policyType
    discriminator: policyType
    properties:
      policyType:
        description: The type of policy used for rolling out a deployment stage
        type: string
        enum:
          - COMPUTE_INSTANCE_GROUP_LINEAR_ROLLOUT_POLICY_BY_COUNT
          - COMPUTE_INSTANCE_GROUP_LINEAR_ROLLOUT_POLICY_BY_PERCENTAGE
      batchDelayInSeconds:
        description: The number of seconds in delay between batch rollout. The default delay is 1 minute.
        type: integer
        format: int32
        default: 60
        minimum: 0
        maximum: 3600

  ComputeInstanceGroupLinearRolloutPolicyByCount:
    description: Specifies a linear rollout strategy for Compute Instance group rolling deployment stage.
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupRolloutPolicy'
      - discriminator: COMPUTE_INSTANCE_GROUP_LINEAR_ROLLOUT_POLICY_BY_COUNT
        required:
          - batchCount
        properties:
          batchCount:
            description: The number that will be used to determine how many instances will be deployed to concurrently.
            type: integer
            minimum: 1

  ComputeInstanceGroupLinearRolloutPolicyByPercentage:
    description: Specifies a linear rollout strategy for Compute Instance group rolling deployment stage.
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupRolloutPolicy'
      - discriminator: COMPUTE_INSTANCE_GROUP_LINEAR_ROLLOUT_POLICY_BY_PERCENTAGE
        required:
          - batchPercentage
        properties:
          batchPercentage:
            description: The percentage that will be used to determine how many instances will be deployed to concurrently.
            type: integer
            minimum: 1
            default: 1

  StageRollbackPolicy:
    description: Specifies the rollback policy for that is initiated on the failure of certain Stage types.
    discriminator: policyType
    type: object
    properties:
      policyType:
        description: Specifies sub-type of the StageRollbackPolicy.
        type: string
        enum:
          - AUTOMATED_STAGE_ROLLBACK_POLICY
    required:
      - policyType

  AutomatedStageRollbackPolicy:
    description: Specifies the automated rollback policy for a Stage on failure.
    allOf:
      - $ref: '#/definitions/StageRollbackPolicy'
      - discriminator: AUTOMATED_STAGE_ROLLBACK_POLICY

  ComputeInstanceGroupFailurePolicy:
    description: Specifies a Failure Policy for Compute Instance group rolling deployment stage.
    type: object
    discriminator: policyType
    required:
      - policyType
    properties:
      policyType:
        description: Whether the failure instances size is specified by absolute number or by percentage.
        type: string
        enum:
          - COMPUTE_INSTANCE_GROUP_FAILURE_POLICY_BY_COUNT
          - COMPUTE_INSTANCE_GROUP_FAILURE_POLICY_BY_PERCENTAGE

  ComputeInstanceGroupFailurePolicyByCount:
    description: Specifies a Failure Policy By Count for Compute Instance group rolling deployment stage.
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupFailurePolicy'
      - discriminator: COMPUTE_INSTANCE_GROUP_FAILURE_POLICY_BY_COUNT
        required:
          - failureCount
        properties:
          failureCount:
            description: The threshold count of failed instances in the group which when reached or exceeded sets the stage as FAILED.
            type: integer
            minimum: 1

  ComputeInstanceGroupFailurePolicyByPercentage:
    description: Specifies a Failure Policy By Percentage for Compute Instance group rolling deployment stage.
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupFailurePolicy'
      - discriminator: COMPUTE_INSTANCE_GROUP_FAILURE_POLICY_BY_PERCENTAGE
        required:
          - failurePercentage
        properties:
          failurePercentage:
            description: The failure percentage threshold which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
            type: integer
            minimum: 1
            maximum: 100
# WorkRequst model definitions

  ActionType:
    type: string
    description: Possible types of actions.
    enum: &ACTIONTYPE
      - CREATED
      - UPDATED
      - DELETED
      - IN_PROGRESS
      - RELATED

  OperationStatus:
    type: string
    description: Possible operation status.
    enum: &OPERATIONSTATUS
      - ACCEPTED
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
      - CANCELING
      - CANCELED

  OperationType:
    type: string
    description: Possible operation types.
    enum: &OPERATIONTYPE
      - CREATE_APPLICATION
      - UPDATE_APPLICATION
      - DELETE_APPLICATION
      - CREATE_PIPELINE
      - UPDATE_PIPELINE
      - DELETE_PIPELINE
      - CREATE_STAGE
      - UPDATE_STAGE
      - DELETE_STAGE
      - CREATE_ARTIFACT
      - UPDATE_ARTIFACT
      - DELETE_ARTIFACT
      - CREATE_ENVIRONMENT
      - UPDATE_ENVIRONMENT
      - DELETE_ENVIRONMENT
      - CREATE_DEPLOYMENT
      - UPDATE_DEPLOYMENT
      - DELETE_DEPLOYMENT
      - CREATE_OCI_SERVICE_LOGGING_CONFIG
      - UPDATE_OCI_SERVICE_LOGGING_CONFIG
      - DELETE_OCI_SERVICE_LOGGING_CONFIG

  WorkRequest:
    description: A description of workrequest status
    x-obmcs-splat:
      resourceKind: workRequest
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # Please, pick up value that corresponds to your service after cloning DeploymentService reference service.
      # This value is used by SPLAT to run authz checks.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: clouddeployworkrequest
      adLocality: regional
    properties:
      operationType:
        type: string
        x-obmcs-top-level-enum: '#/definitions/OperationType'
        enum: *OPERATIONTYPE
        description: Type of the work request
      status:
        type: string
        x-obmcs-top-level-enum: '#/definitions/OperationStatus'
        enum: *OPERATIONSTATUS
        description: Status of current work request.
      id:
        type: string
        description: The id of the work request.
      compartmentId:
        type: string
        description: |
          The ocid of the compartment that contains the work request. Work requests should be scoped to
          the same compartment as the resource the work request affects. If the work request affects multiple resources,
          and those resources are not in the same compartment, it is up to the service team to pick the primary
          resource whose compartment should be used
      resources:
        type: array
        items:
          $ref: '#/definitions/WorkRequestResource'
        description: The resources affected by this work request.
      percentComplete:
        type: number
        format: float
        description: Percentage of the request completed.
      timeAccepted:
        type: string
        format: date-time
        description: |
          The date and time the request was created, as described in
          [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
      timeStarted:
        type: string
        format: date-time
        description: |
          The date and time the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339),
          section 14.29.
      timeFinished:
        type: string
        format: date-time
        description: |
          The date and time the object was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
    required:
      - operationType
      - status
      - id
      - compartmentId
      - resources
      - percentComplete
      - timeAccepted

  WorkRequestSummary:
    description: A description of workrequest status
    x-obmcs-splat:
      resourceKind: workRequest
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # Please, pick up value that corresponds to your service after cloning DeploymentService reference service.
      # This value is used by SPLAT to run authz checks.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      adLocality: regional
    properties:
      operationType:
        type: string
        x-obmcs-top-level-enum: '#/definitions/OperationType'
        enum: *OPERATIONTYPE
        description: Type of the work request
      status:
        type: string
        x-obmcs-top-level-enum: '#/definitions/OperationStatus'
        enum: *OPERATIONSTATUS
        description: Status of current work request.
      id:
        type: string
        description: The id of the work request.
      compartmentId:
        type: string
        description: |
          The ocid of the compartment that contains the work request. Work requests should be scoped to
          the same compartment as the resource the work request affects. If the work request affects multiple resources,
          and those resources are not in the same compartment, it is up to the service team to pick the primary
          resource whose compartment should be used
      resources:
        type: array
        items:
          $ref: '#/definitions/WorkRequestResource'
        description: The resources affected by this work request.
      percentComplete:
        type: number
        format: float
        description: Percentage of the request completed.
      timeAccepted:
        type: string
        format: date-time
        description: |
          The date and time the request was created, as described in
          [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
      timeStarted:
        type: string
        format: date-time
        description: |
          The date and time the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339),
          section 14.29.
      timeFinished:
        type: string
        format: date-time
        description: |
          The date and time the object was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
    required:
      - operationType
      - status
      - id
      - compartmentId
      - resources
      - percentComplete
      - timeAccepted

  WorkRequestCollection:
    type: object
    description: Results of a list of WorkRequest.
    required:
      - items
    properties:
      items:
        type: array
        description: WorkRequest items found for the search.
        items:
          $ref: "#/definitions/WorkRequestSummary"

  WorkRequestResource:
    description: A resource created or operated on by a work request.
    properties:
      entityType:
        type: string
        description: The resource type the work request affects.
      actionType:
        description: |
          The way in which this resource is affected by the work tracked in the work request.
          A resource being created, updated, or deleted will remain in the IN_PROGRESS state until
          work is complete for that resource at which point it will transition to CREATED, UPDATED,
          or DELETED, respectively.
        x-obmcs-top-level-enum: '#/definitions/ActionType'
        enum: *ACTIONTYPE
        type: string
      identifier:
        type: string
        description: The identifier of the resource the work request affects.
      entityUri:
        type: string
        description: The URI path that the user can do a GET on to access the resource metadata
    required:
      - actionType
      - entityType
      - identifier

  WorkRequestError:
    description: An error encountered while executing a work request.
    properties:
      code:
        type: string
        description: |
          A machine-usable code for the error that occured. Error codes are listed on
          (https://docs.cloud.oracle.com/Content/API/References/apierrors.htm)
      message:
        type: string
        description: A human readable description of the issue encountered.
      timestamp:
        type: string
        format: date-time
        description: The time the error occured. An RFC3339 formatted datetime string.
    required:
      - code
      - message
      - timestamp

  WorkRequestErrorCollection:
    type: object
    description: Results of a list of WorkRequest errors encountered while executing a work request.
    required:
      - items
    properties:
      items:
        type: array
        description: WorkRequestError items found for the listing.
        items:
          $ref: "#/definitions/WorkRequestError"

  WorkRequestLogEntry:
    description: A log message from the execution of a work request.
    properties:
      message:
        type: string
        description: Human-readable log message.
      timestamp:
        type: string
        format: date-time
        description: The time the log message was written. An RFC3339 formatted datetime string
    required:
      - message
      - timestamp

  WorkRequestLogEntryCollection:
    type: object
    description: Results of a list of log message from the execution of a work request.
    required:
      - items
    properties:
      items:
        type: array
        description: WorkRequestLogEntry items found for the listing.
        items:
          $ref: "#/definitions/WorkRequestLogEntry"
  OciServiceLoggingConfig:
    type: object
    description: Config for the Log resource.
    required:
      - logId
      - resource
      - category
    properties:
      logId:
        description: Log resource OCID.
        type: string
        minLength: 32
        maxLength: 255
      tenancyId:
        description: OCID of tenancy this log belongs to.
        type: string
        minLength: 32
        maxLength: 255
      resource:
        description: Resource OCID. Log would be configured for this resource.
        type: string
        minLength: 1
        maxLength: 255
      category:
        description: Name of the category
        type: string
        minLength: 1
        maxLength: 255
      parameters:
        description: Parameters for the category
        type: object
        additionalProperties:
          type: string
      lifecycleState:
        type: string
        description: |
          The current state of the logging resource in the context of the target resource.
          This field must be present in the context of a response but must not be present
          in the context of a request.
        enum:
          - CREATING
          - ACTIVE
          - UPDATING
          - DELETING
          - DELETED
          - FAILED
  DeploymentPluginArtifact:
    description: An artifact that the compute agent's deployment plugin will download
    type: object
    required:
      - id
      - artifactType
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
        minLength: 1
        maxLength: 255
      displayName:
        description: Artifact Identifier, can be renamed
        type: string
      artifactType:
        description: Type of the Artifact
        type: string
      artifactSource:
        $ref: '#/definitions/DeploymentPluginArtifactSource'

  DeploymentPluginArtifactSource:
    type: object
    description: Specifies source of an artifact
    discriminator: artifactSourceType
    properties:
      artifactSourceType:
        description: Specifies types of artifact sources
        type: string
        enum:
          - OBJECT_STORAGE
          - GENERIC_ARTIFACT
    required:
      - artifactSourceType

  DeploymentPluginObjectStorageArtifactSource:
    description: Specifies the Object Storage Artifact Source Details
    allOf:
      - $ref: '#/definitions/DeploymentPluginArtifactSource'
      - discriminator: OBJECT_STORAGE
        properties:
          bucketName:
            description: Specifies the object storage bucket
            type: string
          namespaceName:
            description: Specifies the object storage namespace
            type: string
          objectNames:
            description: Specifies the list object names included in this artifact.
            type: array
            items:
              type: string

  DeploymentPluginGenericArtifactSource:
    description: Specifies OCIR details
    allOf:
      - $ref: '#/definitions/DeploymentPluginArtifactSource'
      - discriminator: GENERIC_ARTIFACT
        properties:
          artifactPath:
            description: The path of the artifact in the generic artifact repository
            type: string
          digest:
            description: Specifies digest for the version of the artifact
            type: string
        required:
          - artifactPath
          - digest

  DeploymentPluginArtifactCollection:
    type: object
    description: A collection of artifacts that the compute agent's deployment plugin will need to download.
    required:
      - items
    properties:
      items:
        type: array
        description:  Artifact array.
        items:
          $ref: '#/definitions/DeploymentPluginArtifact'

  DeploymentPluginStep:
    description: A step in a deployment phase.
    discriminator: stepType
    required:
      - stepType
    properties:
      stepType:
        description: The type of the step
        type: string
        enum:
          - COMMAND
      name:
        description: The name of the step
        type: string

  DeploymentPluginCommandStep:
    description: A command to be run on the target instance during deployment
    allOf:
      - $ref: '#/definitions/DeploymentPluginStep'
      - discriminator: COMMAND
        properties:
          shell:
            description: The type of the shell interpreter.
            type: string
          runAs:
            description: The local OS user of the target intance the compute agent will use to run the command
            type: string
          timeoutInSeconds:
            description: The maximum running time in seconds of each command in the phase.
            type: integer
          commands:
            type: array
            items:
              type: string
        required:
          - commands

  DeploymentPluginPhase:
    description: A deployment phase
    required:
      - steps
    properties:
      name:
        description: The name of the phase
        type: string
      shell:
        description: The type of the shell interpreter to run the scripts.
        type: string
      runAs:
        description: The local OS user of the target intance the compute agent will use to run the commands in the phase
        type: string
      timeoutInSeconds:
        description: The maximum running time in seconds of each command in the phase.
        type: integer
      steps:
        description: A list of commands to be run by the compute agent on the target instance
        type: array
        items:
          $ref: '#/definitions/DeploymentPluginStep'
      onFailure:
        description: The list of commands to run when error happens.
        type: array
        items:
          $ref: '#/definitions/DeploymentPluginStep'

  DeploymentPluginEnv:
    description: The environment settings for deployment plugin
    type: object
    properties:
      variables:
        description: Variables that shall be made available to the shell scripts run by the compute agent.
        type: object
        additionalProperties:
          type: string

  DeploymentPluginFileCopy:
    description: Instructions about how the files in the artifacts shall be copied to the compute instance.
    properties:
      source:
        description: The source folder or file in the artifact.
        type: string
      destination:
        description: The destination folder
        type: string
    required:
      - source
      - destination

  DeploymentPluginSpec:
    type: object
    description: Instructions for how the artifacts will be installed on the compute instances
    required:
      - version
      - component
      - phases
    properties:
      version:
        description: The version of the deployment spec.
        type: string
      component:
        description: The component of the DLC service, i.e. deployment.
        type: string
      runAs:
        description: The OS user name that the compute agent shall run as when executing the instructions.
        type: string
      shell:
        description: The type of the shell interpreter to run the scripts.
        type: string
      env:
        $ref: '#/definitions/DeploymentPluginEnv'
      file:
        description: A list of file copy instructions.
        type: array
        items:
          $ref: '#/definitions/DeploymentPluginFileCopy'
      phases:
        description: A sequential list of phases to be executed on the target instance.
        type: array
        items:
          $ref: '#/definitions/DeploymentPluginPhase'

  DeploymentPluginManifest:
    description: The manifest that describe the artifacts and the instructions for the compute agent to perform the deployment
    required:
      - pipelineId
      - stageId
      - deploymentId
      - artifacts
      - deploymentSpec
    properties:
      pipelineId:
        description: The OCID of the pipeline resource
        type: string
        minLength: 1
        maxLength: 255
      stageId:
        description: The OCID of the deployment stage
        type: string
        minLength: 1
        maxLength: 255
      deploymentId:
        description: The OCID of the deployment.
        type: string
        minLength: 1
        maxLength: 255
      artifacts:
        $ref: '#/definitions/DeploymentPluginArtifactCollection'
      deploymentSpec:
        $ref: '#/definitions/DeploymentPluginSpec'

#==========[ Parameters ]================================================================================================
parameters:
# Shared query params

  CompartmentIdOptionalQueryParam:
    name: compartmentId
    in: query
    required: false
    type: string
    description: The ID of the compartment in which to list resources.
    x-default-description: Empty only if the parent applicationId or pipelineId query param is not specified.

  CompartmentIdQueryParam:
    name: compartmentId
    in: query
    required: true
    type: string
    minLength: 32
    maxLength: 255
    description: The ID of the compartment in which to list resources.

  PaginationLimitQueryParam:
    name: limit
    in: query
    type: integer
    minimum: 1
    maximum: 1000
    default: 10
    description: The maximum number of items to return.

  PaginationTokenQueryParam:
    name: page
    in: query
    type: string
    minLength: 1
    description: The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.

  SortOrderQueryParam:
    name: sortOrder
    in: query
    type: string
    x-obmcs-top-level-enum: '#/definitions/SortOrder'
    enum: *SORTORDER
    default: 'ASC'
    description: The sort order to use, either 'asc' or 'desc'.

  SortByQueryParam:
    name: sortBy
    in: query
    type: string
    enum:
      - timeCreated
      - displayName
    default: 'timeCreated'
    description: |
      The field to sort by. Only one sort order may be provided. Default order for timeCreated is descending. Default order for displayName is ascending. If no value is specified timeCreated is default.

  DisplayNameQueryParam:
    in: query
    maxLength: 255
    minLength: 1
    name: displayName
    type: string
    x-default-description: 'null'
    description: A filter to return only resources that match the entire display name given.

  RequestIdHeader:
    name: opc-request-id
    required: false
    in: header
    type: string
    description: |
        Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
        a particular request, please provide the request ID.

  RetryTokenHeader:
    description: |
      A token that uniquely identifies a request so it can be retried in case of a timeout or
      server error without risk of executing that same action again. Retry tokens expire after 24
      hours, but can be invalidated before then due to conflicting operations. For example, if a resource
      has been deleted and purged from the system, then a retry of the original creation request
      might be rejected.
    in: header
    maxLength: 64
    minLength: 1
    name: opc-retry-token
    required: false
    type: string

  IfMatchHeader:
    description: |
      For optimistic concurrency control. In the PUT or DELETE call
      for a resource, set the `if-match` parameter to the value of the
      etag from a previous GET or POST response for that resource.
      The resource will be updated or deleted only if the etag you
      provide matches the resource's current etag value.
    in: header
    name: if-match
    required: false
    type: string

  ApplicationIdentifierPathParam:
    name: applicationId
    type: string
    in: path
    required: true
    description: unique Application identifier

  ApplicationIdentifierQueryParam:
    name: applicationId
    type: string
    in: query
    required: false
    description: unique Application identifier
    x-default-description: "null"

  ApplicationIdQueryParam:
    name: applicationId
    in: query
    required: false
    type: string
    description: The ID of the parent Application.
    x-default-description: ID of the parent Application for filtering.

  EnvironmentIdentifierPathParam:
    name: environmentId
    type: string
    in: path
    required: true
    description: unique Environment identifier

  ArtifactIdQueryParam:
    name: artifactId
    in: query
    required: false
    type: string
    description: The ID of the Artifact for filtering.
    x-default-description: "null"

  EnvironmentIdQueryParam:
    name: environmentId
    in: query
    required: false
    type: string
    description: ID of the environment for filtering.
    x-default-description: "null"

  ArtifactIdentifierPathParam:
    name: artifactId
    type: string
    in: path
    required: true
    description: unique Artifact identifier

  PipelineIdentifierPathParam:
    name: pipelineId
    type: string
    in: path
    required: true
    description: unique Pipeline identifier

  PipelineIdQueryParam:
    name: pipelineId
    in: query
    required: false
    type: string
    description: The ID of the parent Pipeline.
    x-default-description: ID of the parent Pipeline for filtering.

  StageIdentifierPathParam:
    name: stageId
    type: string
    in: path
    required: true
    description: unique Stage identifier

  StageIdentifierQueryParam:
    name: stageId
    in: query
    required: false
    type: string
    description: The ID of the Stage to be queried
    x-default-description: "null"

  DeploymentIdentifierPathParam:
    name: deploymentId
    type: string
    in: path
    required: true
    description: unique Deployment identifier

  DeploymentIdentifierQueryParam:
    name: deploymentId
    type: string
    in: query
    required: false
    description: unique Deployment identifier
    x-default-description: "null"

# WorkRequest parameters

  WorkRequestIdPathParam:
    name: workRequestId
    in: path
    required: true
    type: string
    description: The ID of the asynchronous request.
  LogIdPathParam:
    name: logId
    description: Log OCID
    in: path
    type: string
    required: true
    minLength: 1
    maxLength: 255

  TenancyIdQueryParam:
    name: tenancyId
    description: Tenancy OCID the log belongs to.
    in: query
    type: string
    required: true
    minLength: 32
    maxLength: 255

  ResourceQueryParam:
    name: resource
    description: Unique resource identifier within tenancy. It could be OCID or name
    type: string
    in: query
    required: true
    minLength: 1
    maxLength: 255

  CategoryQueryParam:
    name: category
    description: Log category name
    type: string
    in: query
    required: true
    minLength: 1
    maxLength: 64


# Preprocessed by spec-conditionals-preprocessor-plugin version 1.0.17
