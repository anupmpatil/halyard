# GENERATED from com.oracle.pic.dlc:devops-service-java-client:0.1.93 - DO NOT EDIT
# This is the DeploymentService API spec in YAML
# Clients and documentation will be auto-generated from this file.
# Review the API checklist:
# https://confluence.oci.oraclecorp.com/display/DEX/API+Consistency+Checklist
swagger: '2.0'
x-oracle-package: com.oracle.pic.dlc.deployment
x-obmcs-use-shared-work-requests-service: false
# Refer to SPLAT onboarding wiki for details
# https://confluence.oci.oraclecorp.com/display/PLAT/Splat+-+User+Guide
x-obmcs-splat:
  version: '1.0'
  services:
    deployment-service-control-plane-api:
      allowingUnreviewedEntityType: true
      # Omitting audit implies you don't want Splat to audit operations for this service (deployment-service-control-plane-api)
      audit:
        # defaultMode can be either none/verification/automated.
        # verification: can be used for verification. Random percentage(< 1%) of requests will be audited by Splat
        # automated: means Splat will perform audit and add "oci-splat-audited" header to requests proxied downstream
        defaultMode: automated

        # Setting the eventGroupingId to opc-work-request-id to tie the async begin and end events to each other.
        # See examples: https://confluence.oci.oraclecorp.com/display/PLAT/How+to+enable+audit+automation
        eventGroupIdExpression: response.headers['opc-work-request-id']

        eventSource: deployment-service-control-plane-api
        requestParameterRules: [ { resources: ".*", actions: ".*", values: ".*" } ]
        requestHeaderRules:    [ { resources: ".*", actions: ".*", values: ".*" } ]
        responseHeaderRules:   [ { resources: ".*", actions: ".*", values: ".*" } ]
    deployment-service-management-plane-api:
      allowingUnreviewedEntityType: true
      # Omitting audit implies you don't want Splat to audit operations for this service (deployment-service-management-plane-api)
      audit:
        # defaultMode can be either none/verification/automated.
        # verification: can be used for verification. Random percentage(< 1%) of requests will be audited by Splat
        # automated: means Splat will perform audit and add "oci-splat-audited" header to requests proxied downstream
        defaultMode: automated

        # Setting the eventGroupingId to opc-work-request-id to tie the async begin and end events to each other.
        # See examples: https://confluence.oci.oraclecorp.com/display/PLAT/How+to+enable+audit+automation
        eventGroupIdExpression: response.headers['opc-work-request-id']

        eventSource: deployment-service-management-plane-api
        requestParameterRules: [ { resources: ".*", actions: ".*", values: ".*" } ]
        requestHeaderRules:    [ { resources: ".*", actions: ".*", values: ".*" } ]
        responseHeaderRules:   [ { resources: ".*", actions: ".*", values: ".*" } ]
    deployment-service-control-plane-api-beta:
      allowingUnreviewedEntityType: true
      prototype: deployment-service-control-plane-api
      serviceOverrides:
        deployment-service-control-plane-api: deployment-service-control-plane-api-beta
        dlc-project-service-control-plane-api: dlc-project-service-control-plane-api-beta
    deployment-service-management-plane-api-beta:
      allowingUnreviewedEntityType: true
      prototype: deployment-service-management-plane-api
      serviceOverrides:
        deployment-service-management-plane-api: deployment-service-management-plane-api-beta
        deployment-service-control-plane-api: deployment-service-control-plane-api-beta
    deployment-service-control-plane-api-preprod:
      allowingUnreviewedEntityType: true
      prototype: deployment-service-control-plane-api
      serviceOverrides:
        deployment-service-control-plane-api: deployment-service-control-plane-api-preprod
        dlc-project-service-control-plane-api: dlc-project-service-control-plane-api-preprod
    deployment-service-management-plane-api-preprod:
      allowingUnreviewedEntityType: true
      prototype: deployment-service-management-plane-api
      serviceOverrides:
        deployment-service-management-plane-api: deployment-service-management-plane-api-preprod
        deployment-service-control-plane-api: deployment-service-control-plane-api-preprod
    dlc-project-service-control-plane-api:
      allowingUnreviewedEntityType: true
      audit:
        defaultMode: automated

        # Setting the eventGroupingId to opc-work-request-id to tie the async begin and end events to each other.
        # See examples: https://confluence.oci.oraclecorp.com/display/PLAT/How+to+enable+audit+automation
        eventGroupIdExpression: response.headers['opc-work-request-id']

        eventSource: dlc-project-service-control-plane-api
        requestParameterRules: [ { resources: ".*", actions: ".*", values: ".*" } ]
        requestHeaderRules: [ { resources: ".*", actions: ".*", values: ".*" } ]
        responseHeaderRules: [ { resources: ".*", actions: ".*", values: ".*" } ]
    dlc-project-service-control-plane-api-beta:
      allowingUnreviewedEntityType: true
      prototype: dlc-project-service-control-plane-api
      serviceOverrides:
        dlc-project-service-control-plane-api: dlc-project-service-control-plane-api-beta
    dlc-project-service-control-plane-api-preprod:
      allowingUnreviewedEntityType: true
      prototype: dlc-project-service-control-plane-api
      serviceOverrides:
        dlc-project-service-control-plane-api: dlc-project-service-control-plane-api-preprod
info:
  title: DevOps Service API
  description: DevOps Service API
  version: "20210630"
# the domain of the service
host: 127.0.0.1
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths. Make sure to update the path in resource files after modifying the basePath.
basePath: /20210630
produces:
  - application/json

# please refer to https://confluence.oci.oraclecorp.com/display/DEX/Issue+Routing for details.
x-obmcs-issue-routing-table:
  default:
    email: oci_devlifecycle_group_us_grp@oracle.com
    # Todo-Replace: Update your Jira Project name - instance of https://jira.oci.oraclecorp.com against which tickets would be cut for service
    # teams. For example, if your Jira queue is https://jira.oci.oraclecorp.com/projects/DEX/issues, then you should only mention DEX.
    jiraProject: JIRA
    # Todo-Replace: Update your Jira Project name - instance of jira-sd.mc1.oracleiaas.com against which tickets may be cut for operational
    # issues. For example, if your Jira queue is https://jira-sd.mc1.oracleiaas.com/projects/SDK/queues, then you should only mention SDK.
    opsJiraProject: JIRA-OPS
    # For engagements related to relevant API calls on github, this user shall be tagged to respond. Please note that
    # this list should contain at least 2 items (PM and Dev Manager). The github users should be added the Oracle
    # organization in github. For details please check - https://confluence.oraclecorp.com/confluence/display/OGHO/Preparing+Your+GitHub+Account+for+OGHO.
    githubUsers:
      - raj-inamdar
      - jonschreiber

# Todo-Replace: Update your endpoint-template.
# As per the DNS wiki(see below), going ahead, the endpoints for web services would need to follow one of the following naming schemes:
#  - OCI Services - <service>.<region>.oci.{secondLevelDomain}
#  - PAAS Services - <service>.<region>.ocp.{secondLevelDomain}
#  - SAAS Services - <service>.<region>.ocs.{secondLevelDomain}
#
# For non-regional endpoints it should be 'https://<service>.(oci|ocp|ocs).{secondLevelDomain}'
# For region specific endpoints it should be 'https://<service>.{region}.(oci|ocp|ocs).{secondLevelDomain}'
#
# {region}-
#   It holds a special meaning during codegen of the different SDKs/CLI and on encountering this parameter,
#   the codegen shall generate an endpoint format that would be replaced by the region code from the equivalent of a
#   setRegion call during client configuration.
#
# {secondLevelDomain} -
#   Case sensitive parameter in this x-obmcs-endpoint-template is used to support different realms.
#
# For list of regions & secondLevelDomain and more information, please refer
#  Service Endpoint Update - https://confluence.oci.oraclecorp.com/display/DEX/Service+Endpoint+Update
#  External DNS: New Subdomain Request - https://confluence.oci.oraclecorp.com/display/OCIID/External+DNS%3A+New+Subdomain+Request
x-obmcs-endpoint-template: 'https://devops.{region}.oci.{secondLevelDomain}'

# =============================================================================
# Anchors used to reference common headers, properties, ...etc...
# =============================================================================
x-anchors:
  x-headers:
    location: &ref-location
      description: Relative URL of the newly created resource.
      type: string
    etag: &ref-etag
      description: |
        For optimistic concurrency control. See `if-match`.
      type: string
    opc-work-request-id: &ref-opc-work-request-id
      description: |
        Unique Oracle-assigned identifier for the asynchronous request. You can use this to query status of the asynchronous operation.
      type: string
    opc-next-page: &ref-opc-next-page
      description: |
        For pagination of a list of items. When paging through a list, if this header appears in the response,
        then a partial list might have been returned. Include this value as the `page` parameter for the
        subsequent GET request to get the next batch of items.
      type: string
    opc-request-id: &ref-opc-request-id
      description: |
        Unique Oracle-assigned identifier for the request. If you need to contact
        Oracle about a particular request, please provide the request ID.
      type: string
    retry-after: &ref-retry-after
        type: number
        format: float
        description: A decimal number representing the number of seconds the client should wait before polling this endpoint again.

  x-properties:
    definedTags: &ref-definedTags
      description: |
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{"foo-namespace": {"bar-key": "value"}}`
      type: object
      additionalProperties:
        type: object
        description: |
          Key-value pair representing predefined tags' keys and values scoped to a namespace.
          Example: `{"bar-key": "value"}`
        additionalProperties:
          # NOTE: type: object is inaccurate but we are willing to accept it for now because the resulting codegen is correct and customers can't see the flaw.
          type: object
          description: |
            The value of the tag. Only string, integer and boolean types are supported.

    freeformTags: &ref-freeformTags
      description: |
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        Example: `{"bar-key": "value"}`
      type: object
      additionalProperties:
        type: string

    systemTags: &ref-systemTags
      description: |
        Usage of system tag keys. These predefined keys are scoped to namespaces.
        Example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
      type: object
      additionalProperties:
        type: object
        description: |
          Key-value pair representing system tags' keys and values scoped to a namespace.
          Example: `{"bar-key": "value"}`
        additionalProperties:
          # NOTE: type: object is inaccurate but we are willing to accept it for now because the resulting codegen is correct and customers can't see the flaw.
          type: object
          description: |
            The value of the tag. Only string, integer and boolean types are supported.

#==========[ Responses ]=================================================================================================
responses: &COMMON_HTTP_STATUSES
  400:
    description: Bad Request
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  401:
    description: Unauthorized
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  404:
    description: Not Found
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  409:
    description: Conflict
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  412:
    description: Precondition failed
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  429:
    description: Too Many Requests
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  500:
    description: Internal Server Error
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  default:
    description: Unknown Error
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'


#==========[ Paths ]=====================================================================================================
paths:

# ------------------- Project API -------------------
  /projects:
    get:
      tags: ['project']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          project:
            serviceResourceName: Project
            targetCompartmentId: request.parameter.compartmentId
            actionKind: read
            permissions: ["DEVOPS_PROJECT_INSPECT"]
        authorization:
          mode: automated
          check: resources['project'].grantedPermissions.contains('DEVOPS_PROJECT_INSPECT')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListProjects
      summary: Gets a list of all Projects in a compartment
      description: |
        Returns a list of Projects.
      parameters:
        - $ref: '#/parameters/ResourceIdQueryParam'
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/Project/lifecycleState"
          description: A filter to return only Projects that matches the given lifecycleState.
        - $ref: '#/parameters/NameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/ProjectSummary'
      responses:
        200:
          description: A page of ProjectSummary objects.
          schema:
            $ref: '#/definitions/ProjectCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['project']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        quotas:
          mode: automated
          quotaDefinitions:
            project-count-quota:
              operationResourceName: project
              quotaName: "'project-count'"
              familyName: devops-project
              usage: 1
              quotaHandlingMode: Enforce
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          project:
            serviceResourceName: Project
            targetCompartmentId: request.body.compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_PROJECT_CREATE"]
        authorization:
          mode: automated
          check: resources['project'].grantedPermissions.contains('DEVOPS_PROJECT_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: none
          operationResourceName: project
        maximumAttemptCount: 3
      operationId: CreateProject
      summary: Creates a new Project
      description: |
        Creates a new Project.
      parameters:
        - name: CreateProjectDetails
          description: Details for the new Project.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateProjectDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Project'
      responses:
        201:
          description: The Project that is created.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/Project'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /projects/{projectId}:
    get:
      tags: ['project']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          project:
            serviceResourceName: Project
            actionKind: read
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api', 'GetProject', request.resourceId).compartmentId
            permissions: ["DEVOPS_PROJECT_READ"]
        authorization:
          mode: automated
          check: resources['project'].grantedPermissions.contains('DEVOPS_PROJECT_READ')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetProject
      summary: Get Project
      description: Gets a Project by identifier
      parameters:
        - $ref: '#/parameters/ProjectIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the Project with the given id
          schema:
            $ref: '#/definitions/Project'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['project']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          project:
            serviceResourceName: Project
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api', 'GetProject', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_PROJECT_UPDATE"]
        authorization:
          mode: automated
          check: resources['project'].grantedPermissions.contains('DEVOPS_PROJECT_UPDATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: none
          operationResourceName: project
        maximumAttemptCount: 3
      operationId: UpdateProject
      summary: Update the Project identified by the id
      description: Updates the Project
      parameters:
        - $ref: '#/parameters/ProjectIdentifierPathParam'
        - name: UpdateProjectDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateProjectDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Project'
      responses:
        202:
          description: Accepted the request. The Project will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/Project'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['project']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        quotas:
          mode: automated
          operationResourceName: project
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          project:
            serviceResourceName: Project
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api', 'GetProject', request.resourceId).compartmentId
            actionKind: delete
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            permissions: ["DEVOPS_PROJECT_DELETE"]
        authorization:
          mode: automated
          check: resources['project'].grantedPermissions.contains('DEVOPS_PROJECT_DELETE')
          allowCrossTenancy: true
        search:
          mode: none
          operationResourceName: project
        maximumAttemptCount: 3
      operationId: DeleteProject
      summary: Delete a provisioned Project
      description: Deletes a Project resource by identifier
      parameters:
        - $ref: '#/parameters/ProjectIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Project'
      responses:
        202:
          description: Accepted the request. The Project will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

# ------------------ Environment API --------------------
  /deployEnvironments:
    get:
      tags: ['deployEnvironment']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployEnvironment:
            serviceResourceName: DeployEnvironment
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              downstream.getOr404('dlc-project-service-control-plane-api','GetProject',request.parameter.projectId).compartmentId
            actionKind: read
            permissions: ["DEVOPS_DEPLOY_ENVIRONMENT_INSPECT"]
        authorization:
          mode: automated
          check: resources['deployEnvironment'].grantedPermissions.contains('DEVOPS_DEPLOY_ENVIRONMENT_INSPECT')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListDeployEnvironments
      summary: Gets a list of all DeployEnvironments in a compartment
      description: |
        Returns a list of DeployEnvironments.
      parameters:
        - $ref: '#/parameters/ProjectIdentifierQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - $ref: '#/parameters/ResourceIdQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/DeployEnvironment/lifecycleState"
          description: A filter to return only DeployEnvironments that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployEnvironmentSummary'
      responses:
        200:
          description: A page of DeployEnvironmentCollection objects.
          schema:
            $ref: '#/definitions/DeployEnvironmentCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['deployEnvironment']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployEnvironment:
            serviceResourceName: DeployEnvironment
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api','GetProject',request.body.projectId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOY_ENVIRONMENT_CREATE"]
        authorization:
          mode: automated
          check: resources['deployEnvironment'].grantedPermissions.contains('DEVOPS_DEPLOY_ENVIRONMENT_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployEnvironment
        maximumAttemptCount: 3
      operationId: CreateDeployEnvironment
      summary: Creates a new DeployEnvironment
      description: |
        Creates a new DeployEnvironment.
      parameters:
        - name: CreateDeployEnvironmentDetails
          description: Details for the new DeployEnvironment.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateDeployEnvironmentDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployEnvironment'
      responses:
        201:
          description: The DeployEnvironment that is created.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id:  *ref-opc-request-id
          schema:
            $ref: '#/definitions/DeployEnvironment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployEnvironments/{deployEnvironmentId}:
    get:
      tags: ['deployEnvironment']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployEnvironment:
            serviceResourceName: DeployEnvironment
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployEnvironment', request.resourceId).compartmentId
            permissions: ["DEVOPS_DEPLOY_ENVIRONMENT_READ"]
        authorization:
          mode: automated
          check: resources['deployEnvironment'].grantedPermissions.contains('DEVOPS_DEPLOY_ENVIRONMENT_READ')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetDeployEnvironment
      summary: Get DeployEnvironment
      description: Gets a DeployEnvironment by identifier
      parameters:
        - $ref: '#/parameters/DeployEnvironmentIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the DeployEnvironment with the given id
          schema:
            $ref: '#/definitions/DeployEnvironment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['deployEnvironment']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployEnvironment:
            serviceResourceName: DeployEnvironment
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployEnvironment', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOY_ENVIRONMENT_UPDATE"]
        authorization:
          mode: automated
          check: resources['deployEnvironment'].grantedPermissions.contains('DEVOPS_DEPLOY_ENVIRONMENT_UPDATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployEnvironment
        maximumAttemptCount: 3
      operationId: UpdateDeployEnvironment
      summary: Update the DeployEnvironment identified by the id
      description: Updates the DeployEnvironment
      parameters:
        - $ref: '#/parameters/DeployEnvironmentIdentifierPathParam'
        - name: UpdateDeployEnvironmentDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateDeployEnvironmentDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployEnvironment'
      responses:
        202:
          description: Accepted the request. The DeployEnvironment will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/DeployEnvironment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['deployEnvironment']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployEnvironment:
            serviceResourceName: DeployEnvironment
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployEnvironment', request.resourceId).compartmentId
            resourceOcid: request.resourceId
            actionKind: delete
            reconciliationCanStartAfterSecs: 60
            permissions: ["DEVOPS_DEPLOY_ENVIRONMENT_DELETE"]
        authorization:
          mode: automated
          check: resources['deployEnvironment'].grantedPermissions.contains('DEVOPS_DEPLOY_ENVIRONMENT_DELETE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployEnvironment
        maximumAttemptCount: 3
      operationId: DeleteDeployEnvironment
      summary: Delete a provisioned DeployEnvironment
      description: Deletes a DeployEnvironment resource by identifier
      parameters:
        - $ref: '#/parameters/DeployEnvironmentIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployEnvironment'
      responses:
        202:
          description: Accepted the request. The DeployEnvironment will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
# ------------------- Artifact API ----------------------
  /deployArtifacts:
    get:
      tags: ['deployArtifact']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployArtifact:
            serviceResourceName: DeployArtifact
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              downstream.getOr404('dlc-project-service-control-plane-api','GetProject',request.parameter.projectId).compartmentId
            actionKind: read
            permissions: ["DEVOPS_DEPLOY_ARTIFACT_INSPECT"]
        authorization:
          mode: automated
          check: resources['deployArtifact'].grantedPermissions.contains('DEVOPS_DEPLOY_ARTIFACT_INSPECT')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListDeployArtifacts
      summary: Gets a list of all DeployArtifacts in a compartment
      description: |
        Returns a list of DeployArtifacts.
      parameters:
        - $ref: '#/parameters/ResourceIdQueryParam'
        - $ref: '#/parameters/ProjectIdentifierQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/DeployArtifact/lifecycleState"
          description: A filter to return only DeployArtifacts that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployArtifactSummary'
      responses:
        200:
          description: A page of DeployArtifactCollection objects.
          schema:
            $ref: '#/definitions/DeployArtifactCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['deployArtifact']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployArtifact:
            serviceResourceName: DeployArtifact
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api','GetProject',request.body.projectId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOY_ARTIFACT_CREATE"]
        authorization:
          mode: automated
          check: resources['deployArtifact'].grantedPermissions.contains('DEVOPS_DEPLOY_ARTIFACT_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployArtifact
        maximumAttemptCount: 3
      operationId: CreateDeployArtifact
      summary: Creates a new DeployArtifact
      description: |
        Creates a new DeployArtifact.
      parameters:
        - name: CreateDeployArtifactDetails
          description: Details for the new DeployArtifact.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateDeployArtifactDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployArtifact'
      responses:
        201:
          description: The DeployArtifact is created.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id:  *ref-opc-request-id
          schema:
            $ref: '#/definitions/DeployArtifact'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployArtifacts/{deployArtifactId}:
    get:
      tags: ['deployArtifact']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployArtifact:
            serviceResourceName: DeployArtifact
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployArtifact', request.resourceId).compartmentId
            permissions: ["DEVOPS_DEPLOY_ARTIFACT_READ"]
        authorization:
          mode: automated
          check: resources['deployArtifact'].grantedPermissions.contains('DEVOPS_DEPLOY_ARTIFACT_READ')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetDeployArtifact
      summary: Get DeployArtifact
      description: Gets a DeployArtifact by identifier
      parameters:
        - $ref: '#/parameters/DeployArtifactIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the DeployArtifact with the given id
          schema:
            $ref: '#/definitions/DeployArtifact'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['deployArtifact']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployArtifact:
            serviceResourceName: DeployArtifact
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployArtifact', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOY_ARTIFACT_UPDATE"]
        authorization:
          mode: automated
          check: resources['deployArtifact'].grantedPermissions.contains('DEVOPS_DEPLOY_ARTIFACT_UPDATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployArtifact
        maximumAttemptCount: 3
      operationId: UpdateDeployArtifact
      summary: Update the DeployArtifact identified by the id
      description: Updates the DeployArtifact
      parameters:
        - $ref: '#/parameters/DeployArtifactIdentifierPathParam'
        - name: UpdateDeployArtifactDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateDeployArtifactDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployArtifact'
      responses:
        202:
          description: Accepted the request. The DeployArtifact will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/DeployArtifact'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['deployArtifact']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployArtifact:
            serviceResourceName: DeployArtifact
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployArtifact', request.resourceId).compartmentId
            resourceOcid: request.resourceId
            actionKind: delete
            reconciliationCanStartAfterSecs: 60
            permissions: ["DEVOPS_DEPLOY_ARTIFACT_DELETE"]
        authorization:
          mode: automated
          check: resources['deployArtifact'].grantedPermissions.contains('DEVOPS_DEPLOY_ARTIFACT_DELETE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployArtifact
        maximumAttemptCount: 3
      operationId: DeleteDeployArtifact
      summary: Delete a provisioned DeployArtifact
      description: Deletes a DeployArtifact resource by identifier
      parameters:
        - $ref: '#/parameters/DeployArtifactIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployArtifact'
      responses:
        202:
          description: Accepted the request. The Artifact will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
  # ------------------- Pipeline API -------------------
  /deployPipelines:
    get:
      tags: ['deployPipeline']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployPipeline:
            serviceResourceName: DeployPipeline
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              downstream.getOr404('dlc-project-service-control-plane-api','GetProject',request.parameter.projectId).compartmentId
            actionKind: read
            permissions: ["DEVOPS_DEPLOY_PIPELINE_INSPECT"]
        authorization:
          mode: automated
          check: resources['deployPipeline'].grantedPermissions.contains('DEVOPS_DEPLOY_PIPELINE_INSPECT')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListDeployPipelines
      summary: Gets a list of all DeployPipelines in a Compartment or a Project.
      description: |
        Returns a list of DeployPipelines.
      parameters:
        - $ref: '#/parameters/ResourceIdQueryParam'
        - $ref: '#/parameters/ProjectIdentifierQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/DeployPipeline/lifecycleState"
          description: A filter to return only DeployPipelines that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployPipelineSummary'
      responses:
        200:
          description: A page of DeployPipelineSummary objects.
          schema:
            $ref: '#/definitions/DeployPipelineCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['deployPipeline']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployPipeline:
            serviceResourceName: DeployPipeline
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api','GetProject',request.body.projectId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOY_PIPELINE_CREATE"]
        authorization:
          mode: automated
          check: resources['deployPipeline'].grantedPermissions.contains('DEVOPS_DEPLOY_PIPELINE_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: none
          operationResourceName: deployPipeline
        maximumAttemptCount: 3
      operationId: CreateDeployPipeline
      summary: Creates a new DeployPipeline
      description: |
        Creates a new DeployPipeline.
      parameters:
        - name: CreateDeployPipelineDetails
          description: Details for the new DeployPipeline.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateDeployPipelineDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployPipeline'
      responses:
        201:
          description: The DeployPipeline that is created.
          headers:
            location: *ref-location
            opc-work-request-id: *ref-opc-work-request-id
            etag: *ref-etag
            opc-request-id:  *ref-opc-request-id
          schema:
            $ref: '#/definitions/DeployPipeline'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployPipelines/{deployPipelineId}:
    get:
      tags: ['deployPipeline']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployPipeline:
            serviceResourceName: DeployPipeline
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployPipeline', request.resourceId).compartmentId
            permissions: ["DEVOPS_DEPLOY_PIPELINE_READ"]
        authorization:
          mode: automated
          check: resources['deployPipeline'].grantedPermissions.contains('DEVOPS_DEPLOY_PIPELINE_READ')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetDeployPipeline
      summary: Get DeployPipeline
      description: Gets a DeployPipeline by identifier
      parameters:
        - $ref: '#/parameters/DeployPipelineIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the DeployPipeline with the given id
          schema:
            $ref: '#/definitions/DeployPipeline'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['deployPipeline']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployPipeline:
            serviceResourceName: DeployPipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployPipeline', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOY_PIPELINE_UPDATE"]
        authorization:
          mode: automated
          check: resources['deployPipeline'].grantedPermissions.contains('DEVOPS_DEPLOY_PIPELINE_UPDATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: none
          operationResourceName: deployPipeline
        maximumAttemptCount: 3
      operationId: UpdateDeployPipeline
      summary: Update the DeployPipeline identified by the id
      description: Updates the DeployPipeline
      parameters:
        - $ref: '#/parameters/DeployPipelineIdentifierPathParam'
        - name: UpdateDeployPipelineDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateDeployPipelineDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployPipeline'
      responses:
        202:
          description: Accepted the request. The DeployPipeline will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/DeployPipeline'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['deployPipeline']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployPipeline:
            serviceResourceName: DeployPipeline
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployPipeline', request.resourceId).compartmentId
            actionKind: delete
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            permissions: ["DEVOPS_DEPLOY_PIPELINE_DELETE"]
        authorization:
          mode: automated
          check: resources['deployPipeline'].grantedPermissions.contains('DEVOPS_DEPLOY_PIPELINE_DELETE')
          allowCrossTenancy: true
        search:
          mode: none
          operationResourceName: deployPipeline
        maximumAttemptCount: 3
      operationId: DeleteDeployPipeline
      summary: Delete a provisioned DeployPipeline
      description: Deletes a DeployPipeline resource by identifier
      parameters:
        - $ref: '#/parameters/DeployPipelineIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployPipeline'
      responses:
        202:
          description: Accepted the request. The DeployPipeline will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
# ------------------- Stage API -------------------------
  /deployStages:
    get:
      tags: ['deployStage']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployStage:
            serviceResourceName: DeployStage
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              downstream.getOr404('deployment-service-control-plane-api','GetDeployPipeline',request.parameter.deployPipelineId).compartmentId
            actionKind: read
            permissions: ["DEVOPS_DEPLOY_STAGE_INSPECT"]
        authorization:
          mode: automated
          check: resources['deployStage'].grantedPermissions.contains('DEVOPS_DEPLOY_STAGE_INSPECT')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListDeployStages
      summary: Gets a list of all DeployStages in a compartment
      description: |
        Returns a list of DeployStages.
      parameters:
        - $ref: '#/parameters/ResourceIdQueryParam'
        - $ref: '#/parameters/DeployPipelineIdQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/DeployStage/lifecycleState"
          description: A filter to return only DeployStages that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployStageSummary'
      responses:
        200:
          description: A page of DeployStageCollection objects.
          schema:
            $ref: '#/definitions/DeployStageCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['deployStage']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployStage:
            serviceResourceName: DeployStage
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api','GetDeployPipeline',request.body.deployPipelineId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOY_STAGE_CREATE"]
        authorization:
          mode: automated
          check: resources['deployStage'].grantedPermissions.contains('DEVOPS_DEPLOY_STAGE_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployStage
        maximumAttemptCount: 3
      operationId: CreateDeployStage
      summary: Creates a new DeployStage
      description: |
        Creates a new DeployStage.
      parameters:
        - name: CreateDeployStageDetails
          description: Details for the new DeployStage.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateDeployStageDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployStage'
      responses:
        201:
          description: DeployStage that is created.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id:  *ref-opc-request-id
          schema:
            $ref: '#/definitions/DeployStage'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployStages/{deployStageId}:
    get:
      tags: ['deployStage']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployStage:
            serviceResourceName: DeployStage
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployStage', request.resourceId).compartmentId
            permissions: ["DEVOPS_DEPLOY_STAGE_READ"]
        authorization:
          mode: automated
          check: resources['deployStage'].grantedPermissions.contains('DEVOPS_DEPLOY_STAGE_READ')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetDeployStage
      summary: Get DeployStage
      description: Gets a DeployStage by identifier
      parameters:
        - $ref: '#/parameters/DeployStageIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the DeployStage with the given id
          schema:
            $ref: '#/definitions/DeployStage'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['deployStage']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployStage:
            serviceResourceName: DeployStage
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployStage', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOY_STAGE_UPDATE"]
        authorization:
          mode: automated
          check: resources['deployStage'].grantedPermissions.contains('DEVOPS_DEPLOY_STAGE_UPDATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployStage
        maximumAttemptCount: 3
      operationId: UpdateDeployStage
      summary: Update the DeployStage identified by the id
      description: Updates the DeployStage
      parameters:
        - $ref: '#/parameters/DeployStageIdentifierPathParam'
        - name: UpdateDeployStageDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateDeployStageDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployStage'
      responses:
        202:
          description: Accepted the request. The DeployStage will be updated.
          headers:
            location: *ref-location
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/DeployStage'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['deployStage']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-control-plane-api']
        resources:
          deployStage:
            serviceResourceName: DeployStage
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api', 'GetDeployStage', request.resourceId).compartmentId
            resourceOcid: request.resourceId
            actionKind: delete
            reconciliationCanStartAfterSecs: 60
            permissions: ["DEVOPS_DEPLOY_STAGE_DELETE"]
        authorization:
          mode: automated
          check: resources['deployStage'].grantedPermissions.contains('DEVOPS_DEPLOY_STAGE_DELETE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        audit:
          mode: automated
        search:
          mode: none
          operationResourceName: deployStage
        maximumAttemptCount: 3
      operationId: DeleteDeployStage
      summary: Delete a provisioned DeployStage
      description: Deletes a DeployStage resource by identifier
      parameters:
        - $ref: '#/parameters/DeployStageIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeployStage'
      responses:
        202:
          description: Accepted the request. The DeployStage will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
# ------------------- Deployment API --------------------
  /deployments:
    get:
      tags: ['deployment']
      x-obmcs-splat:
        # specify the routing strategy
        # strategy: route-to-any-ad OR route-to-inferred-ad
        # route-to-any-ad: Splat will route to any AD, appropriate for regional services
        # route-to-inferred-ad: Splat supports routing based on request (body, path, query params)
        # E.g. how to infer AD from the request body https://bitbucket.oci.oraclecorp.com/projects/CIM/repos/instance-agent-service/browse/instance-agent-service-spec/specs/service-api.yaml#63
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: >-
              request.parameter.compartmentId ? request.parameter.compartmentId :
              request.parameter.projectId ? downstream.getOr404('dlc-project-service-control-plane-api','GetProject',request.parameter.projectId).compartmentId :
              downstream.getOr404('deployment-service-control-plane-api','GetDeployPipeline',request.parameter.deployPipelineId).compartmentId
            actionKind: read
            permissions: ["DEVOPS_DEPLOYMENT_INSPECT"]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('DEVOPS_DEPLOYMENT_INSPECT')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        # Maximum number of invocation attempts that should be made to the downstream service.
        # Any non-5xx response ends the attempts.
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListDeployments
      summary: Gets a list of all Deployments in a compartment
      description: |
        Returns a list of Deployments.
      parameters:
        - $ref: '#/parameters/DeployPipelineIdQueryParam'
        - $ref: '#/parameters/ResourceIdQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - $ref: '#/parameters/ProjectIdentifierQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/Deployment/lifecycleState"
          description: A filter to return only Deployments that matches the given lifecycleState.
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/DeploymentSummary'
      responses:
        200:
          description: A page of DeploymentCollection objects.
          schema:
            $ref: '#/definitions/DeploymentCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: downstream.getOr404('deployment-service-control-plane-api','GetDeployPipeline',request.body.deployPipelineId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOYMENT_CREATE"]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('DEVOPS_DEPLOYMENT_CREATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: none
          operationResourceName: deployment
        maximumAttemptCount: 3
      operationId: CreateDeployment
      summary: Creates a new Deployment
      description: |
        Creates a new Deployment.
      parameters:
        - name: CreateDeploymentDetails
          description: Details for the new Deployment.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateDeploymentDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Deployment'
      responses:
        200:
          description: Accepted the request. The Deployment will be created.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id:  *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployments/{deploymentId}:
    get:
      tags: ['deployment']
      # for proxying this operation via Splat
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            actionKind: read
            targetCompartmentId: downstream.getOr404('deployment-service-management-plane-api', 'GetDeployment', request.resourceId).compartmentId
            permissions: ["DEVOPS_DEPLOYMENT_READ"]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('DEVOPS_DEPLOYMENT_READ')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        maximumAttemptCount: 3
      operationId: GetDeployment
      summary: Get Deployment
      description: Gets a Deployment by identifier
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the Deployment with the given id
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: downstream.getOr404('deployment-service-management-plane-api', 'GetDeployment', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ["DEVOPS_DEPLOYMENT_UPDATE"]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('DEVOPS_DEPLOYMENT_UPDATE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
        search:
          mode: none
          operationResourceName: deployment
        maximumAttemptCount: 3
      operationId: UpdateDeployment
      summary: Update the Deployment identified by the id
      description: Updates the Deployment
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - name: UpdateDeploymentDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateDeploymentDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      x-related-resource: '#/definitions/Deployment'
      responses:
        200:
          description: Accepted the request. The Deployment will be updated.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'


  /deployments/{deploymentId}/actions/approve:
    post:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        # Splat supports throttling, appropriate for PUT/POST operations
        # Below is example of throttling limits hard coded in the Splat registration.
        # perUserLimit: limit to apply to this operation for a single user. Null to use the default per-user limit (20 RPS - requests per second)
        # throttling:
        #   perUserLimit:
        #     rpsLimit: 10
        #     rpmLimit: 50
        serviceList: ['deployment-service-management-plane-api']
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: downstream.getOr404('deployment-service-management-plane-api', 'GetDeployment', request.resourceId).compartmentId
            actionKind: create
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            systemTags: '["orcl-cloud": ["free-tier-retained": "true"]]'
            permissions: ['DEVOPS_DEPLOYMENT_APPROVE']
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('DEVOPS_DEPLOYMENT_APPROVE')
          allowCrossTenancy: true
        tagStore:
          mode: automated
          behavior: authorizationOnly
        maximumAttemptCount: 3
      operationId: ApproveDeployment
      summary: Submit stage approval.
      description: Submit stage approval.
      parameters:
        - $ref: "#/parameters/DeploymentIdentifierPathParam"
        - name: ApproveDeploymentDetails
          in: body
          description: The stage information for approval.
          required: true
          schema:
            $ref: '#/definitions/ApproveDeploymentDetails'
        - $ref: "#/parameters/IfMatchHeader"
        - $ref: "#/parameters/RequestIdHeader"
        - $ref: "#/parameters/RetryTokenHeader"
      x-related-resource: '#/definitions/Deployment'
      responses:
        200:
          description: Approved the pending deployment successfully.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'

  /deployments/{deploymentId}/actions/cancel:
    post:
      tags: [ 'deployment' ]
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: [ 'deployment-service-management-plane-api' ]
        resources:
          deployment:
            serviceResourceName: Deployment
            targetCompartmentId: downstream.getOr404('deployment-service-management-plane-api', 'GetDeployment', request.resourceId).compartmentId
            actionKind: update
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            permissions: [ "DEVOPS_DEPLOYMENT_CANCEL" ]
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('DEVOPS_DEPLOYMENT_CANCEL')
          allowCrossTenancy: true
        tagStore:
          mode: automated
          behavior: authorizationOnly
        maximumAttemptCount: 3
      operationId: CancelDeployment
      summary: Cancel a provisioned Deployment
      description: Cancels a Deployment resource by identifier
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - name: CancelDeploymentDetails
          in: body
          description: The information regarding the deployment to be canceled.
          required: true
          schema:
            $ref: '#/definitions/CancelDeploymentDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: "#/parameters/RetryTokenHeader"
      x-related-resource: '#/definitions/Deployment'
      responses:
        200:
          description: Accepted the request. The Deployment will be canceled.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'
  # ------------------- Work Requests for control plane api ------------------------------
  /workRequests/{workRequestId}:

    get:
      tags: ['workRequest']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          workRequest:
            serviceResourceName: WorkRequest
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api', 'GetWorkRequest', request.resourceId).compartmentId
            actionKind: read
            permissions: ["DEVOPS_WORK_REQUEST_READ"]
        authorization:
          mode: automated
          check: resources['workRequest'].grantedPermissions.contains('DEVOPS_WORK_REQUEST_READ')
          allowCrossTenancy: true
        maximumAttemptCount: 3
      operationId: GetWorkRequest
      summary: GET Work Request Status
      x-related-resource: '#/definitions/WorkRequest'
      description: Gets the status of the work request with the given ID.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          schema:
            $ref: '#/definitions/WorkRequest'
          description: The detail of the work request.
          headers:
            opc-request-id: *ref-opc-request-id
            retry-after: *ref-retry-after
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests:
    get:
      tags: ['workRequest']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          workRequest:
            serviceResourceName: WorkRequest
            targetCompartmentId: request.parameter.compartmentId
            actionKind: read
            permissions: ["DEVOPS_WORK_REQUEST_INSPECT"]
        authorization:
          mode: automated
          check: resources['workRequest'].grantedPermissions.contains('DEVOPS_WORK_REQUEST_INSPECT')
          allowCrossTenancy: true
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListWorkRequests
      summary: List Work Requests
      x-related-resource: '#/definitions/WorkRequest'
      description: |
        Lists the work requests in a compartment.
      parameters:
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/WorkRequestIdQueryParam'
        - $ref: '#/parameters/WorkRequestStatusQueryParam'
        - $ref: '#/parameters/ResourceIdentifierQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/WorkRequestSortByQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          schema:
            $ref: '#/definitions/WorkRequestCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests/{workRequestId}/errors:
    get:
      tags: ['workRequest']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          workRequest:
            serviceResourceName: WorkRequest
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api', 'GetWorkRequest', request.resourceId).compartmentId
            actionKind: read
            permissions: ["DEVOPS_WORK_REQUEST_READ"]
        authorization:
          mode: automated
          check: resources['workRequest'].grantedPermissions.contains('DEVOPS_WORK_REQUEST_READ')
          allowCrossTenancy: true
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListWorkRequestErrors
      summary: Lists work request errors
      x-related-resource: '#/definitions/WorkRequestError'
      description: |
        Return a (paginated) list of errors for a given work request.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/WorkRequestSortByQueryParam'
      responses:
        200:
          description: List of work request errors. #TODO: change descriptions
          headers:
            opc-next-page: *ref-opc-next-page
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/WorkRequestErrorCollection'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests/{workRequestId}/logs:
    get:
      tags: ['workRequest']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        serviceList: ['dlc-project-service-control-plane-api']
        resources:
          workRequest:
            serviceResourceName: WorkRequest
            targetCompartmentId: downstream.getOr404('dlc-project-service-control-plane-api', 'GetWorkRequest', request.resourceId).compartmentId
            actionKind: read
            permissions: ["DEVOPS_WORK_REQUEST_READ"]
        authorization:
          mode: automated
          check: resources['workRequest'].grantedPermissions.contains('DEVOPS_WORK_REQUEST_READ')
          allowCrossTenancy: true
        maximumAttemptCount: 3
        operationType: LIST
        listingEnhancements: false # opt-out splat in house listing enhancements
      operationId: ListWorkRequestLogs
      summary: Lists work request logs
      x-related-resource: '#/definitions/WorkRequestLogEntry'
      description: |
        Return a (paginated) list of logs for a given work request.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/WorkRequestSortByQueryParam'
      responses:
        200:
          description: List of work request logs collection.
          headers:
            opc-next-page: *ref-opc-next-page
            opc-request-id: *ref-opc-request-id
          schema:
            $ref: '#/definitions/WorkRequestLogEntryCollection'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

#==========[ Definitions ]===============================================================================================
definitions:

# Shared definitions

  SortOrder:
    type: string
    description: Sort orders.
    enum: &SORTORDER
      - ASC
      - DESC

  Error:
    description: Error Information.
    required:
      - code
      - message
    properties:
      code:
        description: A short error code that defines the error, meant for programmatic parsing.
        type: string
      message:
        description: A human-readable error string.
        type: string

  DeployStagePredecessor:
    description: Metadata for defining a stage's predecessor.
    type: object
    properties:
      id:
        description: The id of the predecessor stage. If a stage is the first stage in the pipeline, then the id is the pipeline's id.
        type: string
    required:
      - id

  DeployStagePredecessorCollection:
    type: object
    description: The containing collection for the predecessors of a Stage.
    properties:
      items:
        description: A list of StagePredecessors for a stage.
        type: array
        items:
          $ref: "#/definitions/DeployStagePredecessor"
    required:
      - items

# --- Project model definitions
  Project:
    description: Project will create a default configuration for the project resources such as source code repository, build pipeline, and deploy pipeline
    type: object
    x-obmcs-splat:
      resourceKind: devops-project
      ocidEntityType: devopsproject
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetProject
      listResourcesOperationId: ListProjects
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "DevOpsProject"
        scope: "customer"
    required:
      - id
      - name
      - compartmentId
      - notificationConfig
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      name:
        description: Project Identifier
        type: string
      description:
        description: Project description
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      loggingConfig:
        $ref: "#/definitions/LoggingConfig"
      notificationConfig:
        $ref: "#/definitions/NotificationConfig"
      timeCreated:
        description: The time the the Project was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Project was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Project.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  ProjectSummary:
    description: Summary of the Project.
    type: object
    required:
      - id
      - name
      - compartmentId
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      name:
        description: Project Identifier
        type: string
      description:
        description: Project description
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      loggingConfig:
        $ref: "#/definitions/LoggingConfig"
      notificationConfig:
        $ref: "#/definitions/NotificationConfig"
      timeCreated:
        description: The time the the Project was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Project was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Deployment.
        type: string
        x-obmcs-enumref: "#/definitions/Project/lifecycleState"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  ProjectCollection:
    type: object
    description: Results of an project search.
    required:
      - items
    properties:
      items:
        type: array
        description: Array of ProjectSummary items.
        items:
          $ref: "#/definitions/ProjectSummary"

  CreateProjectDetails:
    description: The information about new Project to be created.
    type: object
    required:
      - name
      - compartmentId
      - loggingConfig
      - notificationConfig
    properties:
      name:
        description: Project name(Case-sensitive).
        type: string
        pattern: '^[a-zA-Z][a-zA-Z_0-9]*$'
        minLength: 1
        maxLength: 255
      description:
        description: Project description
        type: string
        maxLength: 400
      loggingConfig:
        $ref: "#/definitions/LoggingConfig"
      notificationConfig:
        $ref: "#/definitions/NotificationConfig"
      compartmentId:
        description: Compartment Identifier
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateProjectDetails:
    description: The information to be updated for the given Project.
    type: object
    properties:
      name:
        description: Project name
        type: string
        pattern: '^[a-zA-Z][a-zA-Z_0-9]*$'
        minLength: 1
        maxLength: 255
      description:
        description: Project description
        type: string
        maxLength: 400
      loggingConfig:
        $ref: "#/definitions/LoggingConfig"
      notificationConfig:
        $ref: "#/definitions/NotificationConfig"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  ChangeProjectCompartmentDetails:
    description: The OCID of the compartment into which the project should be moved.
    type: object
    required:
      - compartmentId
    properties:
      compartmentId:
        type: string
        minLength: 1
        maxLength: 255
        description: |
          The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment into which the resource should be moved.

  LoggingConfig:
    description: Logging configuration for the project.
    type: object
    properties:
      logGroupId:
        description: The ocid of the log group.
        type: string
      displayNamePrefix:
        description: The prefix for the display name.
        type: string
        default: null
      retentionPeriodInDays:
        description: The number of days the logs should be retained for.
        type: integer
        format: int32
      isArchivingEnabled:
        description: A field to represent if archiving is enabled.
        type: boolean
        default: false
    required:
      - logGroupId
      - retentionPeriodInDays

  NotificationConfig:
    description: Notification configuration for the project.
    type: object
    properties:
      topicId:
        description: The topic id for notifications.
        type: string
    required:
      - topicId
# --- Artifact model definitions
  DeployArtifact:
    description: An artifact in the general artifact service, for example an OKE manifest, a deployment spec, or a file that will be deployed to some target environment.
    type: object
    x-obmcs-splat:
      resourceKind: devops-deploy-artifact
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # This value is used in multiple ways by SPLAT: one is authz checks when this type gets passed to identity,
      # the other is OCID generation for SPLAT-managed resources like this one.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: devopsdeployartifact
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetDeployArtifact
      listResourcesOperationId: ListDeployArtifacts
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "DevOpsDeployArtifact"
        scope: "customer"
    required:
      - id
      - projectId
      - compartmentId
      - deployArtifactType
      - deployArtifactSource
      - argumentSubstitutionMode
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the DeployArtifact
        type: string
        maxLength: 400
      displayName:
        description: DeployArtifact identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      deployArtifactType:
        description: Type of the DeployArtifact
        type: string
        enum:
          - DEPLOYMENT_SPEC
          - JOB_SPEC
          - KUBERNETES_MANIFEST
          - GENERIC_FILE
          - DOCKER_IMAGE
      argumentSubstitutionMode:
        description: Mode for artifact parameter substitution
        type: string
        enum:
          - NONE
          - SUBSTITUTE_PLACEHOLDERS
      deployArtifactSource:
        $ref: "#/definitions/DeployArtifactSource"
      deployArtifactParameters:
        $ref: "#/definitions/DeployArtifactParameterCollection"
      timeCreated:
        description: The time the the DeployArtifact was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the DeployArtifact was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the DeployArtifact.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeployArtifactSummary:
    description: Summary of the DeployArtifact.
    type: object
    required:
      - id
      - projectId
      - compartmentId
      - deployArtifactType
      - deployArtifactSource
      - argumentSubstitutionMode
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the DeployArtifact
        type: string
        maxLength: 400
      displayName:
        description: DeployArtifact identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      deployArtifactType:
        description: Type of the DeployArtifact
        type: string
        x-obmcs-enumref: "#/definitions/DeployArtifact/deployArtifactType"
      deployArtifactSource:
        $ref: "#/definitions/DeployArtifactSource"
      deployArtifactParameters:
        $ref: "#/definitions/DeployArtifactParameterCollection"
      argumentSubstitutionMode:
        description: Mode for artifact parameter substitution
        type: string
        x-obmcs-enumref: "#/definitions/DeployArtifact/argumentSubstitutionMode"
      timeCreated:
        description: The time the the DeployArtifact was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the DeployArtifact was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the DeployArtifact.
        type: string
        x-obmcs-enumref: "#/definitions/DeployArtifact/lifecycleState"
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeployArtifactCollection:
    type: object
    description: Results of an DeployArtifact search.
    required:
      - items
    properties:
      items:
        type: array
        description: DeployArtifactSummary items found for the search.
        items:
          $ref: "#/definitions/DeployArtifactSummary"

  CreateDeployArtifactDetails:
    description: The information about new DeployArtifact.
    type: object
    required:
      - deployArtifactType
      - deployArtifactSource
      - projectId
      - argumentSubstitutionMode
    properties:
      description:
        description: Optional description about the DeployArtifact
        type: string
        maxLength: 400
      displayName:
        description: DeployArtifact display name
        type: string
        minLength: 1
        maxLength: 255
      deployArtifactType:
        description: Type of the DeployArtifact
        type: string
        x-obmcs-enumref: "#/definitions/DeployArtifact/deployArtifactType"
      deployArtifactSource:
        $ref: "#/definitions/DeployArtifactSource"
      deployArtifactParameters:
        $ref: "#/definitions/DeployArtifactParameterCollection"
      argumentSubstitutionMode:
        description: Mode for artifact parameter substitution
        type: string
        x-obmcs-enumref: "#/definitions/DeployArtifact/argumentSubstitutionMode"
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateDeployArtifactDetails:
    description: The information to be updated.
    type: object
    properties:
      description:
        description: Optional description about the DeployArtifact
        type: string
        maxLength: 400
      displayName:
        description: DeployArtifact display name
        type: string
        minLength: 1
        maxLength: 255
      deployArtifactType:
        description: Type of the DeployArtifact
        type: string
        x-obmcs-enumref: "#/definitions/DeployArtifact/deployArtifactType"
      deployArtifactSource:
        $ref: "#/definitions/DeployArtifactSource"
      deployArtifactParameters:
        $ref: "#/definitions/DeployArtifactParameterCollection"
      argumentSubstitutionMode:
        description: Mode for artifact parameter substitution
        type: string
        x-obmcs-enumref: "#/definitions/DeployArtifact/argumentSubstitutionMode"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  DeployArtifactParameterCollection:
    type: object
    description: Specifies list of parameters present in DeployArtifact
    properties:
      items:
        description: Specifies parameters present in DeployArtifact
        type: array
        maxItems: 100
        items:
          $ref: '#/definitions/DeployArtifactParameter'
    required:
      - items

  DeployArtifactParameter:
    type: object
    description: Specifies parameter present in DeployArtifact
    properties:
      name:
        description: Name of the parameter
        type: string
        minLength: 1
        maxLength: 255
    required:
      - name

  DeployArtifactSource:
    type: object
    description: Specifies source of an artifact
    discriminator: deployArtifactSourceType
    properties:
      deployArtifactSourceType:
        description: Specifies types of artifact sources
        type: string
        enum:
          - INLINE
          - OCIR
          - GENERIC_ARTIFACT
    required:
      - deployArtifactSourceType


  InlineDeployArtifactSource:
    description: Specifies the Inline DeployArtifact Source Details
    allOf:
      - $ref: '#/definitions/DeployArtifactSource'
      - discriminator: INLINE
        properties:
          base64EncodedContent:
            description: base64 Encoded String
            type: string
            format: byte
        required:
          - base64EncodedContent

  OcirDeployArtifactSource:
    description: Specifies OCIR details
    allOf:
      - $ref: '#/definitions/DeployArtifactSource'
      - discriminator: OCIR
        properties:
          imageUri:
            description: Specifies OCIR Image Path - optionally include tag
            type: string
            minLength: 1
            maxLength: 1024
          imageDigest:
            description: Specifies image digest for the version of the image
            type: string
            minLength: 1
            maxLength: 1024
        required:
          - imageUri

  GenericDeployArtifactSource:
    description: Specifies the Generic DeployArtifact Source Details
    allOf:
      - $ref: '#/definitions/DeployArtifactSource'
      - discriminator: GENERIC_ARTIFACT
        properties:
          repositoryId:
            description: Specifies the repository id
            type: string
            minLength: 1
            maxLength: 255
          deployArtifactPath:
            description: Specifies the artifact path in the repository
            type: string
            minLength: 1
            maxLength: 1024
          deployArtifactVersion:
            description: Users should be able to set this as a pipeline parameter for example ${appVersion}
            type: string
            minLength: 1
            maxLength: 255
            example: ${appVersion}
        required:
          - repositoryId
          - deployArtifactPath
          - deployArtifactVersion
# --- Deployment model definitions

  DeploymentArgument:
    type: object
    description: Values for pipeline parameters to be supplied at the time of deployment.
    properties:
      name:
        description: |
          Name of the parameter (Case-sensitive).
        type: string
        minLength: 1
        maxLength: 255
        pattern: '^[a-zA-Z][a-zA-Z_0-9]*$'
      value:
        description: value of the argument
        type: string
        minLength: 1
        maxLength: 255
    required:
      - name
      - value

  DeploymentArgumentCollection:
    type: object
    description: |
      Specifies list of arguments passed along with the deployment.
    properties:
      items:
        description:  List of arguments provided at the time of deployment.
        type: array
        items:
          $ref: '#/definitions/DeploymentArgument'
    required:
      - items

  DeployArtifactOverrideArgument:
    type: object
    description: Values for artifact parameters to be supplied at the time of deployment.
    properties:
      deployArtifactId:
        description: The OCID of the artifact to which this parameter applies.
        type: string
      name:
        description: Name of the parameter (Case-sensitive).
        type: string
        minLength: 1
        maxLength: 255
        pattern: '^[a-zA-Z][a-zA-Z_0-9]*$'
      value:
        description: Value of the parameter.
        type: string
        minLength: 1
        maxLength: 255
    required:
      - deployArtifactId
      - name
      - value

  DeployArtifactOverrideArgumentCollection:
    type: object
    description: Specifies the list of Artifact override arguments at the time of deployment.
    properties:
      items:
        description: List of Artifact override arguments at the time of deployment.
        type: array
        items:
          $ref: '#/definitions/DeployArtifactOverrideArgument'
    required:
      - items

  DeploymentArtifact:
    type: object
    description: Artifact used in deployment.
    properties:
      deployArtifactId:
        description: Id of artifact
        type: string
      displayName:
        description: display name of artifact
        type: string
    required:
      - deployArtifactId

  DeploymentArtifactCollection:
    type: object
    description: List of all artifacts used in deployment.
    properties:
      items:
        description:  List of all artifacts used in deployment.
        type: array
        items:
          $ref: '#/definitions/DeploymentArtifact'
    required:
      - items

  DeploymentEnvironment:
    type: object
    description: Environment used in deployment.
    properties:
      deployEnvironmentId:
        description: Id of Environment
        type: string
      displayName:
        description: display name of artifact
        type: string
    required:
      - deployEnvironmentId

  DeploymentEnvironmentCollection:
    type: object
    description: List of all Environments used in deployment.
    properties:
      items:
        description:  List of all Environments used in deployment.
        type: array
        items:
          $ref: '#/definitions/DeploymentEnvironment'
    required:
      - items

  DeployStageExecutionProgress:
    description: The details about the execution progress of a Stage in a Deployment.
    properties:
      deployStageDisplayName:
        description: Stage display name
        type: string
      deployStageType:
        description: DeployStage sub types
        type: string
        enum:
          - WAIT
          - COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
          - COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
          - COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
          - OKE_DEPLOYMENT
          - DEPLOY_FUNCTION
          - RUN_OKE_JOB
          - INVOKE_FUNCTION
          - RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
          - LOAD_BALANCER_TRAFFIC_SHIFT
          - MANUAL_APPROVAL
          - RUN_DEPLOYMENT_PIPELINE
      deployStageId:
        description: Stage id
        type: string
      timeStarted:
        description: The time the Stage was started executing. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeFinished:
        description: The time the Stage was finished executing. An RFC3339 formatted datetime string
        type: string
        format: date-time
      status:
        description: The current state of the Stage.
        type: string
        enum:
          - ACCEPTED
          - IN_PROGRESS
          - FAILED
          - SUCCEEDED
          - CANCELING
          - CANCELED
          - ROLLBACK_IN_PROGRESS
          - ROLLBACK_SUCCEEDED
          - ROLLBACK_FAILED
      deployStagePredecessors:
        $ref: "#/definitions/DeployStagePredecessorCollection"
      deployStageExecutionProgressDetails:
        description: The details about stage execution for all the target environments.
        type: array
        items:
          $ref: '#/definitions/DeployStageExecutionProgressDetails'

  DeployStageExecutionProgressDetails:
    description: The details about stage execution for each target environment.
    properties:
      targetId:
        description: The functionId, instanceId or the clusterId. For WaitStage it will be deployStageId.
        type: string
      targetGroup:
        description: The group for the target for example, the batch number for an InstanceGroup deployment.
        type: string
      steps:
        description: The details about all the steps for one target environment.
        type: array
        items:
          $ref: '#/definitions/DeployStageExecutionStep'
      rollbackSteps:
        description: The details about all the rollback steps for one target environment.
        type: array
        items:
          $ref: '#/definitions/DeployStageExecutionStep'

  DeployStageExecutionStep:
    description: The details about each steps in stage execution for a target environment.
    properties:
      name:
        description: Name of the step.
        type: string
      state:
        description: State of the step.
        type: string
        enum:
          - WAITING
          - IN_PROGRESS
          - FAILED
          - SUCCEEDED
          - CANCELED
      timeStarted:
        description: Time when the step started.
        type: string
        format: date-time
      timeFinished:
        description: Time when the step finished.
        type: string
        format: date-time

  DeploymentExecutionProgress:
    type: object
    description: The execution progress details of a Deployment.
    properties:
      timeStarted:
        description: The time the the Deployment is started. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeFinished:
        description: The time the Deployment is finished. An RFC3339 formatted datetime string
        type: string
        format: date-time
      deployStageExecutionProgress:
        description: Map of stage OCIDs to DeployStageExecutionProgress model.
        type: object
        additionalProperties:
          $ref: '#/definitions/DeployStageExecutionProgress'

  Deployment:
    description: A single execution or run of a Pipeline.
    type: object
    discriminator: deploymentType
    x-obmcs-splat:
      resourceKind: devops-deployment
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # This value is used in multiple ways by SPLAT: one is authz checks when this type gets passed to identity,
      # the other is OCID generation for SPLAT-managed resources like this one.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: devopsdeployment
      adLocality: regional
      activeLifecycleStates: ['ACCEPTED', 'IN_PROGRESS']
      deletedLifecycleStates: ['']
      getOperationId: GetDeployment
      listResourcesOperationId: ListDeployments
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "DevOpsDeployment"
        scope: "customer"
    required:
      - deploymentType
      - id
      - projectId
      - deployPipelineId
      - compartmentId
    properties:
      deploymentArtifactCollection:
        $ref: "#/definitions/DeploymentArtifactCollection"
      deploymentEnvironmentCollection:
        $ref: "#/definitions/DeploymentEnvironmentCollection"
      deploymentType:
        description: Specifies type of Deployment
        type: string
        enum:
          - PIPELINE_DEPLOYMENT
          - PIPELINE_REDEPLOYMENT
          - SINGLE_STAGE_DEPLOYMENT
      id:
        description: Unique identifier that is immutable on creation
        type: string
      displayName:
        description: Deployment identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
      deployPipelineId:
        description: Pipeline Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      timeCreated:
        description: The time the the Deployment was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Deployment was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Deployment.
        type: string
        enum:
          - ACCEPTED
          - IN_PROGRESS
          - FAILED
          - SUCCEEDED
          - CANCELING
          - CANCELED
      lifecyleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      deploymentArguments:
        $ref: '#/definitions/DeploymentArgumentCollection'
      deployArtifactOverrideArguments:
        $ref: '#/definitions/DeployArtifactOverrideArgumentCollection'
      deploymentExecutionProgress:
        $ref: '#/definitions/DeploymentExecutionProgress'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeploymentSummary:
    description: Summary of the Deployment.
    type: object
    discriminator: deploymentType
    required:
      - deploymentType
      - id
      - projectId
      - deployPipelineId
      - compartmentId
    properties:
      deploymentType:
        description: Specifies sub-type for this Deployment.
        type: string
        x-obmcs-enumref: '#/definitions/Deployment/deploymentType'
      id:
        description: Unique identifier that is immutable on creation
        type: string
      displayName:
        description: Deployment identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
      deployPipelineId:
        description: Pipeline Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
      timeCreated:
        description: The time the the Deployment was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the Deployment was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the Deployment.
        type: string
        x-obmcs-enumref: '#/definitions/Deployment/lifecycleState'
      deploymentArguments:
        $ref: '#/definitions/DeploymentArgumentCollection'
      deployArtifactOverrideArguments:
        $ref: '#/definitions/DeployArtifactOverrideArgumentCollection'
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeploymentCollection:
    type: object
    description: Results of a deployment search.
    required:
      - items
    properties:
      items:
        type: array
        description: Array of DeploymentSummary items.
        items:
          $ref: "#/definitions/DeploymentSummary"

  CreateDeploymentDetails:
    description: The information about new Deployment.
    type: object
    discriminator: deploymentType
    required:
      - deploymentType
      - deployPipelineId
    properties:
      deployPipelineId:
        description: Pipeline Identifier
        type: string
        minLength: 1
        maxLength: 255
      deploymentType:
        description: Specifies sub-type for this Deployment.
        type: string
        x-obmcs-enumref: '#/definitions/Deployment/deploymentType'
      displayName:
        description: Deployment display name
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateDeploymentDetails:
    description: The information to be updated.
    type: object
    discriminator: deploymentType
    required:
      - deploymentType
    properties:
      deploymentType:
        description: Specifies sub-type for this Deployment.
        type: string
        x-obmcs-enumref: '#/definitions/Deployment/deploymentType'
      displayName:
        description: Deployment display name
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  ApproveDeploymentDetails:
    description: The information of stage for submitting aprove.
    type: object
    required:
      - deployStageId
    properties:
      deployStageId:
        type: string
        minLength: 1
        maxLength: 255
        description: |
          The [OCID](/Content/General/Concepts/identifiers.htm) of the stage which is marked for approval.
      reason:
        description: The reason for approving the deployment.
        type: string
        minLength: 1
        maxLength: 512

  CancelDeploymentDetails:
    description: The information regarding the deployment to be canceled.
    type: object
    required:
      - reason
    properties:
      reason:
        description: The reason for canceling the deployment.
        type: string
        minLength: 1
        maxLength: 512

  CreateDeployPipelineDeploymentDetails:
    description: Details of the new Deployment to be created that will run all the stages in the pipeline.
    allOf:
      - $ref: '#/definitions/CreateDeploymentDetails'
      - discriminator: PIPELINE_DEPLOYMENT
        properties:
          deploymentArguments:
            $ref: '#/definitions/DeploymentArgumentCollection'
          deployArtifactOverrideArguments:
            $ref: '#/definitions/DeployArtifactOverrideArgumentCollection'

  CreateDeployPipelineRedeploymentDetails:
    description: Details of the new Deployment to be created based on a previously executed Deployment.
    allOf:
      - $ref: '#/definitions/CreateDeploymentDetails'
      - discriminator: PIPELINE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId


  CreateSingleDeployStageDeploymentDetails:
    description: Details of a new Deployment to be created that will run a single stage of the pipeline.
    allOf:
      - $ref: '#/definitions/CreateDeploymentDetails'
      - discriminator: SINGLE_STAGE_DEPLOYMENT
        properties:
          deployStageId:
            description: Specifies the OCID of the stage to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
          deploymentArguments:
            $ref: '#/definitions/DeploymentArgumentCollection'
          deployArtifactOverrideArguments:
            $ref: '#/definitions/DeployArtifactOverrideArgumentCollection'
    required:
      - deployStageId

  UpdateDeployPipelineDeploymentDetails:
    description: Update details for a pipeline deployment.
    allOf:
      - $ref: '#/definitions/UpdateDeploymentDetails'
      - discriminator: PIPELINE_DEPLOYMENT

  UpdateDeployPipelineRedeploymentDetails:
    description: Update details for a pipeline redeployment.
    allOf:
      - $ref: '#/definitions/UpdateDeploymentDetails'
      - discriminator: PIPELINE_REDEPLOYMENT


  UpdateSingleDeployStageDeploymentDetails:
    description: Update details for a single stage Deployment.
    allOf:
      - $ref: '#/definitions/UpdateDeploymentDetails'
      - discriminator: SINGLE_STAGE_DEPLOYMENT

  DeployPipelineDeployment:
    description: Deployment of all the stages in the pipeline.
    allOf:
      - $ref: '#/definitions/Deployment'
      - discriminator: PIPELINE_DEPLOYMENT

  DeployPipelineRedeployment:
    description: Redeployment of the full pipeline of a previous Deployment.
    allOf:
      - $ref: '#/definitions/Deployment'
      - discriminator: PIPELINE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId


  SingleDeployStageDeployment:
    description: Deployment of a single stage within the pipeline.
    allOf:
      - $ref: '#/definitions/Deployment'
      - discriminator: SINGLE_STAGE_DEPLOYMENT
        properties:
          deployStageId:
            description: Specifies the OCID of the stage to be deployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - deployStageId

  DeployPipelineDeploymentSummary:
    description: Summary of a full pipeline Deployment.
    allOf:
      - $ref: '#/definitions/DeploymentSummary'
      - discriminator: PIPELINE_DEPLOYMENT

  DeployPipelineRedeploymentSummary:
    description: Summary of a full pipeline Redeployment.
    allOf:
      - $ref: '#/definitions/DeploymentSummary'
      - discriminator: PIPELINE_REDEPLOYMENT
        properties:
          previousDeploymentId:
            description: Specifies the OCID of the previous deployment to be redeployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - previousDeploymentId


  SingleDeployStageDeploymentSummary:
    description: Summary of single stage Deployment.
    allOf:
      - $ref: '#/definitions/DeploymentSummary'
      - discriminator: SINGLE_STAGE_DEPLOYMENT
        properties:
          deployStageId:
            description: Specifies the OCID of the stage to be deployed.
            type: string
            minLength: 1
            maxLength: 255
    required:
      - deployStageId
# --- Environment model definitions
  DeployEnvironment:
    discriminator: deployEnvironmentType
    description: The target OCI infrastructure resource, such as Compute Instances, OKE, or Function, where artifacts will be deployed.
    type: object
    x-obmcs-splat:
      resourceKind: devops-deploy-environment
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # This value is used in multiple ways by SPLAT: one is authz checks when this type gets passed to identity,
      # the other is OCID generation for SPLAT-managed resources like this one.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: devopsdeployenvironment
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetDeployEnvironment
      listResourcesOperationId: ListDeployEnvironments
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "DevOpsDeployEnvironment"
        scope: "customer"
    required:
      - id
      - projectId
      - compartmentId
      - deployEnvironmentType
      - region
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the DeployEnvironment
        type: string
        maxLength: 400
      displayName:
        description: DeployEnvironment identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      compartmentId:
        description: Compartment Identifier
        type: string
        minLength: 1
        maxLength: 255
      deployEnvironmentType:
        description: DeployEnvironment sub types.
        type: string
        enum:
          - OKE_CLUSTER
          - COMPUTE_INSTANCE_GROUP
          - FUNCTION
      region:
        description: Identifier of the Region to which this DeployEnvironment refers.
          Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
        type: string
        minLength: 1
        maxLength: 255
      timeCreated:
        description: The time the the DeployEnvironment was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the DeployEnvironment was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the DeployEnvironment.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeployEnvironmentSummary:
    discriminator: deployEnvironmentType
    description: Summary of the DeployEnvironment.
    type: object
    required:
      - id
      - projectId
      - compartmentId
      - deployEnvironmentType
      - region
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the DeployEnvironment
        type: string
        maxLength: 400
      displayName:
        description: DeployEnvironment identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      compartmentId:
        description: Compartment Identifier
        type: string
        minLength: 1
        maxLength: 255
      deployEnvironmentType:
        description: DeployEnvironment sub types.
        type: string
        x-obmcs-enumref: '#/definitions/DeployEnvironment/deployEnvironmentType'
      region:
        description: Identifier of the Region to which this DeployEnvironment refers.
          Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
        type: string
        minLength: 1
        maxLength: 255
      timeCreated:
        description: The time the the DeployEnvironment was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the DeployEnvironment was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the DeployEnvironment.
        type: string
        x-obmcs-enumref: '#/definitions/DeployEnvironment/lifecycleState'
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeployEnvironmentCollection:
    type: object
    description: Results of an DeployEnvironment search.
    required:
      - items
    properties:
      items:
        type: array
        description: DeployEnvironmentSummary items found for the search.
        items:
          $ref: "#/definitions/DeployEnvironmentSummary"

  CreateDeployEnvironmentDetails:
    discriminator: deployEnvironmentType
    description: The information about new DeployEnvironment.
    type: object
    required:
      - deployEnvironmentType
      - projectId
      - region
    properties:
      description:
        description: Optional description about the DeployEnvironment
        type: string
        maxLength: 400
      displayName:
        description: DeployEnvironment display name
        type: string
        minLength: 1
        maxLength: 255
      deployEnvironmentType:
        description: DeployEnvironment sub types.
        type: string
        x-obmcs-enumref: '#/definitions/DeployEnvironment/deployEnvironmentType'
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      region:
        description: Identifier of the Region to which this DeployEnvironment refers.
          Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateDeployEnvironmentDetails:
    discriminator: deployEnvironmentType
    description: The information to be updated.
    type: object
    required:
      - deployEnvironmentType
    properties:
      description:
        description: Optional description about the DeployEnvironment
        type: string
        maxLength: 400
      displayName:
        description: DeployEnvironment display name
        type: string
        minLength: 1
        maxLength: 255
      deployEnvironmentType:
        description: DeployEnvironment sub types.
        type: string
        x-obmcs-enumref: '#/definitions/DeployEnvironment/deployEnvironmentType'
      region:
        description: Identifier of the Region to which this DeployEnvironment refers.
          Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
        type: string
        minLength: 1
        maxLength: 255
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  OkeClusterDeployEnvironment:
    description: Specifies the OKE Cluster environment.
    allOf:
      - $ref: '#/definitions/DeployEnvironment'
      - discriminator: OKE_CLUSTER
        properties:
          clusterId:
            description: The OCID of the OKE cluster.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - clusterId

  OkeClusterDeployEnvironmentSummary:
    description: Specifies the OKE Cluster environment.
    allOf:
      - $ref: '#/definitions/DeployEnvironmentSummary'
      - discriminator: OKE_CLUSTER
        properties:
          clusterId:
            description: The OCID of the OKE cluster.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - clusterId

  CreateOkeClusterDeployEnvironmentDetails:
    description: Specifies the OKE Cluster environment.
    allOf:
      - $ref: '#/definitions/CreateDeployEnvironmentDetails'
      - discriminator: OKE_CLUSTER
        properties:
          clusterId:
            description: The OCID of the OKE cluster.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - clusterId

  UpdateOkeClusterDeployEnvironmentDetails:
    description: Specifies the OKE Cluster environment.
    allOf:
      - $ref: '#/definitions/UpdateDeployEnvironmentDetails'
      - discriminator: OKE_CLUSTER
        properties:
          clusterId:
            description: The OCID of the OKE cluster.
            type: string
            minLength: 1
            maxLength: 255

  ComputeInstanceGroupDeployEnvironment:
    description: Specifies the Compute Instance Group environment. The instances in the group will be a UNION of the results of each selectors in instanceGroupSelectors.
    allOf:
      - $ref: '#/definitions/DeployEnvironment'
      - discriminator: COMPUTE_INSTANCE_GROUP
        properties:
          computeInstanceGroupSelectors:
            $ref: '#/definitions/ComputeInstanceGroupSelectorCollection'
        required:
          - computeInstanceGroupSelectors

  ComputeInstanceGroupSelectorCollection:
    description: A collection of selectors. The UNION of instances matching the selectors are included in the instance group.
    properties:
      items:
        description: An array of selectors for the instance group. UNION operator will be use for combining the instances selected by each selector.
        type: array
        maxItems: 100
        items:
          $ref: '#/definitions/ComputeInstanceGroupSelector'
    required:
      - items

  ComputeInstanceGroupSelector:
    discriminator: selectorType
    description: Defines how the instances in a instance group environment is selected.
    type: object
    properties:
      selectorType:
        description: Defines the type of the instance selector for the group
        type: string
        enum:
          - INSTANCE_IDS
          - INSTANCE_QUERY
    required:
      - selectorType

  ComputeInstanceGroupByIdsSelector:
    description: Specifies the Compute Instance Group environment by listing the OCIDs of the compute instances
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupSelector'
      - discriminator: INSTANCE_IDS
        properties:
          computeInstanceIds:
            description: Compute instance OCID identifiers that are members of this group.
            type: array
            items:
              type: string
        required:
          - computeInstanceIds

  ComputeInstanceGroupByQuerySelector:
    description: Specifies the Compute Instance Group environment filtered by DSL expression of the compute instances
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupSelector'
      - discriminator: INSTANCE_QUERY
        properties:
          query:
            description: Query expression confirming to the OCI Search Language syntax to select compute instances for the group.
              The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
            type: string
        required:
          - query

  ComputeInstanceGroupDeployEnvironmentSummary:
    description: Specifies the Compute Instance Group environment.
    allOf:
      - $ref: '#/definitions/DeployEnvironmentSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP
        properties:
          computeInstanceGroupSelectors:
            $ref: '#/definitions/ComputeInstanceGroupSelectorCollection'
        required:
          - computeInstanceGroupSelectors

  CreateComputeInstanceGroupDeployEnvironmentDetails:
    description: Specifies the Compute Instance Group environment.
    allOf:
      - $ref: '#/definitions/CreateDeployEnvironmentDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP
        properties:
          computeInstanceGroupSelectors:
            $ref: '#/definitions/ComputeInstanceGroupSelectorCollection'
        required:
          - computeInstanceGroupSelectors

  UpdateComputeInstanceGroupDeployEnvironmentDetails:
    description: Specifies the Compute Instance Group environment.
    allOf:
      - $ref: '#/definitions/UpdateDeployEnvironmentDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP
        properties:
          computeInstanceGroupSelectors:
            $ref: '#/definitions/ComputeInstanceGroupSelectorCollection'

  FunctionDeployEnvironment:
    description: Specifies the OKE Function environment.
    allOf:
      - $ref: '#/definitions/DeployEnvironment'
      - discriminator: FUNCTION
        properties:
          functionId:
            description: The OCID of the Function.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - functionId

  FunctionDeployEnvironmentSummary:
    description: Specifies the OKE Function environment.
    allOf:
      - $ref: '#/definitions/DeployEnvironmentSummary'
      - discriminator: FUNCTION
        properties:
          functionId:
            description: The OCID of the Function.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - functionId

  CreateFunctionDeployEnvironmentDetails:
    description: Specifies the OKE Function environment.
    allOf:
      - $ref: '#/definitions/CreateDeployEnvironmentDetails'
      - discriminator: FUNCTION
        properties:
          functionId:
            description: The OCID of the Function.
            type: string
            minLength: 1
            maxLength: 255
        required:
          - functionId

  UpdateFunctionDeployEnvironmentDetails:
    description: Specifies the OKE Function environment.
    allOf:
      - $ref: '#/definitions/UpdateDeployEnvironmentDetails'
      - discriminator: FUNCTION
        properties:
          functionId:
            description: The OCID of the Function.
            type: string
            minLength: 1
            maxLength: 255
  # --- Pipeline model definitions
  DeployPipelineParameter:
    type: object
    description: Parameter name for which the values will be supplied at the time of deployment.
    properties:
      name:
        description: |
          Name of the parameter (Case-sensitive).
          Example: 'Pipeline_param' is not same as 'pipeline_Param'
        type: string
        pattern: '^[a-zA-Z][a-zA-Z_0-9]*$'
        minLength: 1
        maxLength: 255
      defaultValue:
        description: Default value of the parameter
        type: string
        minLength: 1
        maxLength: 512
      description:
        description: Description of the parameter
        type: string
        minLength: 1
        maxLength: 400
    required:
      - name

  DeployPipelineParameterCollection:
    type: object
    description: |
      Specifies list of parameters present in DeployPipeline.
      In case of UPDATE operation, replaces existing parameters list. Merging with existing parameters is not supported.
    properties:
      items:
        description:  List of Parameters defined for a DeployPipeline.
        type: array
        maxItems: 100
        items:
          $ref: '#/definitions/DeployPipelineParameter'
    required:
      - items

  DeployPipelineArtifact:
    type: object
    description: Artifact used in pipeline.
    properties:
      deployArtifactId:
        description: Id of artifact
        type: string
      displayName:
        description: display name of artifact
        type: string
    required:
      - deployArtifactId

  DeployPipelineArtifactCollection:
    type: object
    description: List of all artifacts used in pipeline.
    properties:
      items:
        description:  List of all artifacts used in pipeline.
        type: array
        items:
          $ref: '#/definitions/DeployPipelineArtifact'
    required:
      - items

  DeployPipelineEnvironment:
    type: object
    description: Environment used in pipeline.
    properties:
      deployEnvironmentId:
        description: Id of Environment
        type: string
      displayName:
        description: display name of artifact
        type: string
      deployStageReferenceCount:
        description: Amount of stages that use the environment
        type: integer
        format: int32
        minimum: 1
    required:
      - deployEnvironmentId
      - deployStageReferenceCount

  DeployPipelineEnvironmentCollection:
    type: object
    description: List of all Environments used in pipeline.
    properties:
      items:
        description:  List of all Environments used in pipeline.
        type: array
        items:
          $ref: '#/definitions/DeployPipelineEnvironment'
    required:
      - items

  DeployPipeline:
    description: A set of stages whose predecessor relation forms a directed acyclic graph.
    type: object
    x-obmcs-splat:
      resourceKind: devops-deploy-pipeline
      ocidEntityType: devopsdeploypipeline
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetDeployPipeline
      listResourcesOperationId: ListDeployPipelines
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "DevOpsDeployPipeline"
        scope: "customer"
    required:
      - id
      - projectId
      - compartmentId
      - deployPipelineParameters
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the DeployPipeline
        type: string
        maxLength: 400
      displayName:
        description: DeployPipeline identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
        minLength: 1
        maxLength: 255
      deployPipelineArtifacts:
        $ref: "#/definitions/DeployPipelineArtifactCollection"
      deployPipelineEnvironments:
        $ref: "#/definitions/DeployPipelineEnvironmentCollection"
      timeCreated:
        description: The time the the DeployPipeline was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the DeployPipeline was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the DeployPipeline.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - INACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string

      deployPipelineParameters:
        $ref: '#/definitions/DeployPipelineParameterCollection'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeployPipelineSummary:
    description: Summary of the DeployPipeline.
    type: object
    required:
      - id
      - projectId
      - compartmentId
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the DeployPipeline
        type: string
        maxLength: 400
      displayName:
        description: DeployPipeline identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
        minLength: 1
        maxLength: 255
      deployPipelineArtifacts:
        $ref: "#/definitions/DeployPipelineArtifactCollection"
      deployPipelineEnvironments:
        $ref: "#/definitions/DeployPipelineEnvironmentCollection"
      timeCreated:
        description: The time the the DeployPipeline was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the DeployPipeline was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the DeployPipeline.
        type: string
        x-obmcs-enumref: '#/definitions/DeployPipeline/lifecycleState'
      deployPipelineParameters:
        $ref: '#/definitions/DeployPipelineParameterCollection'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  CreateDeployPipelineDetails:
    description: The information about new DeployPipeline to be created.
    type: object
    required:
      - projectId
    properties:
      description:
        description: Optional description about the DeployPipeline
        type: string
        maxLength: 400
      displayName:
        description: DeployPipeline display name
        type: string
        minLength: 1
        maxLength: 255
      projectId:
        description: Project Identifier
        type: string
        minLength: 1
        maxLength: 255
      deployPipelineParameters:
        $ref: '#/definitions/DeployPipelineParameterCollection'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateDeployPipelineDetails:
    description: The information to be updated for the given DeployPipeline.
    type: object
    properties:
      description:
        description: Optional description about the DeployPipeline
        type: string
        maxLength: 400
      displayName:
        description: DeployPipeline display name
        type: string
        minLength: 1
        maxLength: 255
      deployPipelineParameters:
        $ref: '#/definitions/DeployPipelineParameterCollection'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  DeployPipelineCollection:
    type: object
    description: Results of an pipeline search.
    required:
      - items
    properties:
      items:
        type: array
        description: Array of DeployPipelineSummary items.
        items:
          $ref: "#/definitions/DeployPipelineSummary"

  # --- Stage model definitions
  DeployStage:
    discriminator: deployStageType
    description: |
      A single node in a pipeline. It is usually associated with some action on a specific set of OCI infrastructure resources, for example, updating a function/OKE cluster etc.
    type: object
    x-obmcs-splat:
      resourceKind: devops-deploy-stage
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # This value is used in multiple ways by SPLAT: one is authz checks when this type gets passed to identity,
      # the other is OCID generation for SPLAT-managed resources like this one.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: devopsdeploystage
      adLocality: regional
      activeLifecycleStates: ['CREATING', 'ACTIVE']
      deletedLifecycleStates: ['']
      getOperationId: GetDeployStage
      listResourcesOperationId: ListDeployStages
      searchMetadata:
        resourceSchemaVersion: 1
        resourceType: "DevOpsDeployStage"
        scope: "customer"
    required:
      - id
      - deployPipelineId
      - compartmentId
      - projectId
      - deployStageType
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the DeployStage
        type: string
        maxLength: 400
      displayName:
        description: DeployStage identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
      deployPipelineId:
        description: Pipeline Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
        minLength: 1
        maxLength: 255
      deployStageType:
        description: DeployStage sub types
        type: string
        enum:
          - WAIT
          - COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
          - COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
          - COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
          - COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
          - OKE_DEPLOYMENT
          - DEPLOY_FUNCTION
          - RUN_OKE_JOB
          - INVOKE_FUNCTION
          - RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
          - LOAD_BALANCER_TRAFFIC_SHIFT
          - MANUAL_APPROVAL
          - RUN_DEPLOYMENT_PIPELINE
      timeCreated:
        description: The time the the DeployStage was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the DeployStage was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the DeployStage.
        type: string
        enum:
          - CREATING
          - UPDATING
          - ACTIVE
          - DELETING
          - DELETED
          - FAILED
      lifecyleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      deployStagePredecessorCollection:
        $ref: "#/definitions/DeployStagePredecessorCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeployStageSummary:
    discriminator: deployStageType
    description: Summary of the DeployStage.
    type: object
    required:
      - id
      - deployPipelineId
      - compartmentId
      - projectId
      - deployStageType
    properties:
      id:
        description: Unique identifier that is immutable on creation
        type: string
      description:
        description: Optional description about the DeployStage
        type: string
        maxLength: 400
      displayName:
        description: DeployStage identifier which can be renamed and is not necessarily unique.
        type: string
      projectId:
        description: Project Identifier
        type: string
      deployPipelineId:
        description: Pipeline Identifier
        type: string
      compartmentId:
        description: Compartment Identifier
        type: string
        minLength: 1
        maxLength: 255
      deployStageType:
        description: DeployStage sub types.
        type: string
        x-obmcs-enumref: "#/definitions/DeployStage/deployStageType"
      timeCreated:
        description: The time the the DeployStage was created. An RFC3339 formatted datetime string
        type: string
        format: date-time
      timeUpdated:
        description: The time the DeployStage was updated. An RFC3339 formatted datetime string
        type: string
        format: date-time
      lifecycleState:
        description: The current state of the DeployStage.
        type: string
        x-obmcs-enumref: '#/definitions/DeployStage/lifecycleState'
      lifecycleDetails:
        description: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        type: string
      deployStagePredecessorCollection:
        $ref: "#/definitions/DeployStagePredecessorCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      systemTags: *ref-systemTags

  DeployStageCollection:
    type: object
    description: Result of a stage search.
    properties:
      items:
        type: array
        description: DeployStageSummary items found for the search.
        items:
          $ref: "#/definitions/DeployStageSummary"
    required:
      - items

  CreateDeployStageDetails:
    discriminator: deployStageType
    description: The information about new DeployStage.
    type: object
    required:
      - deployStageType
      - deployPipelineId
      - deployStagePredecessorCollection
    properties:
      description:
        description: Optional description about the DeployStage
        type: string
        maxLength: 400
      displayName:
        description: DeployStage identifier which can be renamed and is not necessarily unique.
        type: string
        minLength: 1
        maxLength: 255
      deployStageType:
        description: DeployStage sub types.
        type: string
        x-obmcs-enumref: "#/definitions/DeployStage/deployStageType"
      deployPipelineId:
        description: Pipeline Identifier
        type: string
        minLength: 1
        maxLength: 255
      deployStagePredecessorCollection:
        $ref: "#/definitions/DeployStagePredecessorCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateDeployStageDetails:
    discriminator: deployStageType
    description: The information to be updated.
    type: object
    required:
      - deployStageType
    properties:
      description:
        description: Optional description about the DeployStage
        type: string
        maxLength: 400
      displayName:
        description: DeployStage identifier which can be renamed and is not necessarily unique.
        type: string
        minLength: 1
        maxLength: 255
      deployStageType:
        description: DeployStage sub types.
        type: string
        x-obmcs-enumref: "#/definitions/DeployStage/deployStageType"
      deployStagePredecessorCollection:
        $ref: "#/definitions/DeployStagePredecessorCollection"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  WaitDeployStage:
    description: Specifies the Wait Stage. User can specify a criteria for variable wait times or an absolute duration.
    allOf:
      - $ref: '#/definitions/DeployStage'
      - discriminator: WAIT
        required:
          - waitCriteria
        properties:
          waitCriteria:
            $ref: '#/definitions/WaitCriteria'

  WaitDeployStageSummary:
    description: Specifies the Wait Stage. User can specify a criteria for variable wait times or an absolute duration.
    allOf:
      - $ref: '#/definitions/DeployStageSummary'
      - discriminator: WAIT
        required:
          - waitCriteria
        properties:
          waitCriteria:
            $ref: '#/definitions/WaitCriteriaSummary'

  CreateWaitDeployStageDetails:
    description: Specifies the Wait Stage. User can specify a criteria for variable wait times or an absolute duration.
    allOf:
      - $ref: '#/definitions/CreateDeployStageDetails'
      - discriminator: WAIT
        required:
          - waitCriteria
        properties:
          waitCriteria:
            $ref: '#/definitions/WaitCriteria'

  UpdateWaitDeployStageDetails:
    description: Specifies the Wait Stage. User can specify a criteria for variable wait times or an absolute duration.
    allOf:
      - $ref: '#/definitions/UpdateDeployStageDetails'
      - discriminator: WAIT
        properties:
          waitCriteria:
            $ref: '#/definitions/WaitCriteria'

  WaitCriteria:
    description: Specifies wait criteria for wait stage.
    discriminator: waitType
    type: object
    required:
      - waitType
    properties:
      waitType:
        description: wait criteria sub type
        type: string
        enum:
          - ABSOLUTE_WAIT

  WaitCriteriaSummary:
    description: Specifies wait criteria for wait stage.
    discriminator: waitType
    type: object
    required:
      - waitType
    properties:
      waitType:
        description: wait criteria sub type
        type: string
        enum:
          - ABSOLUTE_WAIT

  AbsoluteWaitCriteria:
    description: Specifies the absolute wait criteria, user can specify fixed length of wait duration.
    allOf:
      - $ref: '#/definitions/WaitCriteria'
      - discriminator: ABSOLUTE_WAIT
        required:
          - waitDuration
        properties:
          waitDuration:
            description: |
              The absolute wait duration.
              Minimum waitDuration should be 5 seconds.
              Maximum waitDuration can be up to 2 days.
            type: string
            format: x-obmcs-duration
            example: PT10M5S

  AbsoluteWaitCriteriaSummary:
    description: Specifies the absolute wait criteria, user can specify fixed length of wait duration.
    allOf:
      - $ref: '#/definitions/WaitCriteriaSummary'
      - discriminator: ABSOLUTE_WAIT
        properties:
          waitDuration:
            description: |
              The absolute wait duration.
              Minimum waitDuration should be 5 seconds.
              Maximum waitDuration can be up to 2 days.
            type: string
            format: x-obmcs-duration
            example: PT10M5S



  ComputeInstanceGroupDeployStage:
    description: Specifies the Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/DeployStage'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        required:
          - computeInstanceGroupDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupDeployEnvironmentId:
            description: A compute instance group environment OCID for rolling deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: Additional file artifact OCIDs.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          rollbackPolicy:
            $ref: "#/definitions/DeployStageRollbackPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  ComputeInstanceGroupDeployStageSummary:
    description: Specifies the Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/DeployStageSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        required:
          - computeInstanceGroupDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupDeployEnvironmentId:
            description: A compute instance group environment OCID for rolling deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: Additional file artifact OCIDs.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          rollbackPolicy:
            $ref: "#/definitions/DeployStageRollbackPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  CreateComputeInstanceGroupDeployStageDetails:
    description: Specifies the Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/CreateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        required:
          - computeInstanceGroupDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupDeployEnvironmentId:
            description: A compute instance group environment OCID for rolling deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: Additional file artifact OCIDs.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          rollbackPolicy:
            $ref: "#/definitions/DeployStageRollbackPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  UpdateComputeInstanceGroupDeployStageDetails:
    description: Specifies the Instance group rolling Deployment Stage.
    allOf:
      - $ref: '#/definitions/UpdateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_ROLLING_DEPLOYMENT
        properties:
          computeInstanceGroupDeployEnvironmentId:
            description: A compute instance group environment OCID for rolling deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: Additional file artifact OCIDs.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          rollbackPolicy:
            $ref: "#/definitions/DeployStageRollbackPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  ComputeInstanceGroupBlueGreenDeployStage:
    description: Specifies the Instance group blue green deployment stage.
    allOf:
      - $ref: '#/definitions/DeployStage'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
        required:
          - blueDeployEnvironmentId
          - greenDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          blueDeployEnvironmentId:
            description: Blue compute instance group environment OCID for deployment.
            type: string
          greenDeployEnvironmentId:
            description: Green compute instance group environment OCID for deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"

  ComputeInstanceGroupBlueGreenDeployStageSummary:
    description: Specifies the Instance group blue green deployment stage.
    allOf:
      - $ref: '#/definitions/DeployStageSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
        required:
          - blueDeployEnvironmentId
          - greenDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          blueDeployEnvironmentId:
            description: Blue compute instance group environment OCID for deployment.
            type: string
          greenDeployEnvironmentId:
            description: Green compute instance group environment OCID for deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"

  CreateComputeInstanceGroupBlueGreenDeployStageDetails:
    description: Specifies the Instance group blue green deployment stage.
    allOf:
      - $ref: '#/definitions/CreateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
        required:
          - blueDeployEnvironmentId
          - greenDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          blueDeployEnvironmentId:
            description: Blue compute instance group environment OCID for deployment.
            type: string
          greenDeployEnvironmentId:
            description: Green compute instance group environment OCID for deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"

  UpdateComputeInstanceGroupBlueGreenDeployStageDetails:
    description: Specifies the Instance group blue green deployment stage.
    allOf:
      - $ref: '#/definitions/UpdateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_DEPLOYMENT
        properties:
          blueDeployEnvironmentId:
            description: Blue compute instance group environment OCID for deployment.
            type: string
          greenDeployEnvironmentId:
            description: Green compute instance group environment OCID for deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"
          failurePolicy:
            $ref: "#/definitions/ComputeInstanceGroupFailurePolicy"

  LoadBalancerConfig:
    description: Specifies config for load balancer traffic shift stages.
    required:
      - loadBalancerId
      - listenerName
    properties:
      loadBalancerId:
        description: The OCID of Load Balancer
        type: string
      listenerName:
        description: Name of the Load Balancer Listener
        type: string
      backendPort:
        description: Listen port for the backend server
        type: integer
        format: int32
        minimum: 1
        maximum: 65535
        default: 80

  ComputeInstanceGroupBlueGreenTrafficShiftDeployStage:
    description: Specifies the Instance group blue green deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/DeployStage'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
        required:
          - computeInstanceGroupBlueGreenDeploymentDeployStageId
          - loadBalancerConfig
          - rolloutPolicy
        properties:
          computeInstanceGroupBlueGreenDeploymentDeployStageId:
            description: Id of the upstream ComputeInstanceBlueGreenGroupDeploymentStage in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  ComputeInstanceGroupBlueGreenTrafficShiftDeployStageSummary:
    description: Specifies the Instance group blue green deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/DeployStageSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
        required:
          - computeInstanceGroupBlueGreenDeploymentDeployStageId
          - loadBalancerConfig
          - rolloutPolicy
        properties:
          computeInstanceGroupBlueGreenDeploymentDeployStageId:
            description: Id of the upstream ComputeInstanceBlueGreenGroupDeploymentStage in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  CreateComputeInstanceGroupBlueGreenTrafficShiftDeployStageDetails:
    description: Specifies the Instance group blue green deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/CreateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
        required:
          - computeInstanceGroupBlueGreenDeploymentDeployStageId
          - loadBalancerConfig
          - rolloutPolicy
        properties:
          computeInstanceGroupBlueGreenDeploymentDeployStageId:
            description: Id of the upstream ComputeInstanceBlueGreenGroupDeploymentStage in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  UpdateComputeInstanceGroupBlueGreenTrafficShiftDeployStageDetails:
    description: Specifies the Instance group blue green deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/UpdateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_BLUE_GREEN_TRAFFIC_SHIFT
        properties:
          computeInstanceGroupBlueGreenDeploymentDeployStageId:
            description: Id of the upstream ComputeInstanceBlueGreenGroupDeploymentStage in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  ComputeInstanceGroupCanaryDeploymentDeployStage:
    description: Specifies the instance group canary deployment stage.
    allOf:
      - $ref: '#/definitions/DeployStage'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
        required:
          - computeInstanceGroupDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupDeployEnvironmentId:
            description: A compute instance group environment OCID for canary deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"

  ComputeInstanceGroupCanaryDeploymentDeployStageSummary:
    description: Specifies the instance group canary deployment stage.
    allOf:
      - $ref: '#/definitions/DeployStageSummary'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
        required:
          - computeInstanceGroupDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupDeployEnvironmentId:
            description: A compute instance group environment OCID for canary deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"


  CreateComputeInstanceGroupCanaryDeploymentDeployStageDetails:
    description: Specifies the instance group canary deployment stage.
    allOf:
      - $ref: '#/definitions/CreateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
        required:
          - computeInstanceGroupDeployEnvironmentId
          - deploymentSpecDeployArtifactId
          - deployArtifactIds
          - rolloutPolicy
        properties:
          computeInstanceGroupDeployEnvironmentId:
            description: A compute instance group environment OCID for canary deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"

  UpdateComputeInstanceGroupCanaryDeploymentDeployStageDetails:
    description: Specifies the instance group canary deployment stage.
    allOf:
      - $ref: '#/definitions/UpdateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_DEPLOYMENT
        properties:
          computeInstanceGroupDeployEnvironmentId:
            description: A compute instance group environment OCID for canary deployment.
            type: string
          deploymentSpecDeployArtifactId:
            description: The OCID of the artifact that contains the deployment specification.
            type: string
          deployArtifactIds:
            description: The list of file artifact OCIDs to deploy.
            type: array
            items:
              type: string
          rolloutPolicy:
            $ref: "#/definitions/ComputeInstanceGroupRolloutPolicy"

  ComputeInstanceGroupCanaryTrafficShiftDeployStage:
    description: Specifies the instance group canary deployment load balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
        required:
          - computeInstanceGroupCanaryDeploymentDeployStageId
          - loadBalancerConfig
          - rolloutPolicy
        properties:
          computeInstanceGroupCanaryDeploymentDeployStageId:
            description: The OCID of an upstream ComputeInstanceGroupCanaryDeploymentDeployStage Id in this pipeline.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  ComputeInstanceGroupCanaryTrafficShiftDeployStageSummary:
    description: Specifies the instance group canary deployment load balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - computeInstanceGroupCanaryDeploymentDeployStageId
          - rolloutPolicy
        properties:
          computeInstanceGroupCanaryDeploymentDeployStageId:
            description: A compute instance group canary stage OCID for load balancer.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  CreateComputeInstanceGroupCanaryTrafficShiftDeployStageDetails:
    description: Specifies the instance group canary deployment load balancer traffic shift stage.
    allOf:
      - $ref: '#/definitions/CreateDeployStageDetails'
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - computeInstanceGroupCanaryDeploymentDeployStageId
          - rolloutPolicy
        properties:
          computeInstanceGroupCanaryDeploymentDeployStageId:
            description: A compute instance group canary stage OCID for load balancer.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  UpdateComputeInstanceGroupCanaryTrafficShiftDeployStageDetails:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_TRAFFIC_SHIFT
        properties:
          computeInstanceGroupCanaryDeploymentDeployStageId:
            description: A compute instance group canary stage OCID for load balancer.
            type: string
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"

  ApprovalPolicy:
    discriminator: approvalPolicyType
    description: Specifies the approval policy
    required:
      - approvalPolicyType
    properties:
      approvalPolicyType:
        description: Approval policy sub types.
        type: string
        enum:
          - COUNT_BASED_APPROVAL

  CountBasedApprovalPolicy:
    description: Count based stage approval policy
    allOf:
      - $ref: "#/definitions/ApprovalPolicy"
      - discriminator: COUNT_BASED_APPROVAL
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5
            default: 1
        required:
          - numberOfApprovalsRequired

  ComputeInstanceGroupCanaryApprovalDeployStage:
    description: Specifies the canary approval stage.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
        required:
          - approvalPolicy
          - computeInstanceGroupCanaryTrafficShiftDeployStageId
        properties:
          computeInstanceGroupCanaryTrafficShiftDeployStageId:
            description: A compute instance group canary traffic shift stage OCID for load balancer.
            type: string
          approvalPolicy:
            $ref: "#/definitions/ApprovalPolicy"

  ComputeInstanceGroupCanaryApprovalDeployStageSummary:
    description: Specifies the canary approval stage.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
        required:
          - approvalPolicy
          - computeInstanceGroupCanaryTrafficShiftDeployStageId
        properties:
          computeInstanceGroupCanaryTrafficShiftDeployStageId:
            description: A compute instance group canary traffic shift stage OCID for load balancer.
            type: string
          approvalPolicy:
            $ref: "#/definitions/ApprovalPolicy"

  CreateComputeInstanceGroupCanaryApprovalDeployStageDetails:
    description: Specifies the canary approval stage.
    allOf:
      - $ref: "#/definitions/CreateDeployStageDetails"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
        required:
          - approvalPolicy
          - computeInstanceGroupCanaryTrafficShiftDeployStageId
        properties:
          computeInstanceGroupCanaryTrafficShiftDeployStageId:
            description: A compute instance group canary traffic shift stage OCID for load balancer.
            type: string
          approvalPolicy:
            $ref: "#/definitions/ApprovalPolicy"

  UpdateComputeInstanceGroupCanaryApprovalDeployStageDetails:
    description: Specifies the canary approval stage.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: COMPUTE_INSTANCE_GROUP_CANARY_APPROVAL
        properties:
          computeInstanceGroupCanaryTrafficShiftDeployStageId:
            description: A compute instance group canary traffic shift stage OCID for load balancer.
            type: string
          approvalPolicy:
            $ref: "#/definitions/ApprovalPolicy"

  OkeDeployStage:
    description: Specifies the OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/DeployStage'
      - discriminator: OKE_DEPLOYMENT
        required:
          - okeClusterDeployEnvironmentId
          - kubernetesManifestDeployArtifactIds
          - namespace
        properties:
          okeClusterDeployEnvironmentId:
            description: OkeCluster environment OCID for deployment.
            type: string
          kubernetesManifestDeployArtifactIds:
            description: List of KubernetesManifest artifact OCIDs, the manifests should not include any Job resource.
            type: array
            items:
              type: string
          namespace:
            description: Default Namespace to be used for Kubernetes Deployment when not specified in the manifest
            type: string
            default: "default"
          rollbackPolicy:
            $ref: "#/definitions/DeployStageRollbackPolicy"

  OkeDeployStageSummary:
    description: Specifies the OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/DeployStageSummary'
      - discriminator: OKE_DEPLOYMENT
        required:
          - okeClusterDeployEnvironmentId
          - kubernetesManifestDeployArtifactIds
          - namespace
        properties:
          okeClusterDeployEnvironmentId:
            description: OkeCluster environment OCID for deployment.
            type: string
          kubernetesManifestDeployArtifactIds:
            description: List of KubernetesManifest artifact OCIDs, the manifests should not include any Job resource.
            type: array
            items:
              type: string
          namespace:
            description: Default Namespace to be used for Kubernetes Deployment when not specified in the manifest
            type: string
            default: "default"
          rollbackPolicy:
            $ref: "#/definitions/DeployStageRollbackPolicy"

  CreateOkeDeployStageDetails:
    description: Specifies the OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/CreateDeployStageDetails'
      - discriminator: OKE_DEPLOYMENT
        required:
          - okeClusterDeployEnvironmentId
          - kubernetesManifestDeployArtifactIds
        properties:
          okeClusterDeployEnvironmentId:
            description: OkeCluster environment OCID for deployment.
            type: string
          kubernetesManifestDeployArtifactIds:
            description: List of KubernetesManifest artifact OCIDs, the manifests should not include any Job resource.
            type: array
            items:
              type: string
          namespace:
            description: Default Namespace to be used for Kubernetes Deployment when not specified in the manifest
            type: string
            default: "default"
          rollbackPolicy:
            $ref: "#/definitions/DeployStageRollbackPolicy"

  UpdateOkeDeployStageDetails:
    description: Specifies the OKEDeployment stage.
    allOf:
      - $ref: '#/definitions/UpdateDeployStageDetails'
      - discriminator: OKE_DEPLOYMENT
        properties:
          okeClusterDeployEnvironmentId:
            description: OkeCluster environment OCID for deployment.
            type: string
          kubernetesManifestDeployArtifactIds:
            description: List of KubernetesManifest artifact OCIDs, the manifests should not include any Job resource.
            type: array
            items:
              type: string
          namespace:
            description: Default Namespace to be used for Kubernetes Deployment when not specified in the manifest
            type: string
            default: "default"
          rollbackPolicy:
            $ref: "#/definitions/DeployStageRollbackPolicy"

  FunctionDeployStage:
    description: Specifies the Function Stage.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: DEPLOY_FUNCTION
        required:
          - functionDeployEnvironmentId
          - dockerImageDeployArtifactId
        properties:
          functionDeployEnvironmentId:
            description: Function environment OCID.
            type: string
          dockerImageDeployArtifactId:
            description: A docker image artifact OCID.
            type: string
          config:
            description: User provided key/value pair configuration which assigned through constants or parameter.
            type: object
            additionalProperties:
              type: string
          maxMemoryInMBs:
            description: Maximum usable memory for the function (MiB)
            type: integer
            format: int64
          functionTimeoutInSeconds:
            description: Timeout for executions of the function. Value in seconds.
            type: integer
            format: int32

  FunctionDeployStageSummary:
    description: Specifies the Function Stage.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: DEPLOY_FUNCTION
        required:
          - functionDeployEnvironmentId
          - dockerImageDeployArtifactId
        properties:
          functionDeployEnvironmentId:
            description: Function environment OCID.
            type: string
          dockerImageDeployArtifactId:
            description: A docker image artifact OCID.
            type: string
          config:
            description: User provided key/value pair configuration which assigned through constants or parameter.
            type: object
            additionalProperties:
              type: string
          maxMemoryInMBs:
            description: Maximum usable memory for the function (MiB)
            type: integer
            format: int64
          functionTimeoutInSeconds:
            description: Timeout for executions of the function. Value in seconds.
            type: integer
            format: int32

  CreateFunctionDeployStageDetails:
    description: Specifies the Function Stage.
    allOf:
      - $ref: "#/definitions/CreateDeployStageDetails"
      - discriminator: DEPLOY_FUNCTION
        required:
          - functionDeployEnvironmentId
          - dockerImageDeployArtifactId
        properties:
          functionDeployEnvironmentId:
            description: Function environment OCID.
            type: string
          dockerImageDeployArtifactId:
            description: A docker image artifact OCID.
            type: string
          config:
            description: User provided key/value pair configuration which assigned through constants or parameter.
            type: object
            additionalProperties:
              type: string
          maxMemoryInMBs:
            description: Maximum usable memory for the function (MiB)
            type: integer
            format: int64
          functionTimeoutInSeconds:
            description: Timeout for executions of the function. Value in seconds.
            type: integer
            format: int32

  UpdateFunctionDeployStageDetails:
    description: Specifies the Function Stage.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: DEPLOY_FUNCTION
        properties:
          functionDeployEnvironmentId:
            description: Function environment OCID.
            type: string
          dockerImageDeployArtifactId:
            description: A docker image artifact OCID.
            type: string
          config:
            description: User provided key/value pair configuration which assigned through constants or parameter.
            type: object
            additionalProperties:
              type: string
          maxMemoryInMBs:
            description: Maximum usable memory for the function (MiB)
            type: integer
            format: int64
          functionTimeoutInSeconds:
            description: Timeout for executions of the function. Value in seconds.
            type: integer
            format: int32

  RunOkeJobDeployStage:
    description: Specifies Run job on OKE stage.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: RUN_OKE_JOB
        required:
          - okeClusterDeployEnvironmentId
          - kubernetesManifestDeployArtifactId
          - executionMode
          - namespace
        properties:
          okeClusterDeployEnvironmentId:
            description: OKE Cluster environment OCID.
            type: string
          kubernetesManifestDeployArtifactId:
            description: KubernetesManifest artifact OCID.
            type: string
          executionMode:
            description: Specifies synchronous or asynchronous mode of execution for this stage.
            type: string
            enum:
              - SYNC
              - ASYNC
            x-example: |
              SYNC - Stage executes synchronously.
              ASYNC - Asynchronous execution mode.
          namespace:
            description: Default Namespace to be used for Kubernetes Job when not specified in the manifest
            type: string
            default: "default"

  RunOkeJobDeployStageSummary:
    description: Specifies Run job on OKE stage.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: RUN_OKE_JOB
        required:
          - okeClusterDeployEnvironmentId
          - kubernetesManifestDeployArtifactId
          - executionMode
          - namespace
        properties:
          okeClusterDeployEnvironmentId:
            description: OKE Cluster environment OCID.
            type: string
          kubernetesManifestDeployArtifactId:
            description: KubernetesManifest artifact OCID.
            type: string
          executionMode:
            description: Specifies synchronous or asynchronous mode of execution for this stage.
            type: string
            x-obmcs-enumref: '#/definitions/RunOkeJobDeployStage/executionMode'
            x-example: |
              SYNC - Stage executes synchronously.
              ASYNC - Asynchronous execution mode.
          namespace:
            description: Default Namespace to be used for Kubernetes Job when not specified in the manifest
            type: string
            default: "default"

  CreateRunOkeJobDeployStageDetails:
    description: Specifies Run job on OKE stage.
    allOf:
      - $ref: "#/definitions/CreateDeployStageDetails"
      - discriminator: RUN_OKE_JOB
        required:
          - okeClusterDeployEnvironmentId
          - kubernetesManifestDeployArtifactId
          - executionMode
        properties:
          okeClusterDeployEnvironmentId:
            description: OKE Cluster environment OCID.
            type: string
          kubernetesManifestDeployArtifactId:
            description: KubernetesManifest artifact OCID.
            type: string
          executionMode:
            description: Specifies synchronous or asynchronous mode of execution for this stage.
            type: string
            x-obmcs-enumref: '#/definitions/RunOkeJobDeployStage/executionMode'
            x-example: |
              SYNC - Stage executes synchronously.
              ASYNC - Asynchronous execution mode.
          namespace:
            description: Default Namespace to be used for Kubernetes Job when not specified in the manifest
            type: string
            default: "default"

  UpdateRunOkeJobDeployStageDetails:
    description: Specifies Run job on OKE stage.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: RUN_OKE_JOB
        properties:
          okeClusterDeployEnvironmentId:
            description: OKE Cluster environment OCID.
            type: string
          kubernetesManifestDeployArtifactId:
            description: KubernetesManifest artifact OCID.
            type: string
          executionMode:
            description: Specifies synchronous or asynchronous mode of execution for this stage.
            type: string
            x-obmcs-enumref: '#/definitions/RunOkeJobDeployStage/executionMode'
            x-example: |
              SYNC - Stage executes synchronously.
              ASYNC - Asynchronous execution mode.
          namespace:
            description: Default Namespace to be used for Kubernetes Job when not specified in the manifest
            type: string
            default: "default"

  InvokeFunctionDeployStage:
    description: Specifies Invoke Function stage.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: INVOKE_FUNCTION
        required:
          - functionDeployEnvironmentId
          - isAsync
          - isValidationEnabled
        properties:
          functionDeployEnvironmentId:
            description: Function environment OCID.
            type: string
          deployArtifactId:
            description: Optional binary artifat OCID user may provide to this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether this stage executes asynchronously.
            type: boolean
          isValidationEnabled:
            description: A boolean flag specifies whether the invoked function should be validated.
            type: boolean

  InvokeFunctionDeployStageSummary:
    description: Specifies Invoke Function stage.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: INVOKE_FUNCTION
        required:
          - functionDeployEnvironmentId
          - isAsync
          - isValidationEnabled
        properties:
          functionDeployEnvironmentId:
            description: Function environment OCID.
            type: string
          deployArtifactId:
            description: Optional binary artifat OCID user may provide to this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether this stage executes asynchronously.
            type: boolean
          isValidationEnabled:
            description: A boolean flag specifies whether the invoked function should be validated.
            type: boolean

  CreateInvokeFunctionDeployStageDetails:
    description: Specifies Invoke Function stage.
    allOf:
      - $ref: "#/definitions/CreateDeployStageDetails"
      - discriminator: INVOKE_FUNCTION
        required:
          - functionDeployEnvironmentId
          - isAsync
          - isValidationEnabled
        properties:
          functionDeployEnvironmentId:
            description: Function environment OCID.
            type: string
          deployArtifactId:
            description: Optional binary artifat OCID user may provide to this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether this stage executes asynchronously.
            type: boolean
          isValidationEnabled:
            description: A boolean flag specifies whether the invoked function should be validated.
            type: boolean

  UpdateInvokeFunctionDeployStageDetails:
    description: Specifies Invoke Function stage.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: INVOKE_FUNCTION
        properties:
          functionDeployEnvironmentId:
            description: Function environment OCID.
            type: string
          deployArtifactId:
            description: Optional binary artifat OCID user may provide to this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether this stage executes asynchronously.
            type: boolean
          isValidationEnabled:
            description: A boolean flag specifies whether the invoked function should be validated.
            type: boolean


  RunValidationTestOnComputeInstanceDeployStage:
    description: Specifies run Validation test on an compute instance stage.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
        required:
          - computeInstanceId
          - deployArtifactIds
        properties:
          computeInstanceId:
            description: Instance OCID on which this stage runs validation.
            type: string
          deployArtifactIds:
            description: File artifact OCIDs, there should be atleast one artifact containing deployment specifications.
            type: array
            items:
              type: string

  RunValidationTestOnComputeInstanceDeployStageSummary:
    description: Specifies run Validation test on an compute instance stage.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
        required:
          - computeInstanceId
          - deployArtifactIds
        properties:
          computeInstanceId:
            description: Instance OCID on which this stage runs validation.
            type: string
          deployArtifactIds:
            description: File artifact OCIDs, there should be atleast one artifact containing deployment specifications.
            type: array
            items:
              type: string

  CreateRunValidationTestOnComputeInstanceDeployStageDetails:
    description: Specifies run Validation test on an compute instance stage.
    allOf:
      - $ref: "#/definitions/CreateDeployStageDetails"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
        required:
          - computeInstanceId
          - deployArtifactIds
        properties:
          computeInstanceId:
            description: Instance OCID on which this stage runs validation.
            type: string
          deployArtifactIds:
            description: File artifact OCIDs, there should be atleast one artifact containing deployment specifications.
            type: array
            items:
              type: string

  UpdateRunValidationTestOnComputeInstanceDeployStageDetails:
    description: Specifies run Validation test on an compute instance stage.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: RUN_VALIDATION_TEST_ON_COMPUTE_INSTANCE
        properties:
          computeInstanceId:
            description: Instance OCID on which this stage runs validation.
            type: string
          deployArtifactIds:
            description: File artifact OCIDs, there should be atleast one artifact containing deployment specifications.
            type: array
            items:
              type: string

  BackendSetIpCollection:
    description: Collection of Backend environment IP address.
    type: object
    properties:
      items:
        type: array
        description: |
          The IP address of the backend server.
          A server could be a Compute instance or a Load Balancer.
        items:
          type: string
          example: 10.0.0.3

  LoadBalancerTrafficShiftDeployStage:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - blueBackendIps
          - greenBackendIps
          - trafficShiftTarget
          - rolloutPolicy
        properties:
          blueBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          greenBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          trafficShiftTarget:
            description: Specifies the target or destination Backend set.
            type: string
            enum:
              - BLUE
              - GREEN
            x-example: |
              BLUE - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs, as per rolloutPolicy.
              GREEN - Traffic from the existing backends of managed Load Balance Listener to
              green Backend IPs as per rolloutPolicy.
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  LoadBalancerTrafficShiftDeployStageSummary:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - blueBackendIps
          - greenBackendIps
          - trafficShiftTarget
          - rolloutPolicy
        properties:
          blueBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          greenBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          trafficShiftTarget:
            description: Specifies the target or destination Backend set.
            type: string
            x-obmcs-enumref: '#/definitions/LoadBalancerTrafficShiftDeployStage/trafficShiftTarget'
            x-example: |
              BLUE - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs, as per rolloutPolicy.
              GREEN - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs as per rolloutPolicy.
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  CreateLoadBalancerTrafficShiftDeployStageDetails:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/CreateDeployStageDetails"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT
        required:
          - loadBalancerConfig
          - blueBackendIps
          - greenBackendIps
          - trafficShiftTarget
          - rolloutPolicy
        properties:
          blueBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          greenBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          trafficShiftTarget:
            description: Specifies the target or destination Backend set.
            type: string
            x-obmcs-enumref: '#/definitions/LoadBalancerTrafficShiftDeployStage/trafficShiftTarget'
            x-example: |
              BLUE - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs, as per rolloutPolicy.
              GREEN - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs ser as per rolloutPolicy.
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  UpdateLoadBalancerTrafficShiftDeployStageDetails:
    description: Specifies Load Balancer traffic shift stage.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: LOAD_BALANCER_TRAFFIC_SHIFT
        properties:
          blueBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          greenBackendIps:
            $ref: "#/definitions/BackendSetIpCollection"
          trafficShiftTarget:
            description: Specifies the target or destination Backend set.
            type: string
            x-obmcs-enumref: '#/definitions/LoadBalancerTrafficShiftDeployStage/trafficShiftTarget'
            x-example: |
              BLUE - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs, as per rolloutPolicy.
              GREEN - Traffic from the existing backends of managed Load Balance Listener to
              blue Backend IPs ser as per rolloutPolicy.
          rolloutPolicy:
            $ref: "#/definitions/LoadBalancerTrafficShiftRolloutPolicy"
          loadBalancerConfig:
            $ref: "#/definitions/LoadBalancerConfig"

  ManualApprovalDeployStage:
    description: Specifies the manual approval stage.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: MANUAL_APPROVAL
        required:
          - numberOfApprovalsRequired
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5
            default: 1

  ManualApprovalDeployStageSummary:
    description: Specifies the manual approval stage.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: MANUAL_APPROVAL
        required:
          - numberOfApprovalsRequired
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5
            default: 1

  CreateManualApprovalDeployStageDetails:
    description: Specifies the manual approval stage.
    allOf:
      - $ref: "#/definitions/CreateDeployStageDetails"
      - discriminator: MANUAL_APPROVAL
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5
            default: 1

  UpdateManualApprovalDeployStageDetails:
    description: Specifies the manual approval stage.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: MANUAL_APPROVAL
        properties:
          numberOfApprovalsRequired:
            description: A minimum number of approvals required for stage to proceed.
            type: integer
            format: int32
            minimum: 1
            maximum: 5

  RunPipelineDeployStage:
    description: Specifies Run Deployment Pipleline stage which runs another pipeline of the project.
    allOf:
      - $ref: "#/definitions/DeployStage"
      - discriminator: RUN_DEPLOYMENT_PIPELINE
        required:
          - targetDeployPipelineId
          - isAsync
          - conflictPolicy
        properties:
          targetDeployPipelineId:
            description: A target Pipeline OCID that will be run in this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether the target deployment is run synchronously or asynchronously.
            type: boolean
          conflictPolicy:
            $ref: "#/definitions/RunPipelineConcurrencyConflictPolicy"

  RunPipelineDeployStageSummary:
    description: Specifies Run Deployment Pipleline stage which runs another pipeline of the project.
    allOf:
      - $ref: "#/definitions/DeployStageSummary"
      - discriminator: RUN_DEPLOYMENT_PIPELINE
        required:
          - targetDeployPipelineId
          - isAsync
          - conflictPolicy
        properties:
          targetDeployPipelineId:
            description: A target Pipeline OCID that will be run in this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether the target deployment is run synchronously or asynchronously.
            type: boolean
          conflictPolicy:
            $ref: "#/definitions/RunPipelineConcurrencyConflictPolicy"

  CreateRunPipelineDeployStageDetails:
    description: Specifies Run Deployment Pipleline stage which runs another pipeline of the project.
    allOf:
      - $ref: "#/definitions/CreateDeployStageDetails"
      - discriminator: RUN_DEPLOYMENT_PIPELINE
        required:
          - targetDeployPipelineId
          - isAsync
          - conflictPolicy
        properties:
          targetDeployPipelineId:
            description: A target Pipeline OCID that will be run in this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether the target deployment is run synchronously or asynchronously.
            type: boolean
          conflictPolicy:
            $ref: "#/definitions/RunPipelineConcurrencyConflictPolicy"

  UpdateRunPipelineDeployStageDetails:
    description: Specifies Run Deployment Pipleline stage which runs another pipeline of the project.
    allOf:
      - $ref: "#/definitions/UpdateDeployStageDetails"
      - discriminator: RUN_DEPLOYMENT_PIPELINE
        properties:
          targetDeployPipelineId:
            description: A target Pipeline OCID that will be run in this stage.
            type: string
          isAsync:
            description: A boolean flag specifies whether the target deployment is run synchronously or asynchronously.
            type: boolean
          conflictPolicy:
            $ref: "#/definitions/RunPipelineConcurrencyConflictPolicy"

  RunPipelineConcurrencyConflictPolicy:
    type: object
    description: This describes the policy in case there is a deployment already running on the target pipeline.
    properties:
      concurrencyConflictPolicyType:
        description: The types of policies in case of a conflict
        type: string
        enum:
          - WAIT_FOR_COMPLETION
          - FAIL_IMMEDIATELY
    required:
      - concurrencyConflictPolicyType

  LoadBalancerTrafficShiftRolloutPolicy:
    description: Description of rollout policy for Load Balancer Traffic Shift stage.
    type: object
    required:
      - batchCount
    properties:
      batchCount:
        description: Specifies number of batches for this stage.
        type: integer
        format: int32
      batchDelayInSeconds:
        description: Specifies delay in seconds between batches. The default delay is 1 minute.
        type: integer
        format: int32
        default: 60
        minimum: 0
        maximum: 3600
      rampLimitPercent:
        description: Indicates the stoping criteria.
        type: number
        format: float

  ComputeInstanceGroupRolloutPolicy:
    description: Specifies rollout policy for Compute Instance group stages.
    type: object
    required:
      - policyType
    discriminator: policyType
    properties:
      policyType:
        description: The type of policy used for rolling out a deployment stage
        type: string
        enum:
          - COMPUTE_INSTANCE_GROUP_LINEAR_ROLLOUT_POLICY_BY_COUNT
          - COMPUTE_INSTANCE_GROUP_LINEAR_ROLLOUT_POLICY_BY_PERCENTAGE
      batchDelayInSeconds:
        description: The number of seconds in delay between batch rollout. The default delay is 1 minute.
        type: integer
        format: int32
        default: 60
        minimum: 0
        maximum: 3600

  ComputeInstanceGroupLinearRolloutPolicyByCount:
    description: Specifies a linear rollout strategy for Compute Instance group rolling deployment stage.
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupRolloutPolicy'
      - discriminator: COMPUTE_INSTANCE_GROUP_LINEAR_ROLLOUT_POLICY_BY_COUNT
        required:
          - batchCount
        properties:
          batchCount:
            description: The number that will be used to determine how many instances will be deployed to concurrently.
            type: integer
            minimum: 1

  ComputeInstanceGroupLinearRolloutPolicyByPercentage:
    description: Specifies a linear rollout strategy for Compute Instance group rolling deployment stage.
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupRolloutPolicy'
      - discriminator: COMPUTE_INSTANCE_GROUP_LINEAR_ROLLOUT_POLICY_BY_PERCENTAGE
        required:
          - batchPercentage
        properties:
          batchPercentage:
            description: The percentage that will be used to determine how many instances will be deployed to concurrently.
            type: integer
            minimum: 1
            default: 1

  DeployStageRollbackPolicy:
    description: Specifies the rollback policy for that is initiated on the failure of certain Stage types.
    discriminator: policyType
    type: object
    properties:
      policyType:
        description: Specifies sub-type of the DeployStageRollbackPolicy.
        type: string
        enum:
          - AUTOMATED_STAGE_ROLLBACK_POLICY
    required:
      - policyType

  AutomatedDeployStageRollbackPolicy:
    description: Specifies the automated rollback policy for a Stage on failure.
    allOf:
      - $ref: '#/definitions/DeployStageRollbackPolicy'
      - discriminator: AUTOMATED_STAGE_ROLLBACK_POLICY

  ComputeInstanceGroupFailurePolicy:
    description: Specifies a Failure Policy for Compute Instance group rolling deployment stage.
    type: object
    discriminator: policyType
    required:
      - policyType
    properties:
      policyType:
        description: Whether the failure instances size is specified by absolute number or by percentage.
        type: string
        enum:
          - COMPUTE_INSTANCE_GROUP_FAILURE_POLICY_BY_COUNT
          - COMPUTE_INSTANCE_GROUP_FAILURE_POLICY_BY_PERCENTAGE

  ComputeInstanceGroupFailurePolicyByCount:
    description: Specifies a Failure Policy By Count for Compute Instance group rolling deployment stage.
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupFailurePolicy'
      - discriminator: COMPUTE_INSTANCE_GROUP_FAILURE_POLICY_BY_COUNT
        required:
          - failureCount
        properties:
          failureCount:
            description: The threshold count of failed instances in the group which when reached or exceeded sets the stage as FAILED.
            type: integer
            minimum: 1

  ComputeInstanceGroupFailurePolicyByPercentage:
    description: Specifies a Failure Policy By Percentage for Compute Instance group rolling deployment stage.
    allOf:
      - $ref: '#/definitions/ComputeInstanceGroupFailurePolicy'
      - discriminator: COMPUTE_INSTANCE_GROUP_FAILURE_POLICY_BY_PERCENTAGE
        required:
          - failurePercentage
        properties:
          failurePercentage:
            description: The failure percentage threshold which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
            type: integer
            minimum: 1
            maximum: 100
# WorkRequst model definitions

  ActionType:
    type: string
    description: Possible types of actions.
    enum: &ACTIONTYPE
      - CREATED
      - UPDATED
      - DELETED
      - IN_PROGRESS
      - RELATED

  OperationStatus:
    type: string
    description: Possible operation status.
    enum: &OPERATIONSTATUS
      - ACCEPTED
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
      - CANCELING
      - CANCELED

  OperationType:
    type: string
    description: Possible operation types.
    enum: &OPERATIONTYPE
      - CREATE_PROJECT
      - UPDATE_PROJECT
      - DELETE_PROJECT
      - MOVE_PROJECT
      - CREATE_DEPLOY_PIPELINE
      - UPDATE_DEPLOY_PIPELINE
      - DELETE_DEPLOY_PIPELINE
      - CREATE_DEPLOY_STAGE
      - UPDATE_DEPLOY_STAGE
      - DELETE_DEPLOY_STAGE
      - CREATE_DEPLOY_ARTIFACT
      - UPDATE_DEPLOY_ARTIFACT
      - DELETE_DEPLOY_ARTIFACT
      - CREATE_DEPLOY_ENVIRONMENT
      - UPDATE_DEPLOY_ENVIRONMENT
      - DELETE_DEPLOY_ENVIRONMENT
      - CREATE_DEPLOYMENT
      - UPDATE_DEPLOYMENT
      - DELETE_DEPLOYMENT

  WorkRequest:
    description: A description of workrequest status
    x-obmcs-splat:
      resourceKind: devops-work-request
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # Please, pick up value that corresponds to your service after cloning DeploymentService reference service.
      # This value is used by SPLAT to run authz checks.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      ocidEntityType: devopsworkrequest
      adLocality: regional
    properties:
      operationType:
        type: string
        x-obmcs-top-level-enum: '#/definitions/OperationType'
        enum: *OPERATIONTYPE
        description: Type of the work request
      status:
        type: string
        x-obmcs-top-level-enum: '#/definitions/OperationStatus'
        enum: *OPERATIONSTATUS
        description: Status of current work request.
      id:
        type: string
        description: The id of the work request.
      compartmentId:
        type: string
        description: |
          The ocid of the compartment that contains the work request. Work requests should be scoped to
          the same compartment as the resource the work request affects. If the work request affects multiple resources,
          and those resources are not in the same compartment, it is up to the service team to pick the primary
          resource whose compartment should be used
      resources:
        type: array
        items:
          $ref: '#/definitions/WorkRequestResource'
        description: The resources affected by this work request.
      percentComplete:
        type: number
        format: float
        description: Percentage of the request completed.
      timeAccepted:
        type: string
        format: date-time
        description: |
          The date and time the request was created, as described in
          [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
      timeStarted:
        type: string
        format: date-time
        description: |
          The date and time the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339),
          section 14.29.
      timeFinished:
        type: string
        format: date-time
        description: |
          The date and time the object was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
    required:
      - operationType
      - status
      - id
      - compartmentId
      - resources
      - percentComplete
      - timeAccepted

  WorkRequestSummary:
    description: A description of workrequest status
    x-obmcs-splat:
      resourceKind: devops-work-request
      # NOTE: OCID entity type shall refer to OCI defined entity type referenced in com.oracle.pic.commons.util.EntityType
      # Please, pick up value that corresponds to your service after cloning DeploymentService reference service.
      # This value is used by SPLAT to run authz checks.
      # See also https://bitbucket.oci.oraclecorp.com/projects/COMMONS/repos/core/browse/core-resources/src/main/java/com/oracle/pic/commons/util/EntityType.java
      adLocality: regional
    properties:
      operationType:
        type: string
        x-obmcs-top-level-enum: '#/definitions/OperationType'
        enum: *OPERATIONTYPE
        description: Type of the work request
      status:
        type: string
        x-obmcs-top-level-enum: '#/definitions/OperationStatus'
        enum: *OPERATIONSTATUS
        description: Status of current work request.
      id:
        type: string
        description: The id of the work request.
      compartmentId:
        type: string
        description: |
          The ocid of the compartment that contains the work request. Work requests should be scoped to
          the same compartment as the resource the work request affects. If the work request affects multiple resources,
          and those resources are not in the same compartment, it is up to the service team to pick the primary
          resource whose compartment should be used
      resources:
        type: array
        items:
          $ref: '#/definitions/WorkRequestResource'
        description: The resources affected by this work request.
      percentComplete:
        type: number
        format: float
        description: Percentage of the request completed.
      timeAccepted:
        type: string
        format: date-time
        description: |
          The date and time the request was created, as described in
          [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
      timeStarted:
        type: string
        format: date-time
        description: |
          The date and time the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339),
          section 14.29.
      timeFinished:
        type: string
        format: date-time
        description: |
          The date and time the object was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
    required:
      - operationType
      - status
      - id
      - compartmentId
      - resources
      - percentComplete
      - timeAccepted

  WorkRequestCollection:
    type: object
    description: Results of a list of WorkRequest.
    required:
      - items
    properties:
      items:
        type: array
        description: WorkRequest items found for the search.
        items:
          $ref: "#/definitions/WorkRequestSummary"

  WorkRequestResource:
    description: A resource created or operated on by a work request.
    properties:
      entityType:
        type: string
        description: The resource type the work request affects.
      actionType:
        description: |
          The way in which this resource is affected by the work tracked in the work request.
          A resource being created, updated, or deleted will remain in the IN_PROGRESS state until
          work is complete for that resource at which point it will transition to CREATED, UPDATED,
          or DELETED, respectively.
        x-obmcs-top-level-enum: '#/definitions/ActionType'
        enum: *ACTIONTYPE
        type: string
      identifier:
        type: string
        description: The identifier of the resource the work request affects.
      entityUri:
        type: string
        description: The URI path that the user can do a GET on to access the resource metadata
    required:
      - actionType
      - entityType
      - identifier

  WorkRequestError:
    description: An error encountered while executing a work request.
    properties:
      code:
        type: string
        description: |
          A machine-usable code for the error that occured. Error codes are listed on
          (https://docs.cloud.oracle.com/Content/API/References/apierrors.htm)
      message:
        type: string
        description: A human readable description of the issue encountered.
      timestamp:
        type: string
        format: date-time
        description: The time the error occured. An RFC3339 formatted datetime string.
    required:
      - code
      - message
      - timestamp

  WorkRequestErrorCollection:
    type: object
    description: Results of a list of WorkRequest errors encountered while executing a work request.
    required:
      - items
    properties:
      items:
        type: array
        description: WorkRequestError items found for the listing.
        items:
          $ref: "#/definitions/WorkRequestError"

  WorkRequestLogEntry:
    description: A log message from the execution of a work request.
    properties:
      message:
        type: string
        description: Human-readable log message.
      timestamp:
        type: string
        format: date-time
        description: The time the log message was written. An RFC3339 formatted datetime string
    required:
      - message
      - timestamp

  WorkRequestLogEntryCollection:
    type: object
    description: Results of a list of log message from the execution of a work request.
    required:
      - items
    properties:
      items:
        type: array
        description: WorkRequestLogEntry items found for the listing.
        items:
          $ref: "#/definitions/WorkRequestLogEntry"

#==========[ Parameters ]================================================================================================
parameters:
# Shared query params

  CompartmentIdOptionalQueryParam:
    name: compartmentId
    in: query
    required: false
    type: string
    description: The ID of the compartment in which to list resources.
    x-default-description: Empty only if the parent projectId or deployPipelineId query param is not specified.

  CompartmentIdQueryParam:
    name: compartmentId
    in: query
    required: true
    type: string
    minLength: 32
    maxLength: 255
    description: The ID of the compartment in which to list resources.

  PaginationLimitQueryParam:
    name: limit
    in: query
    type: integer
    minimum: 1
    maximum: 1000
    default: 10
    description: The maximum number of items to return.

  PaginationTokenQueryParam:
    name: page
    in: query
    type: string
    minLength: 1
    description: The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.

  SortOrderQueryParam:
    name: sortOrder
    in: query
    type: string
    x-obmcs-top-level-enum: '#/definitions/SortOrder'
    enum: *SORTORDER
    default: 'ASC'
    description: The sort order to use, either 'asc' or 'desc'.

  SortByQueryParam:
    name: sortBy
    in: query
    type: string
    enum:
      - timeCreated
      - displayName
    default: 'timeCreated'
    description: |
      The field to sort by. Only one sort order may be provided. Default order for timeCreated is descending. Default order for displayName is ascending. If no value is specified timeCreated is default.

  DisplayNameQueryParam:
    in: query
    maxLength: 255
    minLength: 1
    name: displayName
    type: string
    x-default-description: 'null'
    description: A filter to return only resources that match the entire display name given.

  RequestIdHeader:
    name: opc-request-id
    required: false
    in: header
    type: string
    description: |
        Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
        a particular request, please provide the request ID.

  RetryTokenHeader:
    description: |
      A token that uniquely identifies a request so it can be retried in case of a timeout or
      server error without risk of executing that same action again. Retry tokens expire after 24
      hours, but can be invalidated before then due to conflicting operations. For example, if a resource
      has been deleted and purged from the system, then a retry of the original creation request
      might be rejected.
    in: header
    maxLength: 64
    minLength: 1
    name: opc-retry-token
    required: false
    type: string

  IfMatchHeader:
    description: |
      For optimistic concurrency control. In the PUT or DELETE call
      for a resource, set the `if-match` parameter to the value of the
      etag from a previous GET or POST response for that resource.
      The resource will be updated or deleted only if the etag you
      provide matches the resource's current etag value.
    in: header
    name: if-match
    required: false
    type: string

  NameQueryParam:
      in: query
      maxLength: 255
      minLength: 1
      name: name
      type: string
      x-default-description: 'null'
      description: A filter to return only resources that match the entire name given.

  ProjectIdentifierPathParam:
      name: projectId
      type: string
      in: path
      required: true
      description: unique Project identifier

  ProjectIdentifierQueryParam:
      name: projectId
      type: string
      in: query
      required: false
      description: unique Project identifier
      x-default-description: "null"

  DeployEnvironmentIdentifierPathParam:
    name: deployEnvironmentId
    type: string
    in: path
    required: true
    description: unique Environment identifier

  DeployArtifactIdentifierPathParam:
    name: deployArtifactId
    type: string
    in: path
    required: true
    description: unique Artifact identifier

  DeployPipelineIdentifierPathParam:
    name: deployPipelineId
    type: string
    in: path
    required: true
    description: unique Pipeline identifier

  DeployPipelineIdQueryParam:
    name: deployPipelineId
    in: query
    required: false
    type: string
    description: The ID of the parent Pipeline.
    x-default-description: ID of the parent Pipeline for filtering.

  DeployStageIdentifierPathParam:
    name: deployStageId
    type: string
    in: path
    required: true
    description: unique Stage identifier

  DeploymentIdentifierPathParam:
    name: deploymentId
    type: string
    in: path
    required: true
    description: unique Deployment identifier

  ResourceIdQueryParam:
      name: id
      type: string
      in: query
      required: false
      description: unique identifier or OCID for listing a single resource by id.
      x-default-description: "null"

# WorkRequest parameters

  WorkRequestIdQueryParam:
      name: workRequestId
      in: query
      type: string
      x-default-description: 'null'
      description: The ID of the asynchronous work request.

  WorkRequestIdPathParam:
    name: workRequestId
    in: path
    required: true
    type: string
    description: The ID of the asynchronous request.

  WorkRequestSortByQueryParam:
    name: sortBy
    in: query
    type: string
    enum:
      - timeAccepted
    default: 'timeAccepted'
    description: |
      The field to sort by. Only one sort order may be provided. Default order for timeAccepted is descending.

  WorkRequestStatusQueryParam:
    name: status
    in: query
    required: false
    type: string
    x-obmcs-top-level-enum: '#/definitions/OperationStatus'
    enum: *OPERATIONSTATUS
    x-default-description: 'null'
    description: A filter to return only resources their lifecycleState matches the given OperationStatus.

  ResourceIdentifierQueryParam:
    name: resourceId
    type: string
    in: query
    x-default-description: 'null'
    description: The ID of the resource affected by the work request.

# Preprocessed by spec-conditionals-preprocessor-plugin version 1.0.17
